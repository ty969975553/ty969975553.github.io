<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>C++ tuple输出</title>
    <url>/2020/03/25/C++tuple/</url>
    <content><![CDATA[<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// c++11</span></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> Tuple, <span class="keyword">size_t</span> N&gt;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">tuple_print</span> &#123;</span></span><br><span class="line">   <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">(<span class="keyword">const</span> Tuple&amp; t, <span class="built_in">std</span>::ostream&amp; os)</span> </span>&#123;</span><br><span class="line">       tuple_print&lt;Tuple, N - <span class="number">1</span>&gt;::<span class="built_in">print</span>(t, os);</span><br><span class="line">       os &lt;&lt; <span class="string">", "</span> &lt;&lt; <span class="built_in">std</span>::<span class="built_in">get</span>&lt;N - <span class="number">1</span>&gt;(t);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">// 类模板的特化版本</span></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> Tuple&gt;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">tuple_print</span>&lt;Tuple, 1&gt; &#123;</span></span><br><span class="line">   <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">(<span class="keyword">const</span> Tuple&amp; t, <span class="built_in">std</span>::ostream&amp; os)</span> </span>&#123;</span><br><span class="line">       os &lt;&lt; <span class="string">"("</span> &lt;&lt; <span class="built_in">std</span>::<span class="built_in">get</span>&lt;<span class="number">0</span>&gt;(t);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// operator&lt;&lt;</span></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span>... Args&gt;</span><br><span class="line"><span class="built_in">std</span>::ostream&amp; <span class="keyword">operator</span> &lt;&lt;(<span class="built_in">std</span>::ostream&amp; os, <span class="keyword">const</span> <span class="built_in">std</span>::tuple&lt;Args...&gt;&amp; t) &#123;</span><br><span class="line">   tuple_print&lt;<span class="keyword">decltype</span>(t), <span class="keyword">sizeof</span>...(Args)&gt;::<span class="built_in">print</span>(t, os);</span><br><span class="line">   <span class="keyword">return</span> os &lt;&lt; <span class="string">")"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//C++14</span></span><br><span class="line"><span class="comment">// 数组转换为 tuple</span></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> Array, <span class="built_in">std</span>::<span class="keyword">size_t</span>... I&gt;</span><br><span class="line"><span class="function"><span class="keyword">auto</span> <span class="title">a2t_impl</span><span class="params">(<span class="keyword">const</span> Array&amp; a, <span class="built_in">std</span>::index_sequence&lt;I...&gt;)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">std</span>::make_tuple(a[I]...);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T, <span class="built_in">std</span>::<span class="keyword">size_t</span> N, <span class="keyword">typename</span> Indices = <span class="built_in">std</span>::make_index_sequence&lt;N&gt;&gt;</span><br><span class="line"><span class="keyword">auto</span> a2t(<span class="keyword">const</span> <span class="built_in">std</span>::<span class="built_in">array</span>&lt;T, N&gt;&amp; a) &#123;</span><br><span class="line">    <span class="keyword">return</span> a2t_impl(a, Indices&#123;&#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 漂亮地打印 tuple</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="class"><span class="keyword">class</span> <span class="title">Ch</span>, <span class="title">class</span> <span class="title">Tr</span>, <span class="title">class</span> <span class="title">Tuple</span>, <span class="title">std</span>:</span>:<span class="keyword">size_t</span>... Is&gt;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print_tuple_impl</span><span class="params">(<span class="built_in">std</span>::basic_ostream&lt;Ch, Tr&gt;&amp; os,</span></span></span><br><span class="line"><span class="function"><span class="params">    <span class="keyword">const</span> Tuple&amp; t,</span></span></span><br><span class="line"><span class="function"><span class="params">    <span class="built_in">std</span>::index_sequence&lt;Is...&gt;)</span> </span>&#123;</span><br><span class="line">    ((os &lt;&lt; (Is == <span class="number">0</span> ? <span class="string">""</span> : <span class="string">", "</span>) &lt;&lt; <span class="built_in">std</span>::<span class="built_in">get</span>&lt;Is&gt;(t)), ...);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="class"><span class="keyword">class</span> <span class="title">Ch</span>, <span class="title">class</span> <span class="title">Tr</span>, <span class="title">class</span>... <span class="title">Args</span>&gt;</span></span><br><span class="line"><span class="class"><span class="title">auto</span>&amp; <span class="title">operator</span>&lt;&lt;(std::basic_ostream&lt;Ch, Tr&gt;&amp; os, const std::tuple&lt;Args...&gt;&amp; t) &#123;</span></span><br><span class="line"><span class="class">    os &lt;&lt; "(";</span></span><br><span class="line"><span class="class">    print_tuple_impl(os, t, std::index_sequence_for&lt;Args...&gt;&#123;&#125;);</span></span><br><span class="line"><span class="class">    return os &lt;&lt; ")";</span></span><br><span class="line"><span class="class">&#125;</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>C++</tag>
      </tags>
  </entry>
  <entry>
    <title>C++ const mutable volatile</title>
    <url>/2020/04/08/C++%E5%85%B3%E9%94%AE%E8%AF%8D/</url>
    <content><![CDATA[<h2 id="修饰关键词"><a href="#修饰关键词" class="headerlink" title="修饰关键词"></a>修饰关键词</h2><h3 id="const"><a href="#const" class="headerlink" title="const"></a>const</h3><p>4种修饰</p>
<h3 id="mutable"><a href="#mutable" class="headerlink" title="mutable"></a>mutable</h3><p>适用场景: 当一个成员函数被从const 修饰后，需要修改某个成员属性 mutable 修饰属性</p>
<h3 id="volatile"><a href="#volatile" class="headerlink" title="volatile"></a>volatile</h3><p>三大特性：</p>
<ul>
<li>易变性</li>
<li>不可优化性</li>
<li>顺序性 (volatile修饰的变量不会被编译器优化乱序，但是非volatile修饰的变量可能会跟volatile变量乱序，依赖于cpu指令,不可以作为线程顺序控制)</li>
</ul>
<p>Java的关键词增强较多不一样<br><a href="http://hedengcheng.com/?p=725" target="_blank" rel="noopener">http://hedengcheng.com/?p=725</a></p>
<h3 id="static"><a href="#static" class="headerlink" title="static"></a>static</h3><ul>
<li>C语言</li>
</ul>
<ol>
<li><p>静态局部变量(全局数据区) 用于函数体内部修饰变量，这种变量的生存期长于该函数</p>
</li>
<li><p>静态全局变量和静态全局函数 定义在函数体外，用于修饰全局变量，表示该变量只在本文件可见</p>
</li>
</ol>
<ul>
<li>C++</li>
</ul>
<ol>
<li><p>静态数据成员 类成员 每个class有一份</p>
</li>
<li><p>静态成员函数 (不可访问普通成员)</p>
</li>
</ol>
<h3 id="final"><a href="#final" class="headerlink" title="final"></a>final</h3><h3 id="sealed"><a href="#sealed" class="headerlink" title="sealed"></a>sealed</h3><p>/clr</p>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>C++</tag>
      </tags>
  </entry>
  <entry>
    <title>C++编译问题总结</title>
    <url>/2020/03/25/C++%E7%BC%96%E8%AF%91%E9%97%AE%E9%A2%98%E6%80%BB%E7%BB%93/</url>
    <content><![CDATA[<h3 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h3><ol>
<li><p>C4819 解决方案<br> 使用正则表达式搜索 [^\x00-\x7F]替换为空</p>
<p> 或者保存为正确的编码方式</p>
<p> 主要原因： 源码中含有非当前编码集识别的字符</p>
</li>
<li><p>midl 编译不过去</p>
<p> 在c盘根目录创建名字叫program的空文件就可以无法找到exe编译IDL</p>
</li>
</ol>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>编译问题</tag>
      </tags>
  </entry>
  <entry>
    <title>C++链接问题总结</title>
    <url>/2020/03/25/C++%E9%93%BE%E6%8E%A5%E9%97%AE%E9%A2%98%E6%80%BB%E7%BB%93/</url>
    <content><![CDATA[<h3 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h3><ol>
<li><p>QT5: LNK1123: 转换到 COFF 期间失败: 文件无效或损坏<br> 解答： vs的某个exe和系统的exe不匹配<br> cvtres.exe<br> <a href="http://www.cnblogs.com/newpanderking/articles/3372969.html" target="_blank" rel="noopener">http://www.cnblogs.com/newpanderking/articles/3372969.html</a><br> 实在不行就安装vs的sp1补丁包</p>
</li>
<li><p>fatal error LNK1318: 非意外的 PDB 错误<br> 清理重新编译、 去除链接器生成调试信息</p>
</li>
<li><p>fatal error LNK2019: 无法解析的外部符号 _sprintf<br> 当二进制文件lib为旧版本编译器生成，使用高版本vs重新编译可能会出现该错误，需要在lib输入添加</p>
</li>
</ol>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>链接问题</tag>
      </tags>
  </entry>
  <entry>
    <title>Console 工程设置</title>
    <url>/2020/03/24/Console%20%E5%B7%A5%E7%A8%8B%E8%AE%BE%E7%BD%AE/</url>
    <content><![CDATA[<p>c++  控制台</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">SetConsoleOutputCP (<span class="number">65001</span>);</span><br><span class="line">CONSOLE_FONT_INFOEX info = &#123; <span class="number">0</span> &#125;; <span class="comment">// 以下设置字体来支持中文显示。</span></span><br><span class="line">info.cbSize = <span class="keyword">sizeof</span>(info);</span><br><span class="line">info.dwFontSize.Y = <span class="number">16</span>; <span class="comment">// leave X as zero</span></span><br><span class="line">info.FontWeight = FW_NORMAL;</span><br><span class="line">wcscpy(info.FaceName, <span class="string">L"Consolas"</span>);</span><br><span class="line">SetCurrentConsoleFontEx(GetStdHandle(STD_OUTPUT_HANDLE), <span class="literal">NULL</span>, &amp;info);</span><br></pre></td></tr></table></figure>

<p>copy from vlpp</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">namespace</span> UI</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">namespace</span> <span class="built_in">Console</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="class"><span class="keyword">class</span> <span class="title">Console</span></span></span><br><span class="line"><span class="class">        &#123;</span></span><br><span class="line">        <span class="keyword">public</span>:</span><br><span class="line">            <span class="comment">/// &lt;summary&gt;Write to the command line window.&lt;/summary&gt;</span></span><br><span class="line">            <span class="comment">/// &lt;param name="string"&gt;Content to write.&lt;/param&gt;</span></span><br><span class="line">            <span class="comment">/// &lt;param name="length"&gt;Size of the content in wchar_t. The zero terminator is not</span></span><br><span class="line">            <span class="comment">/// included.&lt;/param&gt;</span></span><br><span class="line">            <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Write</span><span class="params">(<span class="keyword">const</span> <span class="keyword">wchar_t</span>* <span class="built_in">string</span>, <span class="keyword">int</span> length)</span></span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">/// &lt;summary&gt;Write to the command line window.&lt;/summary&gt;</span></span><br><span class="line">            <span class="comment">/// &lt;param name="string"&gt;Content to write.&lt;/param&gt;</span></span><br><span class="line">            <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Write</span><span class="params">(<span class="keyword">const</span> <span class="keyword">wchar_t</span>* <span class="built_in">string</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">/// &lt;summary&gt;Write to the command line window.&lt;/summary&gt;</span></span><br><span class="line">            <span class="comment">/// &lt;param name="string"&gt;Content to write.&lt;/param&gt;</span></span><br><span class="line">            <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Write</span><span class="params">(<span class="keyword">const</span> <span class="built_in">std</span>::<span class="built_in">wstring</span>&amp; <span class="built_in">string</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">/// &lt;summary&gt;Write to the command line window with a CRLF.&lt;/summary&gt;</span></span><br><span class="line">            <span class="comment">/// &lt;param name="string"&gt;Content to write.&lt;/param&gt;</span></span><br><span class="line">            <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">WriteLine</span><span class="params">(<span class="keyword">const</span> <span class="built_in">std</span>::<span class="built_in">wstring</span>&amp; <span class="built_in">string</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">/// &lt;summary&gt;Read from the command line window.&lt;/summary&gt;</span></span><br><span class="line">            <span class="comment">/// &lt;returns&gt;The whole line read from the command line window.&lt;/returns&gt;</span></span><br><span class="line">            <span class="keyword">static</span> <span class="built_in">std</span>::<span class="function"><span class="built_in">wstring</span> <span class="title">Read</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">            <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">SetColor</span><span class="params">(<span class="keyword">bool</span> red, <span class="keyword">bool</span> green, <span class="keyword">bool</span> blue, <span class="keyword">bool</span> light)</span></span>;</span><br><span class="line">            <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">SetTitle</span><span class="params">(<span class="keyword">const</span> <span class="built_in">std</span>::<span class="built_in">wstring</span>&amp; <span class="built_in">string</span>)</span></span>;</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125; <span class="comment">// namespace console</span></span><br><span class="line">&#125; <span class="comment">// namespace UI</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>c++</tag>
        <tag>标准库</tag>
      </tags>
  </entry>
  <entry>
    <title>Microsoft Defender ATP</title>
    <url>/2020/03/25/Microsoft%20Defender%20ATP/</url>
    <content><![CDATA[<h3 id="Microsoft-Defender-ATP"><a href="#Microsoft-Defender-ATP" class="headerlink" title="Microsoft Defender ATP"></a>Microsoft Defender ATP</h3><p> <img src="MicrosoftDefenderATP.svg" alt="xmind"></p>
<h4 id="减少攻击面"><a href="#减少攻击面" class="headerlink" title="减少攻击面"></a>减少攻击面</h4><pre><code>| 规则名称 | GUID | 文件 &amp; 文件夹排除 | 支持的最低操作系统 |
| ---- | ---- |---- | ---- |
| 阻止来自电子邮件客户端和 Web 邮件的可执行内容 | BE9BA2D9-53EA-4CDC-84E5-9B1EEEE46550 | 支持 | Windows 10 版本 1709 (RS3、内部版本 16299) 或更高版本 |
| 阻止所有 Office 应用程序创建子进程 | D4F940AB-401B-4EFC-AADC-AD5F3C50688A | 支持 | Windows 10 版本 1709 (RS3、内部版本 16299) 或更高版本 |
| 阻止 Office 应用程序创建可执行内容 | 3B576869-A4EC-4529-8536-B80A7769E899 | 支持 | Windows 10 版本 1709 (RS3、内部版本 16299) 或更高版本 |
| 阻止 Office 应用程序将代码注入其他进程 | 75668C1F-73B5-4CF0-BB93-3ECF5CB7CC84 | 支持 | Windows 10 版本 1709 (RS3、内部版本 16299) 或更高版本 |
| 阻止 JavaScript 或 VBScript 启动下载的可执行内容 | D3E037E1-3EB8-44C8-A917-57927947596D | 支持 | Windows 10 版本 1709 (RS3、内部版本 16299) 或更高版本 |
| 阻止执行可能混淆的脚本 | 5BEB7EFE-FD9A-4556-801D-275E5FFC04CC | 支持 | Windows 10 版本 1709 (RS3、内部版本 16299) 或更高版本 |
| 阻止 Office 宏的 Win32 API 调用 | 92E97FA1-2EDF-4476-BDD6-9DD0B4DDDC7B | 支持 | Windows 10 版本 1709 (RS3、内部版本 16299) 或更高版本 |
| 阻止可执行文件，除非它们满足流行、年龄或受信任的列表条件 | 01443614-cd74-433a-b99e-2ecdc07bfc25 | 支持 | Windows 10 版本 1709 (RS3、内部版本 16299) 或更高版本 |
| 对勒索软件使用高级防护 | c1db55ab-c21a-4637-bb3f-a12568109d35 | 支持 | Windows 10 版本 1709 (RS3、内部版本 16299) 或更高版本 |
| 阻止从 Windows 本地安全颁发机构子系统中盗取凭据 ( # A0) | 9e6c4e1f-7d60-472f-ba1a-a39ef669e4b2 | 支持 | Windows 10 版本 1709 (RS3、内部版本 16299) 或更高版本 |
| 阻止从 PSExec 和 WMI 命令发起的进程创建 | d1e49aac-8f56-4280-b9ba-993a6d77406c | 支持 | Windows 10 版本 1709 (RS3、内部版本 16299) 或更高版本 |
| 阻止从 USB 运行的不受信任和未签名的进程 | b2b3f03d-6a65-4f7b-a9c7-1c7ef74a9ba4 | 支持 | Windows 10 版本 1709 (RS3、内部版本 16299) 或更高版本 |
| 阻止 Office 通信应用程序创建子进程 | 26190899-1602-49e8-8b27-eb1d0a1ce869 | 支持 | Windows 10 版本 1709 (RS3、内部版本 16299) 或更高版本 |
| 阻止 Adobe Reader 创建子流程 | 7674ba52-37eb-4a4f-a9a1-f0f9a1619a2c | 支持 | Windows 10 版本 1709 (RS3、内部版本 16299) 或更高版本 |
| 通过 WMI 事件订阅阻止持久性 | e6db77e5-3df2-4cf1-b95a-636979351e5b | 不支持 | Windows 10 版本 1903 (内部版本 18362) 或更高版本 |</code></pre>
<h4 id="Exploit-Protection-漏洞利用保护"><a href="#Exploit-Protection-漏洞利用保护" class="headerlink" title="Exploit Protection (漏洞利用保护)"></a>Exploit Protection (漏洞利用保护)</h4><ol>
<li><p>任意代码保护(ACG) Arbitrary Code Guard<br><a href="https://www.anquanke.com/post/id/145884" target="_blank" rel="noopener">https://www.anquanke.com/post/id/145884</a></p>
</li>
<li><p>阻止远程图像(Block remote images) 通过发送待远程图片的邮件，根据服务器图片的访问情况，确认邮件查阅</p>
</li>
<li><p>阻止不受信任的字体(Block untrusted fonts)</p>
</li>
<li><p>数据执行保护(DEP) DEP 的主要优点是可以帮助防止数据页执行代码</p>
</li>
<li><p>导出地址筛选(EAF)</p>
</li>
<li><p>强制ASLR   Address Space Load Randomization</p>
</li>
<li><p>Null 页安全缓解</p>
</li>
<li><p>随机内存分配(由下而上 ASLR)</p>
</li>
<li><p>模拟执行 (SimExec)</p>
</li>
<li><p>验证 API 调用 (CallerCheck)</p>
</li>
<li><p>验证异常链 (SEHOP)</p>
</li>
<li><p>验证堆栈完整性 (StackPivot)</p>
</li>
<li><p>证书信任（可配置的证书固定） 企业版证书</p>
</li>
<li><p>堆喷射分配</p>
</li>
<li><p>阻止低完整性图像</p>
</li>
<li><p>代码完整性防护</p>
</li>
<li><p>禁用扩展点</p>
</li>
<li><p>禁用win32k系统调用</p>
</li>
<li><p>不允许子进程</p>
</li>
<li><p>导入地址筛选(IAF)</p>
</li>
<li><p>验证处理使用情况</p>
</li>
<li><p>验证堆完整性</p>
</li>
<li><p>验证映像依赖项完整性</p>
</li>
</ol>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>Windows安全</tag>
      </tags>
  </entry>
  <entry>
    <title>google构建</title>
    <url>/2020/04/26/GN%E6%9E%84%E5%BB%BA%E7%B3%BB%E7%BB%9F/</url>
    <content><![CDATA[<h2 id="GN构建系统"><a href="#GN构建系统" class="headerlink" title="GN构建系统"></a>GN构建系统</h2><h2 id="下载depot-tools并设置环境变量"><a href="#下载depot-tools并设置环境变量" class="headerlink" title="下载depot_tools并设置环境变量"></a>下载depot_tools并设置环境变量</h2><ol>
<li><p>git clone <a href="https://chromium.googlesource.com/chromium/tools/depot_tools.git" target="_blank" rel="noopener">https://chromium.googlesource.com/chromium/tools/depot_tools.git</a> (需要翻墙)</p>
</li>
<li><p>设置环境变量 将depot_tools的路径添加到环境变量(建议放置第一条，在python环境变量之前)</p>
</li>
<li><p>禁止工具升级 ==设置环境变量== DEPOT_TOOLS_UPDATE=0 或者 ==删除.git目录==</p>
</li>
</ol>
<p>工具库包含</p>
<ul>
<li><input checked="" disabled="" type="checkbox"> gclient 支持svn和git</li>
<li><input checked="" disabled="" type="checkbox"> gcl 预提交脚本for svn python的<a href="https://github.com/rietveld-codereview/rietveld" target="_blank" rel="noopener">codeview</a></li>
<li><input checked="" disabled="" type="checkbox"> git-cl 预提交脚本for git python的<a href="https://github.com/rietveld-codereview/rietveld" target="_blank" rel="noopener">codeview</a></li>
<li><input checked="" disabled="" type="checkbox"> svn</li>
<li><input checked="" disabled="" type="checkbox"> drover 快速还原svn提交</li>
<li><input checked="" disabled="" type="checkbox"> cpplint.py 静态检查工具</li>
<li><input checked="" disabled="" type="checkbox"> pylint python静态检查工具</li>
<li><input checked="" disabled="" type="checkbox"> presubmit_support.py脚本</li>
<li><input checked="" disabled="" type="checkbox"> repo: The repo tool.</li>
<li><input checked="" disabled="" type="checkbox"> zsh-goodies 补全</li>
<li><input checked="" disabled="" type="checkbox"> wtf</li>
<li><input checked="" disabled="" type="checkbox"> weekly</li>
<li><input checked="" disabled="" type="checkbox"> git-gs</li>
</ul>
<h2 id="GN-exe的生成"><a href="#GN-exe的生成" class="headerlink" title="GN exe的生成"></a>GN exe的生成</h2><p>GN是一个元构建系统，可为Ninja生成构建文件。</p>
<ol>
<li><p>git clone <a href="https://gn.googlesource.com/gn" target="_blank" rel="noopener">https://gn.googlesource.com/gn</a></p>
</li>
<li><p>python build/gen.py</p>
</li>
<li><p>ninja -C out(环境要有ninja)</p>
</li>
</ol>
<h2 id="GN使用命令"><a href="#GN使用命令" class="headerlink" title="GN使用命令"></a>GN使用命令</h2><ol>
<li><p>生成构建目录 gn gen out/windows_x86_debug</p>
</li>
<li><p>添加构建参数 gn args out/windows_x86_debug</p>
</li>
</ol>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// gn args --list out/windows_x86_debug</span></span><br><span class="line">is_debug = <span class="literal">true</span></span><br><span class="line">is_official_build=<span class="literal">false</span></span><br><span class="line">is_component_build = <span class="literal">false</span></span><br><span class="line">target_cpu=<span class="string">"x64"</span></span><br><span class="line">symbol_level = <span class="number">0</span></span><br><span class="line">is_win_fastlink = <span class="literal">true</span>   <span class="comment">//不生成pdb</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 交叉编译 https://gn.googlesource.com/gn/+/master/docs/cross_compiles.md</span></span><br><span class="line">target_os = <span class="string">"chromeos"</span></span><br><span class="line">target_os = <span class="string">"android"</span></span><br><span class="line"></span><br><span class="line">target_cpu = <span class="string">"arm"</span></span><br><span class="line">target_cpu = <span class="string">"x86"</span></span><br><span class="line">target_cpu = <span class="string">"x64"</span></span><br></pre></td></tr></table></figure>

<h2 id="编写GN文件"><a href="#编写GN文件" class="headerlink" title="编写GN文件"></a>编写GN文件</h2><h3 id="1-根目录下创建-gn文件"><a href="#1-根目录下创建-gn文件" class="headerlink" title="1. 根目录下创建.gn文件"></a>1. 根目录下创建.gn文件</h3><p>一般build目录下都有一些默认的配置 tool_chain</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># The location of the build configuration file.</span></span><br><span class="line">buildconfig = <span class="string">"//build/BUILDCONFIG.gn"</span></span><br></pre></td></tr></table></figure>

<h3 id="2-创建BUILD-gn"><a href="#2-创建BUILD-gn" class="headerlink" title="2. 创建BUILD.gn"></a>2. 创建BUILD.gn</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">## 可执行程序</span></span><br><span class="line">executable(<span class="string">"hello"</span>) &#123;</span><br><span class="line">  sources = [ <span class="string">"hello.cc"</span> ]</span><br><span class="line"></span><br><span class="line">  deps = [</span><br><span class="line">    <span class="string">":hello_shared"</span>,</span><br><span class="line">    <span class="string">":hello_static"</span>,</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">## dll</span></span><br><span class="line">shared_library(<span class="string">"hello_shared"</span>) &#123;</span><br><span class="line">  sources = [</span><br><span class="line">    <span class="string">"hello_shared.cc"</span>,</span><br><span class="line">    <span class="string">"hello_shared.h"</span>,</span><br><span class="line">  ]</span><br><span class="line"></span><br><span class="line">  defines = [ <span class="string">"HELLO_SHARED_IMPLEMENTATION"</span> ]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">## lib</span></span><br><span class="line">static_library(<span class="string">"hello_static"</span>) &#123;</span><br><span class="line">  sources = [</span><br><span class="line">    <span class="string">"hello_static.cc"</span>,</span><br><span class="line">    <span class="string">"hello_static.h"</span>,</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="ninja"><a href="#ninja" class="headerlink" title="ninja"></a>ninja</h2><ol>
<li><p>git clone <a href="git://github.com/ninja-build/ninja.git">git://github.com/ninja-build/ninja.git</a></p>
</li>
<li><p>cmake 编译或者<a href="https://github.com/ninja-build/ninja/releases" target="_blank" rel="noopener">https://github.com/ninja-build/ninja/releases</a>下载binary</p>
</li>
</ol>
<h2 id="编译问题"><a href="#编译问题" class="headerlink" title="编译问题"></a>编译问题</h2><p>warning: A compatible version of re2c (&gt;= 0.11.3) was not found; changes to src/*.in.cc will not affect your build.<br>wrote build.ninja.</p>
<p>安装re2c <a href="http://re2c.org/" target="_blank" rel="noopener">http://re2c.org/</a></p>
<h2 id="build-config"><a href="#build-config" class="headerlink" title="build config"></a>build config</h2><h3 id="win"><a href="#win" class="headerlink" title="win"></a>win</h3><ol>
<li>Microsoft Message Compiler (mc.exe)</li>
<li></li>
</ol>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>编译</tag>
        <tag>构建</tag>
        <tag>gn</tag>
        <tag>ninja</tag>
        <tag>depot_tools</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows程序诊断技术</title>
    <url>/2020/09/10/Windows%E7%A8%8B%E5%BA%8F%E8%AF%8A%E6%96%AD%E6%8A%80%E6%9C%AF/</url>
    <content><![CDATA[<h2 id="诊断程序"><a href="#诊断程序" class="headerlink" title="诊断程序"></a>诊断程序</h2><p>Windows具有支持桌面应用程序中以及桌面应用程序中的诊断的API和服务。</p>
<h3 id="相关"><a href="#相关" class="headerlink" title="相关"></a>相关</h3><ul>
<li><p>评估执行引擎(Assessment Execution Engine) AXE API Win7 以上 AxeHosting.h 查不到更多信息了</p>
</li>
<li><p>调试和错误处理</p>
</li>
<li><p>硬件计数器分析</p>
</li>
<li><p>网络诊断框架</p>
</li>
<li><p>网络监控器</p>
</li>
<li><p>性能计数器</p>
</li>
<li><p>性能日志和警报</p>
</li>
<li><p>流程快照</p>
</li>
<li><p>流程状态API</p>
</li>
<li><p>系统事件通知服务</p>
</li>
<li><p>系统监控器</p>
</li>
<li><p>工具帮助库</p>
</li>
<li><p>Windows错误报告</p>
</li>
<li><p>Windows事件</p>
</li>
<li><p>Windows Performance Analyzer(WPA)</p>
</li>
<li><p>Windows Performance Toolkit(WPT)</p>
</li>
<li><p>Windows故障排除平台</p>
</li>
</ul>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>windows</tag>
      </tags>
  </entry>
  <entry>
    <title>botan 编译</title>
    <url>/2020/03/24/botan%20%E7%BC%96%E8%AF%91/</url>
    <content><![CDATA[<p><img src="%E5%AF%86%E7%A0%81%E5%AD%A6.png" alt="密码学"></p>
<p>“C:\Program Files (x86)\Microsoft Visual Studio 14.0\Common7\Tools\VsDevCmd.bat”</p>
<p>python configure.py –cc=msvc –msvc-runtime=MT –disable-shared-library –cpu=x86_32 –cc-bin=”‘C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\bin\cl.exe’”</p>
<p>–list-modules</p>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>编译</tag>
        <tag>windows</tag>
        <tag>第三方库</tag>
      </tags>
  </entry>
  <entry>
    <title>c++序列化</title>
    <url>/2020/03/25/c++%E5%BA%8F%E5%88%97%E5%8C%96/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>C++</tag>
      </tags>
  </entry>
  <entry>
    <title>时间函数性能</title>
    <url>/2020/04/14/windows-v7-1-samples/</url>
    <content><![CDATA[<h3 id="时间函数"><a href="#时间函数" class="headerlink" title="时间函数"></a>时间函数</h3><ol>
<li><p>GetTickCount()  精度1毫秒</p>
</li>
<li><p>QueryPerformanceCounter()</p>
</li>
<li><p>time()</p>
</li>
<li><p>GetSystemTimeAsFileTime()</p>
</li>
<li><p>ftime()</p>
</li>
<li><p>GetLocalTime()  = GetSystemTimeAsFileTime() +  FileTimeToSystemTime()<br>精度 0.1 us</p>
</li>
</ol>
<p>Release Win32 Intel Core i7-8700 CPU @3.20GHz</p>
<table>
<thead>
<tr>
<th>函数名称</th>
<th>1000000次执行时间(us)</th>
</tr>
</thead>
<tbody><tr>
<td>GetSystemTimeAsFileTime() + FileTimeToSystemTime()</td>
<td>723,836</td>
</tr>
<tr>
<td>time()</td>
<td>559,098</td>
</tr>
<tr>
<td>GetLocalTime()</td>
<td>783,646</td>
</tr>
<tr>
<td>ftime()</td>
<td>788,472</td>
</tr>
<tr>
<td>GetTickCount()</td>
<td>31,506</td>
</tr>
<tr>
<td>QueryPerformanceCounter()</td>
<td>243,223</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>windows</tag>
        <tag>性能</tag>
      </tags>
  </entry>
  <entry>
    <title>windows下httpGet请求</title>
    <url>/2020/04/07/windows%E4%B8%8BhttpGet%E8%AF%B7%E6%B1%82/</url>
    <content><![CDATA[<h2 id="示例代码"><a href="#示例代码" class="headerlink" title="示例代码"></a>示例代码</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;list&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;WinInet.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> comment(lib, <span class="meta-string">"wininet.lib"</span>)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">namespace</span> WinInet</span><br><span class="line">&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> region HttpGet</span></span><br><span class="line">    <span class="keyword">static</span>  __inline</span><br><span class="line">        <span class="function"><span class="keyword">bool</span> <span class="title">ParserUrl</span><span class="params">(<span class="built_in">string</span> Url, <span class="built_in">string</span>&amp; Host, <span class="built_in">string</span>&amp; Filename, WORD&amp; Port)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        Port = INTERNET_DEFAULT_HTTP_PORT;</span><br><span class="line">        <span class="keyword">if</span> (Url.substr(<span class="number">0U</span>, <span class="number">7</span>) != <span class="string">"http://"</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        Url = Url.substr(<span class="number">7</span>);</span><br><span class="line">        <span class="keyword">int</span>  HostLen = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; (<span class="keyword">int</span>)Url.<span class="built_in">size</span>(); i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (Url[i] == (<span class="string">':'</span>) || Url[i] == (<span class="string">'/'</span>))</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            HostLen++;</span><br><span class="line">        &#125;</span><br><span class="line">        Host = Url.substr(<span class="number">0</span>, HostLen);</span><br><span class="line">        Url = Url.substr(HostLen);</span><br><span class="line">        <span class="keyword">if</span> (Url[<span class="number">0</span>] == <span class="string">':'</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; (<span class="keyword">int</span>)Url.<span class="built_in">size</span>(); i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (Url[i] == (<span class="string">'/'</span>))</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">string</span> strPort = Url.substr(<span class="number">0</span>, i);</span><br><span class="line">                    Port = atoi(strPort.c_str());</span><br><span class="line">                    Url = Url.substr(i);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        Filename = Url;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> _inline</span><br><span class="line">        <span class="function"><span class="built_in">string</span>  <span class="title">HttpGet</span><span class="params">(<span class="built_in">string</span> Url, DWORD&amp; httpStatus)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">string</span>              ret;</span><br><span class="line">        DWORD               byteread = <span class="number">0</span>;</span><br><span class="line">        HINTERNET           m_hInternetSession = <span class="literal">NULL</span>;</span><br><span class="line">        HINTERNET           m_hHttpConnection = <span class="literal">NULL</span>;</span><br><span class="line">        HINTERNET           m_hHttpFile = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">char</span>                <span class="built_in">buffer</span>[<span class="number">1024</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line">        <span class="comment">//</span></span><br><span class="line">        LPCSTR              ppszAcceptTypes[<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line">        DWORD   dwContentLength = <span class="number">0</span>, dwIndex = <span class="number">0</span>, filesize = <span class="number">0xffffffff</span>, totalSize = <span class="number">0</span>;</span><br><span class="line">        DWORD   dwBuffLen = <span class="keyword">sizeof</span>(dwContentLength);</span><br><span class="line"></span><br><span class="line">        DWORD dwFlags = INTERNET_FLAG_RELOAD;</span><br><span class="line">        DWORD TimeOut = <span class="number">15000</span>;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">string</span>  m_sServer, m_sObject;</span><br><span class="line">        WORD m_nPort = INTERNET_DEFAULT_HTTP_PORT;</span><br><span class="line">        httpStatus = DWORD(<span class="number">-1</span>);</span><br><span class="line">        <span class="keyword">if</span> (!ParserUrl(Url, m_sServer, m_sObject, m_nPort))</span><br><span class="line">            <span class="keyword">return</span> <span class="string">""</span>;</span><br><span class="line">        LPCSTR      headers = (<span class="string">"\r\n\r\n"</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        m_hInternetSession = ::InternetOpenA((<span class="string">"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:14.0) Gecko/20100101 Firefox/14.0.1"</span>), INTERNET_OPEN_TYPE_PRECONFIG, <span class="literal">NULL</span>, <span class="literal">NULL</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        InternetSetOption(m_hInternetSession, INTERNET_OPTION_CONNECT_TIMEOUT, &amp;TimeOut, <span class="keyword">sizeof</span>(DWORD));</span><br><span class="line">        InternetSetOption(m_hInternetSession, INTERNET_OPTION_DATA_RECEIVE_TIMEOUT, &amp;TimeOut, <span class="keyword">sizeof</span>(DWORD));</span><br><span class="line">        InternetSetOption(m_hInternetSession, INTERNET_OPTION_DATA_SEND_TIMEOUT, &amp;TimeOut, <span class="keyword">sizeof</span>(DWORD));</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (m_hInternetSession == <span class="literal">NULL</span>)</span><br><span class="line">            <span class="keyword">goto</span> EXIT;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        m_hHttpConnection = ::InternetConnectA(m_hInternetSession, m_sServer.c_str(), m_nPort, <span class="literal">NULL</span>,</span><br><span class="line">            <span class="literal">NULL</span>, INTERNET_SERVICE_HTTP, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">if</span> (m_hHttpConnection == <span class="literal">NULL</span>)</span><br><span class="line">            <span class="keyword">goto</span> EXIT;</span><br><span class="line">        <span class="comment">//Issue the request to read the file</span></span><br><span class="line"></span><br><span class="line">        ppszAcceptTypes[<span class="number">0</span>] = (<span class="string">"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8"</span>);  <span class="comment">//We support accepting any mime file type since this is a simple download of a file</span></span><br><span class="line">        ppszAcceptTypes[<span class="number">1</span>] = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        m_hHttpFile = HttpOpenRequestA(m_hHttpConnection, <span class="string">"GET"</span>, m_sObject.c_str(), <span class="string">"HTTP/1.0"</span>, <span class="literal">NULL</span>, ppszAcceptTypes, dwFlags, <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">if</span> (m_hHttpFile == <span class="literal">NULL</span>)</span><br><span class="line">            <span class="keyword">goto</span> EXIT;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!::HttpSendRequestA(m_hHttpFile, headers, <span class="built_in">strlen</span>(headers), <span class="literal">NULL</span>, <span class="number">0</span>))</span><br><span class="line">            <span class="keyword">goto</span> EXIT;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        dwBuffLen = <span class="keyword">sizeof</span>(httpStatus);</span><br><span class="line">        <span class="keyword">if</span> ((!HttpQueryInfoA(m_hHttpFile, HTTP_QUERY_STATUS_CODE | HTTP_QUERY_FLAG_NUMBER, &amp;httpStatus, &amp;dwBuffLen,</span><br><span class="line">            &amp;dwIndex)) || (httpStatus != HTTP_STATUS_OK))</span><br><span class="line">            <span class="keyword">goto</span> EXIT;</span><br><span class="line">        dwBuffLen = <span class="keyword">sizeof</span>(dwContentLength);</span><br><span class="line">        <span class="keyword">if</span> ((HttpQueryInfoA(m_hHttpFile, HTTP_QUERY_CONTENT_LENGTH | HTTP_QUERY_FLAG_NUMBER, &amp;dwContentLength, &amp;dwBuffLen,</span><br><span class="line">            &amp;dwIndex)))</span><br><span class="line">        &#123;</span><br><span class="line">            filesize = dwContentLength;</span><br><span class="line">            ret.reserve(dwContentLength);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            DWORD byteread = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">if</span> (!InternetReadFile(m_hHttpFile, <span class="built_in">buffer</span>, <span class="keyword">sizeof</span>(<span class="built_in">buffer</span>), &amp;byteread) || (byteread == <span class="number">0</span>))</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            totalSize += byteread;</span><br><span class="line">            ULONG written = <span class="number">0</span>;</span><br><span class="line">            ret += <span class="built_in">string</span>(<span class="built_in">buffer</span>, byteread);</span><br><span class="line">            <span class="comment">//ret-&gt;Write(buffer, byteread, &amp;written);</span></span><br><span class="line">            <span class="keyword">if</span> (totalSize &gt;= filesize)</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    EXIT:</span><br><span class="line">        <span class="keyword">if</span> (m_hInternetSession)</span><br><span class="line">            InternetCloseHandle(m_hInternetSession);</span><br><span class="line">        <span class="keyword">if</span> (m_hHttpConnection)</span><br><span class="line">            InternetCloseHandle(m_hHttpConnection);</span><br><span class="line">        <span class="keyword">if</span> (m_hHttpFile)</span><br><span class="line">            InternetCloseHandle(m_hHttpFile);</span><br><span class="line">        <span class="keyword">return</span>  ret;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> endregion HttpGet</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>使用方法</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">DWORD httpStatus;</span><br><span class="line">  <span class="built_in">std</span>::<span class="built_in">string</span> buff = WinInet::HttpGet(w2a(url.c_str()), httpStatus);</span><br><span class="line">  <span class="keyword">if</span> (httpStatus != <span class="number">200</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>windows</tag>
        <tag>网络</tag>
      </tags>
  </entry>
  <entry>
    <title>windows安全(1)</title>
    <url>/2020/03/24/windows%E5%AE%89%E5%85%A81/</url>
    <content><![CDATA[<h3 id="1-用户权限"><a href="#1-用户权限" class="headerlink" title="1.用户权限"></a>1.用户权限</h3><p>管理员Administrator账户        Administrators组<br>权限：</p>
<p>标准用户（受限用户）              user组</p>
<p>来宾用户                                   guest组</p>
<p>密码存在sam数据库</p>
<h3 id="2-sid"><a href="#2-sid" class="headerlink" title="2.sid"></a>2.sid</h3><p>查看Sid<br>whoami  /user</p>
<p>SID                      组                      用途<br>s-1-1-0               everyone<br>s-1-2-0               local<br>s-1-3-0               Creator owner<br>s-1-3-1               Creator Group</p>
<h3 id="3-ACL-访问控制列表-Access-Control-Lists"><a href="#3-ACL-访问控制列表-Access-Control-Lists" class="headerlink" title="3.ACL  访问控制列表(Access Control Lists)"></a>3.ACL  访问控制列表(Access Control Lists)</h3><p>登录给一个安全访问令牌（SAT） TOKEN 包含sid信息、</p>
<p>每个对象都有Acl    ACL包含了sid的信息</p>
<p>DACL 是安全对象(securable object)的一个属性</p>
<p>SACL 是系统中的一个列表，用来记录指定用户（组）、指定类型的访问的访问结果，并记录。</p>
<h3 id="4-ACE-访问控制项-Access-Control-ITEM"><a href="#4-ACE-访问控制项-Access-Control-ITEM" class="headerlink" title="4.ACE 访问控制项 (Access Control ITEM)"></a>4.ACE 访问控制项 (Access Control ITEM)</h3><h3 id="5-没有UAC文件系统和注册表虚拟化技术"><a href="#5-没有UAC文件系统和注册表虚拟化技术" class="headerlink" title="5.没有UAC文件系统和注册表虚拟化技术"></a>5.没有UAC文件系统和注册表虚拟化技术</h3><h3 id="6-应用程序清单文件"><a href="#6-应用程序清单文件" class="headerlink" title="6.应用程序清单文件"></a>6.应用程序清单文件</h3><p>1、RunAsInvoker<br>2、RunAsHighest<br>3、RunAsAdmin</p>
<h3 id="7-组域"><a href="#7-组域" class="headerlink" title="7.组域"></a>7.组域</h3>]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>windows安全</tag>
      </tags>
  </entry>
  <entry>
    <title>windows安全对象结构体</title>
    <url>/2020/05/06/windows%E5%AE%89%E5%85%A8%E5%AF%B9%E8%B1%A1%E7%BB%93%E6%9E%84%E4%BD%93/</url>
    <content><![CDATA[<h2 id="MSDN"><a href="#MSDN" class="headerlink" title="MSDN"></a>MSDN</h2><p><a href="https://docs.microsoft.com/zh-cn/windows/win32/secauthz/authorization-portal" target="_blank" rel="noopener">https://docs.microsoft.com/zh-cn/windows/win32/secauthz/authorization-portal</a></p>
<ol>
<li><p>SID_NAME_USE SID类型</p>
 <figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="keyword">enum</span> _SID_NAME_USE &#123;</span><br><span class="line">    SidTypeUser = <span class="number">1</span>,</span><br><span class="line">    SidTypeGroup,</span><br><span class="line">    SidTypeDomain,</span><br><span class="line">    SidTypeAlias,</span><br><span class="line">    SidTypeWellKnownGroup,</span><br><span class="line">    SidTypeDeletedAccount,</span><br><span class="line">    SidTypeInvalid,</span><br><span class="line">    SidTypeUnknown,</span><br><span class="line">    SidTypeComputer,</span><br><span class="line">    SidTypeLabel</span><br><span class="line">&#125; SID_NAME_USE, *PSID_NAME_USE;</span><br></pre></td></tr></table></figure>
</li>
<li><p>SECURITY_DESCRIPTOR</p>
 <figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> _<span class="title">SECURITY_DESCRIPTOR</span> &#123;</span></span><br><span class="line">BYTE  Revision;</span><br><span class="line">BYTE  Sbz1;</span><br><span class="line">SECURITY_DESCRIPTOR_CONTROL Control;</span><br><span class="line">PSID Owner;</span><br><span class="line">PSID Group;</span><br><span class="line">PACL Sacl;</span><br><span class="line">PACL Dacl;</span><br><span class="line">&#125; SECURITY_DESCRIPTOR, *PISECURITY_DESCRIPTOR;</span><br></pre></td></tr></table></figure>
</li>
<li><p>ACL</p>
<ul>
<li><p>DACL is a pointer to a discretionary ACL</p>
</li>
<li><p>SACL Sacl - is a pointer to a system ACL</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> _<span class="title">ACL</span> &#123;</span></span><br><span class="line">    BYTE  AclRevision;</span><br><span class="line">    BYTE  Sbz1;</span><br><span class="line">    WORD   AclSize;</span><br><span class="line">    WORD   AceCount;</span><br><span class="line">    WORD   Sbz2;</span><br><span class="line">&#125; ACL;</span><br><span class="line"><span class="keyword">typedef</span> ACL *PACL;</span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
<li><p>ACL_SIZE_INFORMATION</p>
 <figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> _<span class="title">ACL_SIZE_INFORMATION</span> &#123;</span></span><br><span class="line">    DWORD AceCount;</span><br><span class="line">    DWORD AclBytesInUse;</span><br><span class="line">    DWORD AclBytesFree;</span><br><span class="line">&#125; ACL_SIZE_INFORMATION;</span><br><span class="line"><span class="keyword">typedef</span> ACL_SIZE_INFORMATION *PACL_SIZE_INFORMATION;</span><br></pre></td></tr></table></figure>
</li>
<li><p>LookupAccountName</p>
 <figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">SID_NAME_USE snuType;</span><br><span class="line">LPVOID pUserSID = <span class="literal">NULL</span>;   <span class="comment">// 都置为0</span></span><br><span class="line">DWORD cbUserSID = <span class="number">0</span>;</span><br><span class="line">LPVOID szDomain = <span class="literal">NULL</span>;</span><br><span class="line">DWORD cbUserSID = <span class="number">0</span>;</span><br></pre></td></tr></table></figure>
</li>
<li><p>AddAce AddAccessAllowedAceEx</p>
 <figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//https://docs.microsoft.com/en-us/windows/win32/api/securitybaseapi/nf-securitybaseapi-addaccessallowedaceex</span></span><br><span class="line"><span class="function">BOOL <span class="title">AddAccessAllowedAceEx</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">PACL  pAcl,</span></span></span><br><span class="line"><span class="function"><span class="params">DWORD dwAceRevision,</span></span></span><br><span class="line"><span class="function"><span class="params">DWORD AceFlags,</span></span></span><br><span class="line"><span class="function"><span class="params">DWORD AccessMask,</span></span></span><br><span class="line"><span class="function"><span class="params">PSID  pSid</span></span></span><br><span class="line"><span class="function"><span class="params">)</span></span>;</span><br></pre></td></tr></table></figure>
</li>
<li><p>SID</p>
 <figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> SID_DEFINED</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SID_DEFINED</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> _<span class="title">SID</span> &#123;</span></span><br><span class="line">BYTE  Revision;</span><br><span class="line">BYTE  SubAuthorityCount;</span><br><span class="line">SID_IDENTIFIER_AUTHORITY IdentifierAuthority;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> MIDL_PASS</span></span><br><span class="line">[size_is(SubAuthorityCount)] DWORD SubAuthority[*];</span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span> <span class="comment">// MIDL_PASS</span></span></span><br><span class="line">DWORD SubAuthority[ANYSIZE_ARRAY];</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">// MIDL_PASS</span></span></span><br><span class="line">&#125; SID, *PISID;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure>
</li>
<li><p>EXPLICIT_ACCESS</p>
 <figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> _<span class="title">EXPLICIT_ACCESS_W</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    DWORD        grfAccessPermissions;</span><br><span class="line">    ACCESS_MODE  grfAccessMode;</span><br><span class="line">    DWORD        grfInheritance;</span><br><span class="line">    TRUSTEE_W    Trustee;</span><br><span class="line">&#125; EXPLICIT_ACCESS_W, *PEXPLICIT_ACCESS_W, EXPLICIT_ACCESSW, *PEXPLICIT_ACCESSW;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">enum</span> _ACCESS_MODE</span><br><span class="line">&#123;</span><br><span class="line">    NOT_USED_ACCESS = <span class="number">0</span>,</span><br><span class="line">    GRANT_ACCESS,</span><br><span class="line">    SET_ACCESS,</span><br><span class="line">    DENY_ACCESS,</span><br><span class="line">    REVOKE_ACCESS,</span><br><span class="line">    SET_AUDIT_SUCCESS,</span><br><span class="line">    SET_AUDIT_FAILURE</span><br><span class="line">&#125; ACCESS_MODE;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> _<span class="title">TRUSTEE_W</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> _<span class="title">TRUSTEE_W</span>          *<span class="title">pMultipleTrustee</span>;</span></span><br><span class="line">    MULTIPLE_TRUSTEE_OPERATION  MultipleTrusteeOperation;</span><br><span class="line">    TRUSTEE_FORM                TrusteeForm;</span><br><span class="line">    TRUSTEE_TYPE                TrusteeType;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> __midl</span></span><br><span class="line">    [switch_is(TrusteeForm)]</span><br><span class="line">    <span class="keyword">union</span></span><br><span class="line">    &#123;</span><br><span class="line">    [<span class="keyword">case</span>(TRUSTEE_IS_NAME)]</span><br><span class="line">        LPWSTR                  ptstrName;</span><br><span class="line">    [<span class="keyword">case</span>(TRUSTEE_IS_SID)]</span><br><span class="line">        SID                    *pSid;</span><br><span class="line">    [<span class="keyword">case</span>(TRUSTEE_IS_OBJECTS_AND_SID)]</span><br><span class="line">        OBJECTS_AND_SID        *pObjectsAndSid;</span><br><span class="line">    [<span class="keyword">case</span>(TRUSTEE_IS_OBJECTS_AND_NAME)]</span><br><span class="line">        OBJECTS_AND_NAME_W     *pObjectsAndName;</span><br><span class="line">    &#125;;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line">    LPWSTR                      ptstrName;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">&#125; TRUSTEE_W, *PTRUSTEE_W, TRUSTEEW, *PTRUSTEEW;</span><br></pre></td></tr></table></figure>
</li>
</ol>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>windows安全</tag>
      </tags>
  </entry>
  <entry>
    <title>windows安全性</title>
    <url>/2020/05/07/windows%E5%AE%89%E5%85%A8%E6%80%A7/</url>
    <content><![CDATA[<h2 id="Antimalware-Scan-Interface-AMSI"><a href="#Antimalware-Scan-Interface-AMSI" class="headerlink" title="Antimalware Scan Interface AMSI"></a>Antimalware Scan Interface <a href="https://docs.microsoft.com/zh-cn/windows/win32/amsi/antimalware-scan-interface-portal" target="_blank" rel="noopener">AMSI</a></h2><p>Windows反恶意软件扫描接口（AMSI）是一种通用接口标准，可让您的应用程序和服务与计算机上存在的任何反恶意软件产品集成。</p>
<h2 id="Authentication-认证"><a href="#Authentication-认证" class="headerlink" title="Authentication 认证"></a>Authentication 认证</h2><ol>
<li><p>LSA身份验证</p>
</li>
<li><p>凭据管理</p>
<p> 域凭证 域凭据的秘密部分（密码）受操作系统保护。只有使用LSA在进程中运行的代码才能读取和写入域凭据。应用程序仅限于编写域凭据</p>
<p> 通用凭证 通用凭证可以由用户进程读取和写入</p>
<p> 用户名格式</p>
<ul>
<li><a href="mailto:&#85;&#x73;&#x65;&#x72;&#78;&#x61;&#x6d;&#x65;&#64;&#69;&#120;&#x61;&#109;&#x70;&#108;&#101;&#x2e;&#77;&#x69;&#x63;&#114;&#x6f;&#115;&#111;&#102;&#116;&#x2e;&#99;&#111;&#109;">&#85;&#x73;&#x65;&#x72;&#78;&#x61;&#x6d;&#x65;&#64;&#69;&#120;&#x61;&#109;&#x70;&#108;&#101;&#x2e;&#77;&#x69;&#x63;&#114;&#x6f;&#115;&#111;&#102;&#116;&#x2e;&#99;&#111;&#109;</a></li>
<li>DOMAIN \ UserName</li>
</ul>
</li>
<li><p>智能卡身份验证</p>
</li>
<li><p>网络提供程序</p>
</li>
<li><p>安全支持提供程序接口(SSPI)</p>
</li>
<li><p>Winlogon</p>
</li>
<li><p>GINA</p>
</li>
</ol>
<h2 id="Authorization-授权"><a href="#Authorization-授权" class="headerlink" title="Authorization 授权"></a>Authorization 授权</h2><h3 id="Access-Control"><a href="#Access-Control" class="headerlink" title="Access Control"></a>Access Control</h3><pre><code>[美国国防部定义的C2级安全性](https://docs.microsoft.com/zh-cn/windows/win32/secauthz/c2-level-security)</code></pre>
<h4 id="访问控制模型"><a href="#访问控制模型" class="headerlink" title="访问控制模型"></a>访问控制模型</h4><ol>
<li><p>Access tokens</p>
</li>
<li><p>Security descriptors</p>
<p> 每个进程都拥有用户登陆时创建的访问令牌。<br> 访问令牌中包含安全标识符<br> 安全描述符中包含用户的帐户以及用户所属的任何组帐户</p>
</li>
<li><p>ACL 访问控制列表</p>
<p> DACL<br> SACL  进程必须要有 SE_SECURITY_NAME特权</p>
<p> ACE   Access Rights and Access Masks</p>
<table>
<thead>
<tr>
<th>ACE类型</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>Access-denied ACE</td>
<td>Used in a discretionary access control list (DACL) to deny access rights to a trustee.</td>
</tr>
<tr>
<td>Access-allowed ACE</td>
<td>Used in a DACL to allow access rights to a trustee.</td>
</tr>
<tr>
<td>System-audit ACE</td>
<td>Used in a system access control list (SACL) to generate an audit record when the trustee attempts to exercise the specified access rights.</td>
</tr>
</tbody></table>
<p> ==文件目录特有==</p>
<table>
<thead>
<tr>
<th>ACE类型</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>Access-denied object ACE</td>
<td>Used in a DACL to deny a trustee access to a property or property set on the object, or to limit ACE inheritance to a specified type of child object. Uses the ACCESS_DENIED_OBJECT_ACE structure.</td>
</tr>
<tr>
<td>Access-allowed object ACE</td>
<td>Used in a DACL to allow a trustee access to a property or property set on the object, or to limit ACE inheritance to a specified type of child object. Uses the ACCESS_ALLOWED_OBJECT_ACE structure.</td>
</tr>
<tr>
<td>SSystem-audit object ACE</td>
<td>Used in a SACL to log a trustee’s attempts to access a property or property set on the object, or to limit ACE inheritance to a specified type of child object. Uses the SYSTEM_AUDIT_OBJECT_ACE structure.</td>
</tr>
</tbody></table>
</li>
<li><p>Trustees 委托人</p>
<p> 用户账户、组账户、登录会话</p>
</li>
<li><p>Access Rights and Access Masks 访问权限和访问掩码</p>
<ul>
<li>Generic access rights 通用访问权限<ul>
<li>GENERIC_ALL</li>
<li>GENERIC_EXECUTE</li>
<li>GENERIC_READ</li>
<li>GENERIC_WRITE</li>
</ul>
</li>
<li>Standard access rights 标准访问权限<ul>
<li>DELETE</li>
<li>READ_CONTROL</li>
<li>SYNCHRONIZE</li>
<li>WRITE_DAC</li>
<li>WRITE_OWNER</li>
</ul>
</li>
<li>SACL access right SACL访问权限<ol>
<li>进程 AdjustTokenPrivileges 启用 SE_SECURITY_NAME</li>
<li>Request the ACCESS_SYSTEM_SECURITY access right when you open a handle to the object.</li>
<li>Get or set the object’s SACL by using a function such as GetSecurityInfo or SetSecurityInfo.</li>
<li>进程 AdjustTokenPrivileges 禁用 SE_SECURITY_NAME</li>
</ol>
</li>
<li>Directory services access rights 目录服务访问权限<ul>
<li>ACTRL_DS_OPEN</li>
<li>ACTRL_DS_CREATE_CHILD</li>
<li>ACTRL_DS_DELETE_CHILD</li>
<li>ACTRL_DS_LIST   枚举</li>
<li>ACTRL_DS_READ_PROP</li>
<li>ACTRL_DS_WRITE_PROP</li>
<li>ACTRL_DS_SELF 仅在执行对象支持的经过验证的权限检查后才允许访问。此标志可以单独用于执行对象的所有已验证权限检查，也可以与特定已验证权限的标识符组合以仅执行该检查。</li>
<li>ACTRL_DS_DELETE_TREE</li>
<li>ACTRL_DS_LIST_OBJECT</li>
<li>ACTRL_DS_CONTROL_ACCESS 仅在执行对象支持的扩展权限检查后才允许访问。该标志可以单独用于对对象执行所有扩展权限检查，也可以与特定扩展权限的标识符组合以仅执行该检查。</li>
</ul>
</li>
</ul>
</li>
<li><p>SID 安全描述符</p>
<table>
<thead>
<tr>
<th>Function</th>
<th>Description</th>
</tr>
</thead>
<tbody><tr>
<td>AllocateAndInitializeSid</td>
<td>用指定数量的子权限分配和初始化SID。</td>
</tr>
<tr>
<td>ConvertSidToStringSid</td>
<td>将SID转换为适合于显示，存储或传输的字符串格式。</td>
</tr>
<tr>
<td>ConvertStringSidToSid</td>
<td>将字符串格式的SID转换为有效的功能性SID。</td>
</tr>
<tr>
<td>CopySid</td>
<td>将源SID复制到缓冲区。</td>
</tr>
<tr>
<td>EqualPrefixSid</td>
<td>测试两个SID前缀值是否相等。SID前缀是除最后一个子权限值以外的整个SID。</td>
</tr>
<tr>
<td>EqualSid</td>
<td>测试两个SID是否相等。它们必须完全匹配才能被视为相等。</td>
</tr>
<tr>
<td>FreeSid</td>
<td>使用AllocateAndInitializeSid函数释放先前分配的SID 。</td>
</tr>
<tr>
<td>GetLengthSid</td>
<td>检索SID的长度。</td>
</tr>
<tr>
<td>GetSidIdentifierAuthority</td>
<td>检索指向SID标识符权限的指针。</td>
</tr>
<tr>
<td>GetSidLengthRequired</td>
<td>检索存储具有指定数量的子权限的SID所需的缓冲区大小。</td>
</tr>
<tr>
<td>GetSidSubAuthority</td>
<td>检索指向SID中指定的子权限的指针。</td>
</tr>
<tr>
<td>GetSidSubAuthorityCount</td>
<td>检索SID中的子机构数。</td>
</tr>
<tr>
<td>InitialSid</td>
<td>初始化SID结构。</td>
</tr>
<tr>
<td>IsValidSid</td>
<td>通过验证修订号是否在已知范围内以及子授权机构的数量小于最大值来测试SID的有效性。</td>
</tr>
<tr>
<td>LookupAccountName</td>
<td>检索与指定帐户名对应的SID。</td>
</tr>
<tr>
<td>LookupAccountSid</td>
<td>检索与指定的SID对应的帐户名。</td>
</tr>
</tbody></table>
<p> SID 结构</p>
<pre><code> S - R - I - S
 S-1-5-32-544  本地Administrators组
 1 修订级别
 5 SECURITY_NT_AUTHORITY
 32 SECURITY_BUILTIN_DOMAIN_RID
 544 DOMAIN_ALIAS_RID_ADMINS</code></pre>
</li>
</ol>
<h3 id="Access-Control-Editor"><a href="#Access-Control-Editor" class="headerlink" title="Access Control Editor"></a>Access Control Editor</h3><h3 id="Client-Server-Access-Control"><a href="#Client-Server-Access-Control" class="headerlink" title="Client/Server Access Control"></a>Client/Server Access Control</h3><h3 id="Access-Control-for-Application-Resources"><a href="#Access-Control-for-Application-Resources" class="headerlink" title="Access Control for Application Resources"></a>Access Control for Application Resources</h3><h3 id="Mandatory-Integrity-Control"><a href="#Mandatory-Integrity-Control" class="headerlink" title="Mandatory Integrity Control"></a>Mandatory Integrity Control</h3><p>强制完整性控制</p>
<p>Windows Vista定义了四个完整性级别：低(SID: S-1-16-4096)、中(SID: S-1-16-8192)、高(SID: S-1-16-12288)、系统(SID: S-1-16-16384)。默认情况下，普通用户启动的进程将获得中完整性级别，而提升的进程则获得高完整性级别。通过引入完整性级别，强制完整性控制可以分类隔离程序，使得沙箱化潜在危险程序（如进行网络通信的程序）成为可能。低完整性进程所拥有的访问权限少于那些拥有更高完整性级别的进程。</p>
<h3 id="User-Account-Control"><a href="#User-Account-Control" class="headerlink" title="User Account Control"></a>User Account Control</h3>]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>windows安全</tag>
      </tags>
  </entry>
  <entry>
    <title>window安全相关</title>
    <url>/2020/03/25/window%E5%AE%89%E5%85%A8%E6%A6%82%E5%BF%B5/</url>
    <content><![CDATA[<p>整理于 <a href="http://www.cppblog.com/weiym/archive/2013/08/25/202751.html?opt=admin" target="_blank" rel="noopener">http://www.cppblog.com/weiym/archive/2013/08/25/202751.html?opt=admin</a></p>
<p> <img src="https://note.youdao.com/yws/public/resource/0a79a67d0cd6f714303f83f564ba0dac/xmlnote/0A94AF3BCA574FCA9324E04A33A843E7/12904" alt="xmind"></p>
<h2 id="判断是否管理员权限"><a href="#判断是否管理员权限" class="headerlink" title="判断是否管理员权限"></a>判断是否管理员权限</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Windows API IsUserAnAdmin()</span></span><br><span class="line"><span class="function">BOOL <span class="title">Am_I_In_Admin_Group</span><span class="params">(BOOL bCheckAdminMode <span class="comment">/*= FALSE*/</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    BOOL   fAdmin;</span><br><span class="line">    HANDLE  hThread;</span><br><span class="line">    TOKEN_GROUPS *ptg = <span class="literal">NULL</span>;</span><br><span class="line">    DWORD  cbTokenGroups;</span><br><span class="line">    DWORD  dwGroup;</span><br><span class="line">    PSID   psidAdmin;</span><br><span class="line">    SID_IDENTIFIER_AUTHORITY SystemSidAuthority= SECURITY_NT_AUTHORITY;</span><br><span class="line">    <span class="keyword">if</span> ( !OpenThreadToken ( GetCurrentThread(), TOKEN_QUERY, FALSE, &amp;hThread))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> ( GetLastError() == ERROR_NO_TOKEN)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (! OpenProcessToken ( GetCurrentProcess(), TOKEN_QUERY, </span><br><span class="line">                &amp;hThread))</span><br><span class="line">                <span class="keyword">return</span> ( FALSE);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">            <span class="keyword">return</span> ( FALSE);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( GetTokenInformation ( hThread, TokenGroups, <span class="literal">NULL</span>, <span class="number">0</span>, &amp;cbTokenGroups))</span><br><span class="line">        <span class="keyword">return</span> ( FALSE);</span><br><span class="line">    <span class="keyword">if</span> ( GetLastError() != ERROR_INSUFFICIENT_BUFFER)</span><br><span class="line">        <span class="keyword">return</span> ( FALSE);</span><br><span class="line">    <span class="keyword">if</span> ( ! ( ptg= (TOKEN_GROUPS*)_alloca ( cbTokenGroups))) </span><br><span class="line">        <span class="keyword">return</span> ( FALSE);</span><br><span class="line">    <span class="keyword">if</span> ( !GetTokenInformation ( hThread, TokenGroups, ptg, cbTokenGroups,</span><br><span class="line">        &amp;cbTokenGroups) )</span><br><span class="line">        <span class="keyword">return</span> ( FALSE);</span><br><span class="line">    <span class="keyword">if</span> ( ! AllocateAndInitializeSid ( &amp;SystemSidAuthority, <span class="number">2</span>, </span><br><span class="line">        SECURITY_BUILTIN_DOMAIN_RID, </span><br><span class="line">        DOMAIN_ALIAS_RID_ADMINS,</span><br><span class="line">        <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, &amp;psidAdmin) )</span><br><span class="line">        <span class="keyword">return</span> ( FALSE);</span><br><span class="line">    fAdmin= FALSE;</span><br><span class="line">    <span class="keyword">for</span> ( dwGroup= <span class="number">0</span>; dwGroup &lt; ptg-&gt;GroupCount; dwGroup++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> ( EqualSid ( ptg-&gt;Groups[dwGroup].Sid, psidAdmin))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(bCheckAdminMode)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>((ptg-&gt;Groups[dwGroup].Attributes) &amp; SE_GROUP_ENABLED)</span><br><span class="line">                &#123;</span><br><span class="line">                    fAdmin = TRUE;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                fAdmin = TRUE;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    FreeSid ( psidAdmin);</span><br><span class="line">    <span class="keyword">return</span> ( fAdmin);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//注意只有原来是Disable的权限才可以提成Enable， 如果原来就没有这个权限， 是提不上去的。</span></span><br><span class="line"></span><br><span class="line"><span class="function">BOOL <span class="title">EnablePrivilege</span><span class="params">(HANDLE hToken, LPCTSTR lpszPrivilegeName)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    TOKEN_PRIVILEGES tkp = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">    BOOL bRet = LookupPrivilegeValue( <span class="literal">NULL</span>, lpszPrivilegeName, &amp;tkp.Privileges[<span class="number">0</span>].Luid );</span><br><span class="line">    <span class="keyword">if</span>(!bRet) <span class="keyword">return</span> FALSE;</span><br><span class="line"></span><br><span class="line">    tkp.PrivilegeCount = <span class="number">1</span>;</span><br><span class="line">    tkp.Privileges[<span class="number">0</span>].Attributes = SE_PRIVILEGE_ENABLED;</span><br><span class="line">    bRet = AdjustTokenPrivileges( hToken, FALSE, &amp;tkp, <span class="keyword">sizeof</span>(tkp), <span class="literal">NULL</span>, <span class="literal">NULL</span> );</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> bRet;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="如何判断用户的进程完整性级别"><a href="#如何判断用户的进程完整性级别" class="headerlink" title="如何判断用户的进程完整性级别"></a>如何判断用户的进程完整性级别</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">void</span> CIntegrityLevel::Print(<span class="built_in">std</span>::wostream&amp; os) <span class="keyword">const</span></span><br><span class="line">&#123;</span><br><span class="line">    SID* pSid = (SID*)m_pIntegrity-&gt;Label.Sid;</span><br><span class="line">    DWORD rid = pSid-&gt;SubAuthority[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">    LPCTSTR lpszIntegrity = <span class="string">L"Unknown"</span>;</span><br><span class="line">    <span class="keyword">switch</span> (rid)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">case</span> SECURITY_MANDATORY_UNTRUSTED_RID:</span><br><span class="line">        &#123;</span><br><span class="line">            lpszIntegrity = <span class="string">L"Untrusted"</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">case</span> SECURITY_MANDATORY_LOW_RID:</span><br><span class="line">        &#123;</span><br><span class="line">            lpszIntegrity = <span class="string">L"Low"</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">case</span> SECURITY_MANDATORY_MEDIUM_RID:</span><br><span class="line">        &#123;</span><br><span class="line">            lpszIntegrity = <span class="string">L"Medium"</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">case</span> SECURITY_MANDATORY_MEDIUM_PLUS_RID:</span><br><span class="line">        &#123;</span><br><span class="line">            lpszIntegrity = <span class="string">L"Medium +"</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">case</span> SECURITY_MANDATORY_HIGH_RID:</span><br><span class="line">        &#123;</span><br><span class="line">            lpszIntegrity = <span class="string">L"High"</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">case</span> SECURITY_MANDATORY_SYSTEM_RID:</span><br><span class="line">        &#123;</span><br><span class="line">            lpszIntegrity = <span class="string">L"System"</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">        &#123;</span><br><span class="line">            lpszIntegrity = <span class="string">L"XXXXX"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    os &lt;&lt; <span class="string">L"Integrity: "</span> &lt;&lt; lpszIntegrity &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="如何指定程序默认启动运行的级别"><a href="#如何指定程序默认启动运行的级别" class="headerlink" title="如何指定程序默认启动运行的级别?"></a>如何指定程序默认启动运行的级别?</h2><p>在VC里配置Manifest文件.</p>
<ul>
<li><p>asInvoker：默认选项，新的进程将简单地继承其父进程的访问令牌</p>
</li>
<li><p>highestAvailable：应用程序会选择该用户允许范围内尽可能高的权限。对于标准用户来说，该选项与asInvoker一样，而对于管理员来说，这就意味着请求Admin令牌。</p>
</li>
<li><p>requireAdministrator：应用程序需要Admin令牌。运行该程序时，标准用户将要输入管理员的用户名和密码，而管理员则要在弹出的确认对话框中进行确认。</p>
</li>
<li><p><img src="https://note.youdao.com/yws/public/resource/df3ab20df5c03ba0ad1faef9f79e2f72/xmlnote/DD710385513C4681AA35C58A73D66AA4/12900" alt="AAA"></p>
</li>
</ul>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>windows安全</tag>
      </tags>
  </entry>
  <entry>
    <title>字体</title>
    <url>/2020/04/20/%E5%AD%97%E4%BD%93/</url>
    <content><![CDATA[<h3 id="概念介绍"><a href="#概念介绍" class="headerlink" title="概念介绍"></a>概念介绍</h3><ol>
<li><p>SFNT: 文件字体格式(可缩放字体和样条字体)，最初是Macintosh TrueType字体开发的。 现有字体 <a href="https://en.wikipedia.org/wiki/TrueType" target="_blank" rel="noopener">TrueType</a>、<a href="https://en.wikipedia.org/wiki/OpenType" target="_blank" rel="noopener">OpenType</a>、<a href="https://en.wikipedia.org/wiki/Web_Open_Font_Format" target="_blank" rel="noopener">Web Open Font Format</a></p>
</li>
<li><p>字体专利之争 Adobe 霸主,  Apple 和 MS 合作，Type 1 被迫开放所有人使用.</p>
</li>
<li><p>微软创建字体 Times New Roman(与Times Roman兼容), Arial(与Helvetica兼容)和Courier New(与Courier兼容)</p>
</li>
<li><p>微软推出clearType(亚像素渲染技术)</p>
</li>
<li><p>OpenType  微软TrueType Open(和Adobe 合作) 印刷行为 10000 多种字体，Adobe占了三分之一 除Cambria Math外，还提供了三种免费字体：Asana-Math，Neo Euler和XITS 支持数学</p>
</li>
<li><p>WOFF 压缩网络字体Google主导 W3C标准</p>
</li>
</ol>
<h3 id="文件格式"><a href="#文件格式" class="headerlink" title="文件格式"></a>文件格式</h3><ol>
<li><p>TrueType Collection .ttcf格式</p>
</li>
<li><p>字体裁剪工具</p>
</li>
</ol>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>字体</tag>
        <tag>裁剪字体</tag>
        <tag>SFNTLY</tag>
      </tags>
  </entry>
  <entry>
    <title>模拟音乐的频率公式</title>
    <url>/2020/10/14/%E6%A8%A1%E6%8B%9F%E9%9F%B3%E4%B9%90%E7%9A%84%E9%A2%91%E7%8E%87%E5%85%AC%E5%BC%8F/</url>
    <content><![CDATA[<h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><p>昨天在翻阅taiga源代码的时候发现了一个神奇的Windows API Beep函数, 突然想到曾经有人跟我说过可以用Beep播放一首歌曲,<br>回忆起小时候用计算器的按键音当成各种调子按下，模拟音乐的简单快乐。<br>于是我便看了这份代码播放的音乐，当点击ICON图标时播放一首orange歌曲。<br>(猜测应该是这首<a href="https://c.y.qq.com/base/fcgi-bin/u?__=9xGuYfR" target="_blank" rel="noopener">https://c.y.qq.com/base/fcgi-bin/u?__=9xGuYfR</a>)</p>
<h3 id="代码介绍"><a href="#代码介绍" class="headerlink" title="代码介绍"></a>代码介绍</h3><pre><code><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">namespace</span> BeepMusic</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">constexpr</span> <span class="built_in">std</span>::<span class="built_in">array</span>&lt;<span class="built_in">std</span>::pair&lt;<span class="keyword">int</span>, <span class="keyword">float</span>&gt;, <span class="number">32</span>&gt; notes&#123;&#123;</span><br><span class="line">        &#123;<span class="number">84</span>, <span class="number">1</span> / <span class="number">2.f</span>&#125;, &#123;<span class="number">84</span>, <span class="number">1</span> / <span class="number">4.f</span>&#125;, &#123;<span class="number">86</span>, <span class="number">1</span> / <span class="number">8.f</span>&#125;, &#123;<span class="number">84</span>, <span class="number">1</span> / <span class="number">4.f</span>&#125;,</span><br><span class="line">        &#123;<span class="number">82</span>, <span class="number">1</span> / <span class="number">4.f</span>&#125;, &#123;<span class="number">81</span>, <span class="number">1</span> / <span class="number">4.f</span>&#125;, &#123;<span class="number">77</span>, <span class="number">1</span> / <span class="number">8.f</span>&#125;, &#123;<span class="number">79</span>, <span class="number">1</span> / <span class="number">8.f</span>&#125;,</span><br><span class="line">        &#123;<span class="number">72</span>, <span class="number">1</span> / <span class="number">8.f</span>&#125;, &#123;<span class="number">77</span>, <span class="number">1</span> / <span class="number">2.f</span>&#125;, &#123;<span class="number">76</span>, <span class="number">1</span> / <span class="number">8.f</span>&#125;, &#123;<span class="number">77</span>, <span class="number">1</span> / <span class="number">8.f</span>&#125;,</span><br><span class="line">        &#123;<span class="number">79</span>, <span class="number">1</span> / <span class="number">8.f</span>&#125;, &#123;<span class="number">81</span>, <span class="number">1</span> / <span class="number">4.f</span>&#125;, &#123;<span class="number">79</span>, <span class="number">1</span> / <span class="number">4.f</span>&#125;, &#123;<span class="number">77</span>, <span class="number">1</span> / <span class="number">4.f</span>&#125;,</span><br><span class="line">        &#123;<span class="number">79</span>, <span class="number">1</span> / <span class="number">4.f</span>&#125;, &#123;<span class="number">81</span>, <span class="number">1</span> / <span class="number">8.f</span>&#125;, &#123;<span class="number">84</span>, <span class="number">1</span> / <span class="number">2.f</span>&#125;, &#123;<span class="number">84</span>, <span class="number">1</span> / <span class="number">4.f</span>&#125;,</span><br><span class="line">        &#123;<span class="number">86</span>, <span class="number">1</span> / <span class="number">8.f</span>&#125;, &#123;<span class="number">84</span>, <span class="number">1</span> / <span class="number">4.f</span>&#125;, &#123;<span class="number">82</span>, <span class="number">1</span> / <span class="number">4.f</span>&#125;, &#123;<span class="number">81</span>, <span class="number">1</span> / <span class="number">4.f</span>&#125;,</span><br><span class="line">        &#123;<span class="number">77</span>, <span class="number">1</span> / <span class="number">8.f</span>&#125;, &#123;<span class="number">79</span>, <span class="number">1</span> / <span class="number">8.f</span>&#125;, &#123;<span class="number">72</span>, <span class="number">1</span> / <span class="number">8.f</span>&#125;, &#123;<span class="number">77</span>, <span class="number">1</span> / <span class="number">2.f</span>&#125;,</span><br><span class="line">        &#123;<span class="number">76</span>, <span class="number">1</span> / <span class="number">8.f</span>&#125;, &#123;<span class="number">77</span>, <span class="number">1</span> / <span class="number">8.f</span>&#125;, &#123;<span class="number">76</span>, <span class="number">1</span> / <span class="number">8.f</span>&#125;, &#123;<span class="number">74</span>, <span class="number">1</span> / <span class="number">2.f</span>&#125;,</span><br><span class="line">    &#125;&#125;;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">playOrange</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">constexpr</span> <span class="keyword">auto</span> get_frequency = [](<span class="keyword">const</span> <span class="keyword">int</span> note) &#123;</span><br><span class="line">            <span class="keyword">if</span> (note &lt; <span class="number">0</span> || note &gt; <span class="number">119</span>) <span class="keyword">return</span> <span class="number">-1.0f</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">440.0f</span> *</span><br><span class="line">                <span class="built_in">std</span>::<span class="built_in">pow</span>(<span class="number">2.0f</span>, <span class="keyword">static_cast</span>&lt;<span class="keyword">float</span>&gt;(note - <span class="number">57</span>) / <span class="number">12.0f</span>);</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">constexpr</span> <span class="keyword">auto</span> get_duration = [](<span class="keyword">const</span> <span class="keyword">float</span> duration) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1600</span> * duration;</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">const</span> <span class="keyword">auto</span>&amp; [note, duration] : notes)</span><br><span class="line">        &#123;</span><br><span class="line">            ::Beep(<span class="keyword">static_cast</span>&lt;DWORD&gt;(get_frequency(note)),</span><br><span class="line">                <span class="keyword">static_cast</span>&lt;DWORD&gt;(get_duration(duration)));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;  <span class="comment">// namespace BeepMusic</span></span><br></pre></td></tr></table></figure></code></pre>
<p>其中有个公式<br>    $$<br>    440 \times 2 ^ {\frac{(x-57)}{12}}<br>    $$<br> 哪来的？</p>
<p>经反复查找资料<br>    MIDI代表乐器数字接口。该标准指定了软件和电子设备可以传输和接收音乐的方式。</p>
<p>另外一个公式在开源项目 audacity<br>    $$<br>    440 \times 2 ^ {\frac{(x-69)}{12}}<br>    $$</p>
<p>这个2个公式本身是什么逻辑，哪里来的，很难猜到，需要了解乐理知识</p>
<h3 id="乐理知识"><a href="#乐理知识" class="headerlink" title="乐理知识"></a>乐理知识</h3><ul>
<li><p>乐音体系: 有固定音高的音（乐音）的总和，叫做乐音体系。 一般的钢琴 88琴键 $A_2 - C^5$</p>
</li>
<li><p>音级： 在乐音体系中的每个音，就叫做“音级”。音级包括有基本音级和变化音级两种。 自然</p>
</li>
<li><p>音列：将乐音体系中的音，依照音高关系和次序，由低到高（上行）或由高向低（下行）排列起来，叫做“音列”。</p>
</li>
<li><p>半音： 在整个乐音体系中，相邻的两个音级（不论基本音级或变化音级）之间的音高关系就是“半音”，半音是音高关系中的最小单位。用分数1/2来标记。</p>
</li>
<li><p>全音： 在乐音体系中，两个半音相加，就形成了全音。用阿拉伯数字1来标记。</p>
</li>
<li><p>音名： 在乐音体系中，七个具有独立名称的音级叫做基本音级（也叫自然音级） “C D E F G A B”  钢琴白键都是基本音级</p>
</li>
<li><p>变化音级： # 升音级  $^#C$ 升半音 , b 降音级 $^bD$ 降半音 , # 重升音级  $^×E$ 升Q全音 , bb 重降音级 $^{bb}F$ 降半音</p>
</li>
<li><p>大谱钢琴键盘对照表   <img src="paino.gif" alt="对照表"></p>
</li>
</ul>
<h4 id="标准音"><a href="#标准音" class="headerlink" title="标准音"></a>标准音</h4><p>中央C 440Hz  第一国际高音<br>小字a $a^1 = 435 hz$  第二国际高音  演奏会音高</p>
<h4 id="音律关系"><a href="#音律关系" class="headerlink" title="音律关系"></a>音律关系</h4><h5 id="纯律"><a href="#纯律" class="headerlink" title="纯律"></a>纯律</h5><p>西洋乐器</p>
<h5 id="五度相生律"><a href="#五度相生律" class="headerlink" title="五度相生律"></a>五度相生律</h5><p>五度相生律又叫“三分损益律”，它是按纯五度的关系向上或向下推算的办法，来找出整个各个音级的精确高度。即是用分音列中第二分音与第三分音之间的音高关系，连续相生而求得出的各个音级的准确音高。 民族乐器。</p>
<h5 id="十二平均律"><a href="#十二平均律" class="headerlink" title="十二平均律"></a>十二平均律</h5><p>将纯八度分成十二个均等的部分的音律叫做十二平均律。其中每一个部分就是一个半音，每个半音的距离是相等的，它的最大好处是转调方便。十二平均律多用在钢琴、手风琴、电子琴、风琴。</p>
<h3 id="最终代码公式"><a href="#最终代码公式" class="headerlink" title="最终代码公式"></a>最终代码公式</h3><pre><code><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">float</span> midi[<span class="number">127</span>];</span><br><span class="line"><span class="keyword">int</span> a = <span class="number">440</span>; <span class="comment">// a is 440 hz...</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> x = <span class="number">0</span>; x &lt; <span class="number">127</span>; ++x)</span><br><span class="line">&#123;</span><br><span class="line">    midi[x] = (a / <span class="number">32</span>) * (<span class="number">2</span> ^ ((x - <span class="number">9</span>) / <span class="number">12</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></code></pre>
<p>公式<br>    $$<br>    \frac{440}{32} \times 2 ^ {\frac{(x-9)}{12}}<br>    $$</p>
<h3 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h3><pre> MIDI                   MIDI                   MIDI
 Note     Frequency      Note   Frequency       Note   Frequency
 C1  0    8.1757989156    12    16.3515978313    24    32.7031956626
 Db  1    8.6619572180    13    17.3239144361    25    34.6478288721
 D   2    9.1770239974    14    18.3540479948    26    36.7080959897
 Eb  3    9.7227182413    15    19.4454364826    27    38.8908729653
 E   4   10.3008611535    16    20.6017223071    28    41.2034446141
 F   5   10.9133822323    17    21.8267644646    29    43.6535289291
 Gb  6   11.5623257097    18    23.1246514195    30    46.2493028390
 G   7   12.2498573744    19    24.4997147489    31    48.9994294977
 Ab  8   12.9782717994    20    25.9565435987    32    51.9130871975
 A   9   13.7500000000    21    27.5000000000    33    55.0000000000
 Bb  10  14.5676175474    22    29.1352350949    34    58.2704701898
 B   11  15.4338531643    23    30.8677063285    35    61.7354126570

 C4  36  65.4063913251    48   130.8127826503    60   261.6255653006
 Db  37  69.2956577442    49   138.5913154884    61   277.1826309769
 D   38  73.4161919794    50   146.8323839587    62   293.6647679174
 Eb  39  77.7817459305    51   155.5634918610    63   311.1269837221
 E   40  82.4068892282    52   164.8137784564    64   329.6275569129
 F   41  87.3070578583    53   174.6141157165    65   349.2282314330
 Gb  42  92.4986056779    54   184.9972113558    66   369.9944227116
 G   43  97.9988589954    55   195.9977179909    67   391.9954359817
 Ab  44  103.8261743950   56   207.6523487900    68   415.3046975799
 A   45  110.0000000000   57   220.0000000000    69   440.0000000000
 Bb  46  116.5409403795   58   233.0818807590    70   466.1637615181
 B   47  123.4708253140   59   246.9416506281    71   493.8833012561

 C7  72  523.2511306012   84  1046.5022612024    96  2093.0045224048
 Db  73  554.3652619537   85  1108.7305239075    97  2217.4610478150
 D   74  587.3295358348   86  1174.6590716696    98  2349.3181433393
 Eb  75  622.2539674442   87  1244.5079348883    99  2489.0158697766
 E   76  659.2551138257   88  1318.5102276515   100  2637.0204553030
 F   77  698.4564628660   89  1396.9129257320   101  2793.8258514640
 Gb  78  739.9888454233   90  1479.9776908465   102  2959.9553816931
 G   79  783.9908719635   91  1567.9817439270   103  3135.9634878540
 Ab  80  830.6093951599   92  1661.2187903198   104  3322.4375806396
 A   81  880.0000000000   93  1760.0000000000   105  3520.0000000000
 Bb  82  932.3275230362   94  1864.6550460724   106  3729.3100921447
 B   83  987.7666025122   95  1975.5332050245   107  3951.0664100490

 C10 108 4186.0090448096  120  8372.0180896192
 Db  109 4434.9220956300  121  8869.8441912599
 D   110 4698.6362866785  122  9397.2725733570
 Eb  111 4978.0317395533  123  9956.0634791066
 E   112 5274.0409106059  124 10548.0818212118
 F   113 5587.6517029281  125 11175.3034058561
 Gb  114 5919.9107633862  126 11839.8215267723
 G   115 6271.9269757080  127 12543.8539514160
 Ab  116 6644.8751612791
 A   117 7040.0000000000
 Bb  118 7458.6201842894
 B   119 7902.1328200980
</pre>]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>c++</tag>
        <tag>音乐</tag>
      </tags>
  </entry>
  <entry>
    <title>活法读书笔记</title>
    <url>/2020/03/24/%E6%B4%BB%E6%B3%95/</url>
    <content><![CDATA[<p>1.树立共同理想<br>2.不要急功近利<br>3.心怀敬畏之心<br>4.现场解决问题<br>5.选取愚直方式<br>6.公私要分明（公车就是公车）<br>7.能力*激情 =成果<br>8.一心为公（所有的成果都是社会的成果） 当然也是自己努力的成果</p>
]]></content>
      <categories>
        <category>读书笔记</category>
      </categories>
      <tags>
        <tag>企业发展</tag>
      </tags>
  </entry>
  <entry>
    <title>生活</title>
    <url>/2020/03/25/%E7%94%9F%E6%B4%BB/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>知名博客集锦</title>
    <url>/2020/03/25/%E7%9F%A5%E5%90%8D%E5%8D%9A%E5%AE%A2%E9%9B%86%E9%94%A6/</url>
    <content><![CDATA[<h3 id="🐂🍺"><a href="#🐂🍺" class="headerlink" title="🐂🍺"></a>🐂🍺</h3><ul>
<li>Fabrice Bellard <a href="https://bellard.org/" target="_blank" rel="noopener">https://bellard.org/</a></li>
</ul>
<h3 id="性能分析"><a href="#性能分析" class="headerlink" title="性能分析"></a>性能分析</h3><ul>
<li>randomascii <a href="https://randomascii.wordpress.com/" target="_blank" rel="noopener">https://randomascii.wordpress.com/</a></li>
</ul>
<h3 id="C-程序员博客列表"><a href="#C-程序员博客列表" class="headerlink" title="C++程序员博客列表"></a>C++程序员博客列表</h3><ul>
<li>VCZH <a href="http://www.cppblog.com/vczh" target="_blank" rel="noopener">http://www.cppblog.com/vczh</a></li>
<li>朝闻道 <a href="https://www.cnblogs.com/findumars/" target="_blank" rel="noopener">https://www.cnblogs.com/findumars/</a></li>
<li>chromium技术博客 <a href="https://gclxry.com/" target="_blank" rel="noopener">https://gclxry.com/</a></li>
<li>morewindow <a href="https://blog.csdn.net/morewindows" target="_blank" rel="noopener">https://blog.csdn.net/morewindows</a></li>
<li>c++ <a href="http://r12f.com/" target="_blank" rel="noopener">http://r12f.com/</a></li>
<li>vs调试器 <a href="http://r12f.com/" target="_blank" rel="noopener">http://r12f.com/</a></li>
<li>wxquare <a href="https://www.cnblogs.com/wxquare/" target="_blank" rel="noopener">https://www.cnblogs.com/wxquare/</a></li>
<li>c++服务端 <a href="https://www.cnblogs.com/moyangvip/" target="_blank" rel="noopener">https://www.cnblogs.com/moyangvip/</a></li>
<li>王垠 <a href="http://www.yinwang.org/" target="_blank" rel="noopener">http://www.yinwang.org/</a></li>
<li>陈皓 <a href="https://coolshell.cn/" target="_blank" rel="noopener">https://coolshell.cn/</a></li>
<li>saschawillems <a href="https://www.saschawillems.de/" target="_blank" rel="noopener">https://www.saschawillems.de/</a>  图形</li>
</ul>
<h3 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h3><ul>
<li>何登成AliSql <a href="http://hedengcheng.com/" target="_blank" rel="noopener">http://hedengcheng.com/</a></li>
</ul>
<h3 id="JAVA程序员博客列表"><a href="#JAVA程序员博客列表" class="headerlink" title="JAVA程序员博客列表"></a>JAVA程序员博客列表</h3><ul>
<li>ajian005 <a href="https://blog.csdn.net/ajian005/" target="_blank" rel="noopener">https://blog.csdn.net/ajian005/</a></li>
</ul>
<h3 id="算法博客"><a href="#算法博客" class="headerlink" title="算法博客"></a>算法博客</h3><ul>
<li>hnust_xiehonghao <a href="https://blog.csdn.net/hnust_xiehonghao" target="_blank" rel="noopener">https://blog.csdn.net/hnust_xiehonghao</a></li>
</ul>
<h3 id="知识图谱"><a href="#知识图谱" class="headerlink" title="知识图谱"></a>知识图谱</h3><ul>
<li><a href="https://github.com/TeamStuQ/skill-map" target="_blank" rel="noopener">https://github.com/TeamStuQ/skill-map</a></li>
</ul>
<h3 id="安全博客"><a href="#安全博客" class="headerlink" title="安全博客"></a>安全博客</h3><ul>
<li>seebug <a href="https://paper.seebug.org/" target="_blank" rel="noopener">https://paper.seebug.org/</a></li>
<li>predator-wang <a href="https://www.cnblogs.com/predator-wang/" target="_blank" rel="noopener">https://www.cnblogs.com/predator-wang/</a></li>
<li>killcoco <a href="https://blog.csdn.net/qq_36810340" target="_blank" rel="noopener">https://blog.csdn.net/qq_36810340</a></li>
</ul>
<blockquote>
<p>有趣的二进制</p>
</blockquote>
<h3 id="其他行业教学视频合集"><a href="#其他行业教学视频合集" class="headerlink" title="其他行业教学视频合集"></a>其他行业教学视频合集</h3><ul>
<li>知乎专栏 <a href="https://zhuanlan.zhihu.com/p/27664328" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/27664328</a></li>
</ul>
]]></content>
      <tags>
        <tag>博客</tag>
      </tags>
  </entry>
  <entry>
    <title>程序员修炼之道-读书笔记</title>
    <url>/2020/03/25/%E7%A8%8B%E5%BA%8F%E5%91%98%E4%BF%AE%E7%82%BC%E4%B9%8B%E9%81%93-%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<ol>
<li>关心你的技艺  </li>
<li>思考你的工作  </li>
<li>提供选择不找蹩脚的借口  </li>
<li>不要容忍破窗户  </li>
<li>要做变化的催化剂（石头汤）  </li>
<li>注意大图景<br>欲求更好，常把好事变糟     -李尔王</li>
<li>使质量成为需求问题<br>知识上的投资，总能得到最好的回报     -富兰克林<br>如何投资自己的知识？<br>定期投资<br>多元化<br>管理风险<br>低买高卖<br>重新评估和平衡  </li>
<li>投资你的知识资产<br>每年学习一门新语言<br>每个月阅读一本技术书籍<br>上课<br>参与本地用户组织<br>实验不同环境<br>跟上潮流  </li>
<li>批判的思考你读到的和听到的  </li>
<li>你说什么和你怎么说一样重要  </li>
<li>不要重复你自己<br>为什么需要注释？都说需要注释，是因为糟糕的代码才需要注释，优秀的编码根本不需要！</li>
<li>让复用变得容易  </li>
<li>消除无关事物的影响<br>让你的代码保持解耦<br>避免使用全局数据<br>避免写相似函数  </li>
<li>不存在最终决策  </li>
<li>用曳光弹找到目标  </li>
<li>为了学习制作原型  </li>
<li>靠近问题领域编程  </li>
<li>估算，以避免意外  </li>
<li>通过代码对进度表进行迭代  </li>
<li>用纯文本保存知识  </li>
<li>熟练使用命令行shell  </li>
<li>用好编辑器  </li>
<li>总是使用源码控制  </li>
<li>修正问题bug，而不是指责  </li>
<li>“Selection”is broken  </li>
<li>不要恐慌  </li>
<li>不要假定要证明  </li>
<li>学习一种文本操纵语言<br>脚本语言的作用:<br>数据库的维护<br>java属性的访问<br>测试数据生成<br>写书<br>C与Object Pascal的接口<br>生成web文档  </li>
<li>编写能编写代码的代码  </li>
<li>你不可能写出完美的软件<br>没有什么东西比常识和坦率更让人感到惊讶了。<br>-爱默生  </li>
<li>通过合约进行设计  </li>
<li>早点崩溃  </li>
<li>如果不可能发生，请用断言确定它不会发生  </li>
<li>将异常用于异常的问题  </li>
<li>要有始有终  </li>
<li>使模块之间中耦合性降到最低  </li>
<li>要配置不要集成（多使用元数据metadata)  </li>
<li>将抽象放入代码，将细节放入元数据  </li>
<li>分析工作流，改善并发性  </li>
<li>用服务进行设计  </li>
<li>总是为并发性进行设计  </li>
<li>视图与模型分离  </li>
<li>使用黑板工作流方式  </li>
<li>不要靠巧合编程(先思考再编码)  </li>
<li>估算你算法的阶  </li>
<li>测试你的估算  </li>
<li>何时需要重构<br>重复<br>非正交性的设计<br>过时的知识<br>性能  </li>
<li>早重构，常重构(类似肿瘤)<br>重构的注意事项：<br>不要在重构中添加新功能<br>重构之前先确定有良好的测试<br>采用短小，深思熟虑的方式  </li>
<li>为测试而设计  </li>
<li>测试你的软件，否则你的用户就得测试</li>
<li>不要使用你不了解的向导代码（自己应该有自己代码生成器）</li>
<li>不要收集需求而是挖掘他们!  </li>
<li>抽象比细节活得更长久  </li>
<li>使用项目词汇表  </li>
<li>不要再盒子外面思考—找到盒子  </li>
<li>倾听反复出现的疑虑，请准备好  </li>
<li>对于有些事情，做甚于描述  </li>
<li>不要做形式方法的奴隶  </li>
<li>昂贵的工具不一定能做出合适的设计  </li>
<li>围绕功能而不是每个人职务分组  </li>
<li>不要使用手工流程  </li>
<li>早测试、常测试、自动测试  </li>
<li>要通过所有的测试，代码才算完成  </li>
<li>要通过蓄意破坏测试你的测试  </li>
<li>测试代码覆盖，而不是覆盖代码  </li>
<li>一个bug只抓一次  </li>
<li>把英语当成一种编程语言  </li>
<li>把文档建在里面，而不是拴在外面  </li>
<li>温和地超过用户期望  </li>
<li>在你的作品上签名  </li>
</ol>
]]></content>
      <tags>
        <tag>读书笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>程序员口头禅</title>
    <url>/2020/03/25/%E7%A8%8B%E5%BA%8F%E5%91%98%E5%8F%A3%E5%A4%B4%E7%A6%85/</url>
    <content><![CDATA[<ul>
<li>这个不是我做的</li>
<li>这个做不了</li>
<li>在我的电脑上是好的</li>
<li>换个浏览器试试</li>
<li>之前代码我没动过</li>
<li>这个可以做，就是要很多时间</li>
<li>这个操作用户不会这样干</li>
<li>这坨代码太臭了</li>
<li>下个版本做</li>
<li>需求没有说清楚</li>
<li>这个不支持</li>
<li>原本是好的吗？</li>
<li>你会不会操作(测)？</li>
<li>啥都没改，自动好了</li>
</ul>
<h3 id="欢迎补充"><a href="#欢迎补充" class="headerlink" title="欢迎补充~"></a>欢迎补充~</h3>]]></content>
      <tags>
        <tag>生活</tag>
      </tags>
  </entry>
  <entry>
    <title>网络1</title>
    <url>/2020/04/20/%E7%BD%91%E7%BB%9C/</url>
    <content><![CDATA[<h3 id="概念介绍"><a href="#概念介绍" class="headerlink" title="概念介绍"></a>概念介绍</h3><ol>
<li><p>FTP RFC 959</p>
</li>
<li><p>HTTP 1.0 RFC 1945</p>
</li>
<li><p>HTTP 2.0 RFC 2616</p>
</li>
</ol>
<p>WinInet 是 WinHttp 的超集</p>
<p>会话隔离的服务使用 WinHttp</p>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>windows</tag>
        <tag>计算机网络</tag>
      </tags>
  </entry>
  <entry>
    <title>权限相关的英文</title>
    <url>/2020/05/07/%E8%8B%B1%E6%96%87%E7%9A%84%E6%9D%83%E9%99%90/</url>
    <content><![CDATA[<h2 id="权限"><a href="#权限" class="headerlink" title="权限"></a>权限</h2><ol>
<li><p>permission  许可证、许可、允许</p>
<p> v.</p>
<ul>
<li><p>ask (for) permission 请求许可</p>
</li>
<li><p>get permission 得到许可</p>
</li>
<li><p>permission to leave     准许离开</p>
</li>
<li><p>need permission     需要获准</p>
</li>
<li><p>obtain permission 取得许可</p>
</li>
<li><p>receive permission 收到许可</p>
</li>
<li><p>request permission 要求给予许可</p>
</li>
<li><p>seek permission 寻求获准</p>
<p>adj.</p>
</li>
<li><p>special permission 特别许可</p>
</li>
<li><p>written permission 书面许可</p>
<p>it.</p>
</li>
<li><p>用户权限 动作和客体 加入文档的权限  相近的Access Control</p>
</li>
</ul>
</li>
<li><p>Access</p>
<p> U 道路</p>
<ul>
<li><p>access to the building</p>
<p>it.</p>
</li>
<li><p>memory access 内存访问 存取访问</p>
</li>
</ul>
</li>
<li><p>Privilege 特权</p>
<p> adj.</p>
<ul>
<li><p>special Privilege 特权</p>
<p>n.</p>
</li>
<li><p>power and privilege 权势</p>
</li>
<li><p>executive privilege 行政官员豁免权</p>
<p>it.</p>
</li>
<li><p>小张拥有这个权力操作文档</p>
</li>
</ul>
</li>
<li><p>Authorization 授权</p>
</li>
<li><p>Authentication 验证权限、身份验证、鉴定、认证<br> it.</p>
<ul>
<li>数据库授权</li>
<li>加密认证</li>
<li>服务器登录认证</li>
</ul>
</li>
<li><p>rights 权力、正当的权力、公正<br> n.</p>
<ul>
<li>human rights 人权</li>
<li>visitation rights 探视权</li>
</ul>
</li>
<li><p>token 代币、令牌、装点门面、证明、标记</p>
<p> As a token of goodwill, 为了证明我的好意</p>
<p> it.</p>
<ul>
<li>access token 访问令牌</li>
<li>tokens to the parser 解释器的标记</li>
</ul>
</li>
<li><p>certificate 毕业证书、证书、文凭</p>
</li>
<li><p>identifier  标识符</p>
<p> it.</p>
<ul>
<li>scope of the identifier 作用域标识</li>
<li>Another common mistake is to confuse a prefix with an identifier. 另一种常见的错误是混淆了前缀和标识符</li>
</ul>
</li>
</ol>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>语言</tag>
      </tags>
  </entry>
  <entry>
    <title>利用标准c++流读文件</title>
    <url>/2020/03/24/%E8%AF%BB%E6%96%87%E4%BB%B6/</url>
    <content><![CDATA[<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">do</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">string</span> tmppath = <span class="string">"aa.zip"</span>;</span><br><span class="line">    <span class="built_in">std</span>::<span class="function">ifstream <span class="title">is</span><span class="params">(tmppath.c_str(), <span class="built_in">std</span>::ios_base::binary, _SH_DENYRW)</span></span>;</span><br><span class="line">  </span><br><span class="line">    <span class="built_in">std</span>::streampos current_pos1 = is.tellg();<span class="comment">//记录下当前位置 </span></span><br><span class="line">    is.seekg(<span class="number">0</span>, <span class="built_in">std</span>::ios::<span class="built_in">end</span>);<span class="comment">//移动到文件尾</span></span><br><span class="line">    <span class="built_in">std</span>::streampos nSize = is.tellg();</span><br><span class="line">    is.seekg(current_pos1);</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; nSize &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    is.<span class="built_in">clear</span>();</span><br><span class="line">    is.seekg(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">string</span> fileContent;</span><br><span class="line">    <span class="built_in">std</span>::copy(<span class="built_in">std</span>::istream_iterator&lt;<span class="keyword">unsigned</span> <span class="keyword">char</span>&gt;(is), <span class="built_in">std</span>::istream_iterator&lt;<span class="keyword">unsigned</span> <span class="keyword">char</span>&gt;(), <span class="built_in">std</span>::back_inserter(fileContent));</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; fileContent.<span class="built_in">size</span>() &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    is.<span class="built_in">clear</span>();</span><br><span class="line">    is.seekg(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">string</span> fileContent2;</span><br><span class="line">    <span class="built_in">std</span>::copy(<span class="built_in">std</span>::istreambuf_iterator&lt;<span class="keyword">char</span>&gt;(is), <span class="built_in">std</span>::istreambuf_iterator&lt;<span class="keyword">char</span>&gt;(), <span class="built_in">std</span>::back_inserter(fileContent2));</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; fileContent2.<span class="built_in">size</span>() &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    is.<span class="built_in">clear</span>();</span><br><span class="line">    is.seekg(<span class="number">0</span>);</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="keyword">char</span>&gt; vecCHAR;</span><br><span class="line">    <span class="built_in">std</span>::copy(<span class="built_in">std</span>::istream_iterator&lt;<span class="keyword">char</span>&gt;(is), <span class="built_in">std</span>::istream_iterator&lt;<span class="keyword">char</span>&gt;(), <span class="built_in">std</span>::back_inserter(vecCHAR));</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; vecCHAR.<span class="built_in">size</span>() &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>c++</tag>
        <tag>标准库</tag>
      </tags>
  </entry>
  <entry>
    <title>高低权限进程消息通信</title>
    <url>/2020/03/25/%E9%AB%98%E4%BD%8E%E6%9D%83%E9%99%90%E6%B6%88%E6%81%AF/</url>
    <content><![CDATA[<p><img src="result.png" alt="测试结果"></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ChangeFilter</span><span class="params">(m_hWnd, WM_NOTEPAPER_SHOWTIP, MSGFLT_ALLOW)</span></span>;</span><br><span class="line"></span><br><span class="line">DWORD CMainWindow::ChangeFilter(HWND hwnd, UINT uMsg, DWORD dwMsgFlt)</span><br><span class="line">&#123;</span><br><span class="line">    BOOL                fSuccess = FALSE;</span><br><span class="line">    DWORD            dwMsgFltInfo = MSGFLTINFO_NONE;</span><br><span class="line">    CHANGEFILTERSTRUCT  ChangeFilterStruct;</span><br><span class="line"></span><br><span class="line">    ChangeFilterStruct.cbSize = <span class="keyword">sizeof</span>(CHANGEFILTERSTRUCT);</span><br><span class="line">    fSuccess = ChangeWindowMessageFilterEx(hwnd, uMsg, dwMsgFlt, &amp;ChangeFilterStruct);</span><br><span class="line">    dwMsgFltInfo = ChangeFilterStruct.ExtStatus;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!fSuccess) &#123;</span><br><span class="line">        wprintf(<span class="string">L"\nChangeWindowMessageFilterEx failed with %lu"</span>, GetLastError());</span><br><span class="line">        dwMsgFltInfo = <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> dwMsgFltInfo;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>windows安全</tag>
      </tags>
  </entry>
  <entry>
    <title>Github技巧</title>
    <url>/2020/11/23/Github%E6%8A%80%E5%B7%A7/</url>
    <content><![CDATA[<p>参数解析：<br><a href="https://github.com/search?l=C++&amp;o=desc&amp;p=2&amp;q=gui&amp;s=stars&amp;type=Repositories" target="_blank" rel="noopener">https://github.com/search?l=C%2B%2B&amp;o=desc&amp;p=2&amp;q=gui&amp;s=stars&amp;type=Repositories</a><br>l language  c++ l=C%2B%2B<br>o order  o=desc 降序   asc升序<br>p page   p=2 第2页<br>q<br>s = forks stars</p>
]]></content>
  </entry>
  <entry>
    <title>Qt源码编译(windows环境)</title>
    <url>/2020/12/14/Qt%E6%BA%90%E7%A0%81%E7%BC%96%E8%AF%91/</url>
    <content><![CDATA[<h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><ol>
<li>下载Qt源码，直接下载代码压缩包，通过git下载代码太慢</li>
<li>在vs cmd控制台中 进入源码根目录 configure -prefix E:\QtSource\build -release -opensource -static -force-debug-info -opengl dynamic -platform win32-msvc -c++std c++11 -skip qtmultimedia -skip qtsensors -skip qtwebengine -skip qtgamepad -nomake examples -nomake tests -mp -skip qtlocation -skip qtserialbus -confirm-license<br><a href="https://doc.qt.io/qt-5/configure-options.html" target="_blank" rel="noopener">https://doc.qt.io/qt-5/configure-options.html</a> configure 选项<br>使用 configure.bat -h 查看</li>
</ol>
<p>configure -prefix D:\QtSource\build -debug-and-release -opensource -static -force-debug-info -opengl dynamic -platform win32-msvc -c++std c++11 -skip qtmultimedia -skip qtsensors -skip qtwebengine -skip qtgamepad -nomake tests -mp -skip qtlocation -skip qtserialbus -confirm-license</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Configure meta:</span><br><span class="line"></span><br><span class="line">  -<span class="built_in">help</span>, -h ............ Display this <span class="built_in">help</span> screen</span><br><span class="line">  -verbose, -v ......... Print verbose messages during configuration</span><br><span class="line">  -<span class="built_in">continue</span> ............ Continue configure despite errors</span><br><span class="line">  -redo ................ Re-configure with previously used options.</span><br><span class="line">                         Additional options may be passed, but will not be</span><br><span class="line">                         saved <span class="keyword">for</span> later use by -redo.</span><br><span class="line">  -recheck [<span class="built_in">test</span>,...] .. Discard cached negative configure <span class="built_in">test</span> results.</span><br><span class="line">                         Use this after installing missing dependencies.</span><br><span class="line">                         Alternatively, <span class="keyword">if</span> tests are specified, only their</span><br><span class="line">                         results are discarded.</span><br><span class="line">  -recheck-all ......... Discard all cached configure <span class="built_in">test</span> results.</span><br><span class="line"></span><br><span class="line">  -feature-&lt;feature&gt; ... Enable &lt;feature&gt;</span><br><span class="line">  -no-feature-&lt;feature&gt;  Disable &lt;feature&gt; [none]</span><br><span class="line">  -list-features ....... List available features. Note that some features</span><br><span class="line">                         have dedicated <span class="built_in">command</span> line options as well.</span><br><span class="line"></span><br><span class="line">  -list-libraries ...... List possible external dependencies.</span><br><span class="line"></span><br><span class="line">Build options:</span><br><span class="line"></span><br><span class="line">  -opensource .......... Build the Open-Source Edition of Qt</span><br><span class="line">  -commercial .......... Build the Commercial Edition of Qt</span><br><span class="line">  -confirm-license ..... Automatically acknowledge the license</span><br><span class="line"></span><br><span class="line">  -release ............. Build Qt with debugging turned off [yes]</span><br><span class="line">  -debug ............... Build Qt with debugging turned on [no]</span><br><span class="line">  -debug-and-release ... Build two versions of Qt, with and without</span><br><span class="line">                         debugging turned on [yes] (Apple and Windows only)</span><br><span class="line">  -optimize-debug ...... Enable debug-friendly optimizations <span class="keyword">in</span> debug builds</span><br><span class="line">                         [auto] (Not supported with MSVC or Clang toolchains)</span><br><span class="line">  -optimize-size ....... Optimize release builds <span class="keyword">for</span> size instead of speed [no]</span><br><span class="line">  -optimized-tools ..... Build optimized host tools even <span class="keyword">in</span> debug build [no]</span><br><span class="line">  -force-debug-info .... Create symbol files <span class="keyword">for</span> release builds [no]</span><br><span class="line">  -separate-debug-info . Split off debug information to separate files [no]</span><br><span class="line">  -gdb-index ........... Index the debug info to speed up GDB</span><br><span class="line">                         [no; auto <span class="keyword">if</span> -developer-build with debug info]</span><br><span class="line">  -strip ............... Strip release binaries of unneeded symbols [yes]</span><br><span class="line">  -gc-binaries ......... Place each <span class="keyword">function</span> or data item into its own section</span><br><span class="line">                         and <span class="built_in">enable</span> linker garbage collection of unused</span><br><span class="line">                         sections. [auto <span class="keyword">for</span> static builds, otherwise no]</span><br><span class="line">  -force-asserts ....... Enable Q_ASSERT even <span class="keyword">in</span> release builds [no]</span><br><span class="line">  -developer-build ..... Compile and link Qt <span class="keyword">for</span> developing Qt itself</span><br><span class="line">                         (exports <span class="keyword">for</span> auto-tests, extra checks, etc.) [no]</span><br><span class="line"></span><br><span class="line">  -shared .............. Build shared Qt libraries [yes] (no <span class="keyword">for</span> UIKit)</span><br><span class="line">  -static .............. Build static Qt libraries [no] (yes <span class="keyword">for</span> UIKit)</span><br><span class="line">  -framework ........... Build Qt framework bundles [yes] (Apple only)</span><br><span class="line"></span><br><span class="line">  -platform &lt;target&gt; ... Select host mkspec [detected]</span><br><span class="line">  -xplatform &lt;target&gt; .. Select target mkspec when cross-compiling [PLATFORM]</span><br><span class="line">  -device &lt;name&gt; ....... Cross-compile <span class="keyword">for</span> device &lt;name&gt;</span><br><span class="line">  -device-option &lt;key=value&gt; ... Add option <span class="keyword">for</span> the device mkspec</span><br><span class="line"></span><br><span class="line">  -appstore-compliant .. Disable code that is not allowed <span class="keyword">in</span> platform app stores.</span><br><span class="line">                         This is on by default <span class="keyword">for</span> platforms <span class="built_in">which</span> require distribution</span><br><span class="line">                         through an app store by default, <span class="keyword">in</span> particular Android,</span><br><span class="line">                         iOS, tvOS, watchOS, and Universal Windows Platform. [auto]</span><br><span class="line"></span><br><span class="line">  -qtnamespace &lt;name&gt; .. Wrap all Qt library code <span class="keyword">in</span> <span class="string">'namespace &lt;name&gt; &#123;...&#125;'</span>.</span><br><span class="line">  -qtlibinfix &lt;infix&gt; .. Rename all libQt5*.so to libQt5*&lt;infix&gt;.so.</span><br><span class="line">  -qtlibinfix-plugins .. Rename Qt plugins according to -qtlibinfix [no]</span><br><span class="line"></span><br><span class="line">  -testcocoon .......... Instrument with the TestCocoon code coverage tool [no]</span><br><span class="line">  -gcov ................ Instrument with the GCov code coverage tool [no]</span><br><span class="line"></span><br><span class="line">  -trace [backend] ..... Enable instrumentation with tracepoints.</span><br><span class="line">                         Currently supported backends are <span class="string">'etw'</span> (Windows) and</span><br><span class="line">                         <span class="string">'lttng'</span> (Linux), or <span class="string">'yes'</span> <span class="keyword">for</span> auto-detection. [no]</span><br><span class="line"></span><br><span class="line">  -sanitize &#123;address|thread|memory|undefined&#125;</span><br><span class="line">                         Instrument with the specified compiler sanitizer.</span><br><span class="line">                         Note that some sanitizers cannot be combined;</span><br><span class="line">                         <span class="keyword">for</span> example, -sanitize address cannot be combined with</span><br><span class="line">                         -sanitize thread.</span><br><span class="line"></span><br><span class="line">  -coverage &#123;trace-pc-guard&#125;</span><br><span class="line">                         Add code coverage instrumentation (Clang only)</span><br><span class="line"></span><br><span class="line">  -c++std &lt;edition&gt; .... Select C++ standard &lt;edition&gt; [c++2a/c++17/c++14/c++11]</span><br><span class="line">                         (Not supported with MSVC 2015)</span><br><span class="line"></span><br><span class="line">  -sse2 ................ Use SSE2 instructions [auto]</span><br><span class="line">  -sse3/-ssse3/-sse4.1/-sse4.2/-avx/-avx2/-avx512</span><br><span class="line">                         Enable use of particular x86 instructions [auto]</span><br><span class="line">                         Enabled ones are still subject to runtime detection.</span><br><span class="line">  -mips_dsp/-mips_dspr2  Use MIPS DSP/rev2 instructions [auto]</span><br><span class="line"></span><br><span class="line">  -qreal &lt;<span class="built_in">type</span>&gt; ........ typedef qreal to the specified <span class="built_in">type</span>. [double]</span><br><span class="line">                         Note: this affects binary compatibility.</span><br><span class="line"></span><br><span class="line">  -R &lt;string&gt; .......... Add an explicit runtime library path to the Qt</span><br><span class="line">                         libraries. Supports paths relative to LIBDIR.</span><br><span class="line">  -rpath ............... Link Qt libraries and executables using the library</span><br><span class="line">                         install path as a runtime library path. Similar to</span><br><span class="line">                         -R LIBDIR. On Apple platforms, disabling this implies</span><br><span class="line">                         using absolute install names (based <span class="keyword">in</span> LIBDIR) <span class="keyword">for</span></span><br><span class="line">                         dynamic libraries and frameworks. [auto]</span><br><span class="line"></span><br><span class="line">  -reduce-exports ...... Reduce amount of exported symbols [auto]</span><br><span class="line">  -reduce-relocations .. Reduce amount of relocations [auto] (Unix only)</span><br><span class="line"></span><br><span class="line">  -plugin-manifests .... Embed manifests into plugins [no] (Windows only)</span><br><span class="line">  -static-runtime ...... With -static, use static runtime [no] (Windows only)</span><br><span class="line"></span><br><span class="line">  -pch ................. Use precompiled headers [auto]</span><br><span class="line">  -ltcg ................ Use Link Time Code Generation [no]</span><br><span class="line">  -linker [bfd,gold,lld] Force use of the GNU ld, GNU gold or LLVM/LLD linker</span><br><span class="line">                         instead of default one (GCC only)</span><br><span class="line">  -incredibuild-xge .... Use the IncrediBuild XGE [no] (Windows only)</span><br><span class="line">  -ccache .............. Use the ccache compiler cache [no] (Unix only)</span><br><span class="line">  -make-tool &lt;tool&gt; .... Use &lt;tool&gt; to build qmake [nmake] (Windows only)</span><br><span class="line">  -mp .................. Use multiple processors <span class="keyword">for</span> compilation (MSVC only)</span><br><span class="line"></span><br><span class="line">  -warnings-are-errors . Treat warnings as errors [no; yes <span class="keyword">if</span> -developer-build]</span><br><span class="line">  -silent .............. Reduce the build output so that warnings and errors</span><br><span class="line">                         can be seen more easily</span><br><span class="line"></span><br><span class="line">Build environment:</span><br><span class="line"></span><br><span class="line">  -sysroot &lt;dir&gt; ....... Set &lt;dir&gt; as the target sysroot</span><br><span class="line">  -gcc-sysroot ......... With -sysroot, pass --sysroot to the compiler [yes]</span><br><span class="line"></span><br><span class="line">  -pkg-config .......... Use pkg-config [auto] (Unix only)</span><br><span class="line"></span><br><span class="line">  -D &lt;string&gt; .......... Pass additional preprocessor define</span><br><span class="line">  -I &lt;string&gt; .......... Pass additional include path</span><br><span class="line">  -L &lt;string&gt; .......... Pass additional library path</span><br><span class="line">  -F &lt;string&gt; .......... Pass additional framework path (Apple only)</span><br><span class="line"></span><br><span class="line">  -sdk &lt;sdk&gt; ........... Build Qt using Apple provided SDK &lt;sdk&gt;. The argument</span><br><span class="line">                         should be one of the available SDKs as listed by</span><br><span class="line">                         <span class="string">'xcodebuild -showsdks'</span>.</span><br><span class="line">                         Note that the argument applies only to Qt libraries</span><br><span class="line">                         and applications built using the target mkspec - not</span><br><span class="line">                         host tools such as qmake, moc, rcc, etc.</span><br><span class="line"></span><br><span class="line">  -android-sdk path .... Set Android SDK root path [<span class="variable">$ANDROID_SDK_ROOT</span>]</span><br><span class="line">  -android-ndk path .... Set Android NDK root path [<span class="variable">$ANDROID_NDK_ROOT</span>]</span><br><span class="line">  -android-ndk-platform  Set Android platform</span><br><span class="line">  -android-ndk-host .... Set Android NDK host (linux-x86, linux-x86_64, etc.)</span><br><span class="line">                         [<span class="variable">$ANDROID_NDK_HOST</span>]</span><br><span class="line">  -android-abis .......  Comma separated Android abis, default is:</span><br><span class="line">                         armeabi-v7a,arm64-v8a,x86,x86_64</span><br><span class="line">  -android-style-assets  Automatically extract style assets from the device at</span><br><span class="line">                         run time. This option makes the Android style behave</span><br><span class="line">                         correctly, but also makes the Android platform plugin</span><br><span class="line">                         incompatible with the LGPL2.1. [yes]</span><br><span class="line"></span><br><span class="line">Component selection:</span><br><span class="line"></span><br><span class="line">  -skip &lt;repo&gt; ......... Exclude an entire repository from the build.</span><br><span class="line">  -make &lt;part&gt; ......... Add &lt;part&gt; to the list of parts to be built.</span><br><span class="line">                         Specifying this option clears the default list first.</span><br><span class="line">                         [libs and examples, also tools <span class="keyword">if</span> not cross-building,</span><br><span class="line">                         also tests <span class="keyword">if</span> -developer-build]</span><br><span class="line">  -nomake &lt;part&gt; ....... Exclude &lt;part&gt; from the list of parts to be built.</span><br><span class="line">  -compile-examples .... When <span class="built_in">unset</span>, install only the sources of examples</span><br><span class="line">                         [no on WebAssembly, otherwise yes]</span><br><span class="line">  -gui ................. Build the Qt GUI module and dependencies [yes]</span><br><span class="line">  -widgets ............. Build the Qt Widgets module and dependencies [yes]</span><br><span class="line">  -no-dbus ............. Do not build the Qt D-Bus module</span><br><span class="line">                         [default on Android and Windows]</span><br><span class="line">  -dbus-linked ......... Build Qt D-Bus and link to libdbus-1 [auto]</span><br><span class="line">  -dbus-runtime ........ Build Qt D-Bus and dynamically load libdbus-1 [no]</span><br><span class="line">  -accessibility ....... Enable accessibility support [yes]</span><br><span class="line">                         Note: Disabling accessibility is not recommended.</span><br><span class="line"></span><br><span class="line">Qt comes with bundled copies of some 3rd party libraries. These are used</span><br><span class="line">by default <span class="keyword">if</span> auto-detection of the respective system library fails.</span><br><span class="line"></span><br><span class="line">Core options:</span><br><span class="line"></span><br><span class="line">  -doubleconversion .... Select used double conversion library [system/qt/no]</span><br><span class="line">                         No implies use of sscanf_l and snprintf_l (imprecise).</span><br><span class="line">  -glib ................ Enable Glib support [no; auto on Unix]</span><br><span class="line">  -eventfd ............. Enable eventfd support</span><br><span class="line">  -inotify ............. Enable inotify support</span><br><span class="line">  -iconv ............... Enable iconv(3) support [posix/sun/gnu/no] (Unix only)</span><br><span class="line">  -icu ................. Enable ICU support [auto]</span><br><span class="line">  -pcre ................ Select used libpcre2 [system/qt/no]</span><br><span class="line">  -pps ................. Enable PPS support [auto] (QNX only)</span><br><span class="line">  -zlib ................ Select used zlib [system/qt]</span><br><span class="line"></span><br><span class="line">  Logging backends:</span><br><span class="line">    -journald .......... Enable journald support [no] (Unix only)</span><br><span class="line">    -syslog ............ Enable syslog support [no] (Unix only)</span><br><span class="line">    -slog2 ............. Enable slog2 support [auto] (QNX only)</span><br><span class="line"></span><br><span class="line">Network options:</span><br><span class="line"></span><br><span class="line">  -ssl ................. Enable either SSL support method [auto]</span><br><span class="line">  -no-openssl .......... Do not use OpenSSL [default on Apple and WinRT]</span><br><span class="line">  -openssl-linked ...... Use OpenSSL and link to libssl [no]</span><br><span class="line">  -openssl-runtime ..... Use OpenSSL and dynamically load libssl [auto]</span><br><span class="line">  -schannel ............ Use Secure Channel [no] (Windows only)</span><br><span class="line">  -securetransport ..... Use SecureTransport [auto] (Apple only)</span><br><span class="line"></span><br><span class="line">  -sctp ................ Enable SCTP support [no]</span><br><span class="line"></span><br><span class="line">  -libproxy ............ Enable use of libproxy [no]</span><br><span class="line">  -system-proxies ...... Use system network proxies by default [yes]</span><br><span class="line"></span><br><span class="line">Gui, printing, widget options:</span><br><span class="line"></span><br><span class="line">  -cups ................ Enable CUPS support [auto] (Unix only)</span><br><span class="line"></span><br><span class="line">  -fontconfig .......... Enable Fontconfig support [auto] (Unix only)</span><br><span class="line">  -freetype ............ Select used FreeType [system/qt/no]</span><br><span class="line">  -harfbuzz ............ Select used HarfBuzz-NG [system/qt/no]</span><br><span class="line">                         (Not auto-detected on Apple and Windows)</span><br><span class="line"></span><br><span class="line">  -gtk ................. Enable GTK platform theme support [auto]</span><br><span class="line"></span><br><span class="line">  -lgmon ............... Enable lgmon support [auto] (QNX only)</span><br><span class="line"></span><br><span class="line">  -no-opengl ........... Disable OpenGL support</span><br><span class="line">  -opengl &lt;api&gt; ........ Enable OpenGL support. Supported APIs:</span><br><span class="line">                         es2 (default on Windows), desktop (default on Unix),</span><br><span class="line">                         dynamic (Windows only)</span><br><span class="line">  -opengles3 ........... Enable OpenGL ES 3.x support instead of ES 2.x [auto]</span><br><span class="line">  -egl ................. Enable EGL support [auto]</span><br><span class="line">  -angle ............... Use bundled ANGLE to support OpenGL ES 2.0 [auto]</span><br><span class="line">                         (Windows only)</span><br><span class="line">  -combined-angle-lib .. Merge LibEGL and LibGLESv2 into LibANGLE (Windows only)</span><br><span class="line"></span><br><span class="line">  -qpa &lt;name&gt; .......... Select default QPA backend(s) (e.g., xcb, cocoa, windows)</span><br><span class="line">                         A prioritized list separated by semi-colons.</span><br><span class="line">  -xcb-xlib............. Enable Xcb-Xlib support [auto]</span><br><span class="line"></span><br><span class="line">  Platform backends:</span><br><span class="line">    -direct2d .......... Enable Direct2D support [auto] (Windows only)</span><br><span class="line">    -directfb .......... Enable DirectFB support [no] (Unix only)</span><br><span class="line">    -eglfs ............. Enable EGLFS support [auto; no on Android and Windows]</span><br><span class="line">    -gbm ............... Enable backends <span class="keyword">for</span> GBM [auto] (Linux only)</span><br><span class="line">    -kms ............... Enable backends <span class="keyword">for</span> KMS [auto] (Linux only)</span><br><span class="line">    -linuxfb ........... Enable Linux Framebuffer support [auto] (Linux only)</span><br><span class="line">    -xcb ............... Enable X11 support. Select used xcb-* libraries [system/qt/no]</span><br><span class="line">                         (-qt-xcb still uses system version of libxcb itself)</span><br><span class="line"></span><br><span class="line">  Input backends:</span><br><span class="line">    -libudev............ Enable udev support [auto]</span><br><span class="line">    -evdev ............. Enable evdev support [auto]</span><br><span class="line">    -imf ............... Enable IMF support [auto] (QNX only)</span><br><span class="line">    -libinput .......... Enable libinput support [auto]</span><br><span class="line">    -mtdev ............. Enable mtdev support [auto]</span><br><span class="line">    -tslib ............. Enable tslib support [auto]</span><br><span class="line">    -xcb-xinput ........ Enable XInput2 support [auto]</span><br><span class="line">    -xkbcommon ......... Enable key mapping support [auto]</span><br><span class="line"></span><br><span class="line">  Image formats:</span><br><span class="line">    -gif ............... Enable reading support <span class="keyword">for</span> GIF [auto]</span><br><span class="line">    -ico ............... Enable support <span class="keyword">for</span> ICO [yes]</span><br><span class="line">    -libpng ............ Select used libpng [system/qt/no]</span><br><span class="line">    -libjpeg ........... Select used libjpeg [system/qt/no]</span><br><span class="line"></span><br><span class="line">Database options:</span><br><span class="line"></span><br><span class="line">  -sql-&lt;driver&gt; ........ Enable SQL &lt;driver&gt; plugin. Supported drivers:</span><br><span class="line">                         db2 ibase mysql oci odbc psql sqlite2 sqlite tds</span><br><span class="line">                         [all auto]</span><br><span class="line">  -sqlite .............. Select used sqlite3 [system/qt]</span><br><span class="line"></span><br><span class="line">Qt3D options:</span><br><span class="line"></span><br><span class="line">  -assimp .............. Select used assimp library [system/qt/no]</span><br><span class="line">  -qt3d-profile-jobs ... Enable <span class="built_in">jobs</span> profiling [no]</span><br><span class="line">  -qt3d-profile-gl ..... Enable OpenGL profiling [no]</span><br><span class="line">  -qt3d-simd ........... Select level of SIMD support [no/sse2/avx2]</span><br><span class="line">  -qt3d-render ......... Enable the Qt3D Render aspect [yes]</span><br><span class="line">  -qt3d-input .......... Enable the Qt3D Input aspect [yes]</span><br><span class="line">  -qt3d-logic .......... Enable the Qt3D Logic aspect [yes]</span><br><span class="line">  -qt3d-extras ......... Enable the Qt3D Extras aspect [yes]</span><br><span class="line">  -qt3d-animation....... Enable the Qt3D Animation aspect [yes]</span><br><span class="line"></span><br><span class="line">Further image format options:</span><br><span class="line"></span><br><span class="line">  -jasper .............. Enable JPEG-2000 support using the JasPer library [no]</span><br><span class="line">  -mng ................. Enable MNG support [no]</span><br><span class="line">  -tiff ................ Enable TIFF support [system/qt/no]</span><br><span class="line">  -webp ................ Enable WEBP support [system/qt/no]</span><br><span class="line"></span><br><span class="line">Multimedia options:</span><br><span class="line"></span><br><span class="line">  -pulseaudio .......... Enable PulseAudio support [auto] (Unix only)</span><br><span class="line">  -alsa ................ Enable ALSA support [auto] (Unix only)</span><br><span class="line">  -no-gstreamer ........ Disable support <span class="keyword">for</span> GStreamer</span><br><span class="line">  -gstreamer [version] . Enable GStreamer support [auto]</span><br><span class="line">                         With no parameter, 1.0 is tried first, <span class="keyword">then</span> 0.10.</span><br><span class="line">  -evr ................. Enables EVR <span class="keyword">in</span> DirectShow and WMF [auto]</span><br><span class="line"></span><br><span class="line">QtQuick3D options:</span><br><span class="line"></span><br><span class="line">  -assimp .............. Select used assimp library [system/qt/no]</span><br><span class="line"></span><br><span class="line">TextToSpeech options:</span><br><span class="line"></span><br><span class="line">  -flite ............... Enable Flite support [auto] (Unix only)</span><br><span class="line">  -flite-alsa .......... Enable Flite with ALSA support [auto] (Unix only)</span><br><span class="line">  -speechd ............. Enable speech dispatcher support [auto] (Unix only)</span><br><span class="line"></span><br><span class="line">WebEngine options:</span><br><span class="line"></span><br><span class="line">  -webengine-alsa ................ Enable ALSA support [auto] (Linux only)</span><br><span class="line">  -webengine-pulseaudio .......... Enable PulseAudio support [auto]</span><br><span class="line">                                   (Linux only)</span><br><span class="line">  -webengine-embedded-build ...... Enable Linux embedded build [auto]</span><br><span class="line">                                   (Linux only)</span><br><span class="line">  -webengine-icu ................. Use system ICU libraries [system/qt]</span><br><span class="line">                                   (Linux only)</span><br><span class="line">  -webengine-ffmpeg .............. Use system FFmpeg libraries [system/qt]</span><br><span class="line">                                   (Linux only)</span><br><span class="line">  -webengine-opus ................ Use system Opus libraries [system/qt]</span><br><span class="line">                                   (Linux only)</span><br><span class="line">  -webengine-webp ................ Use system WebP libraries [system/qt]</span><br><span class="line">                                   (Linux only)</span><br><span class="line">  -webengine-pepper-plugins ...... Enable use of Pepper Flash and Widevine</span><br><span class="line">                                   plugins [auto]</span><br><span class="line">  -webengine-printing-and-pdf .... Enable use of printing and output to PDF</span><br><span class="line">                                   [auto]</span><br><span class="line">  -webengine-proprietary-codecs .. Enable support <span class="keyword">for</span> proprietary codecs [no]</span><br><span class="line">  -webengine-spellchecker ........ Enable support <span class="keyword">for</span> spellchecker [yes]</span><br><span class="line">  -webengine-native-spellchecker . Enable support <span class="keyword">for</span> native spellchecker [no]</span><br><span class="line">                                   (macOS only)</span><br><span class="line">  -webengine-webrtc .............. Enable support <span class="keyword">for</span> WebRTC [auto]</span><br></pre></td></tr></table></figure>

<p>3. </p>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>C++</tag>
      </tags>
  </entry>
  <entry>
    <title>ffmpeg认识与编译(1)</title>
    <url>/2020/12/23/ffmpeg%E8%AE%A4%E8%AF%86%E4%B8%8E%E7%BC%96%E8%AF%91-1/</url>
    <content><![CDATA[<h2 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h2><h3 id="源码包-F-GitHub-ffmpeg-4-2-3编译"><a href="#源码包-F-GitHub-ffmpeg-4-2-3编译" class="headerlink" title="源码包 F:\GitHub\ffmpeg-4.2.3编译"></a>源码包 F:\GitHub\ffmpeg-4.2.3编译</h3><p>看了几个编译脚本都依赖了msys2<br><a href="https://github.com/microsoft/FFmpegInterop" target="_blank" rel="noopener">https://github.com/microsoft/FFmpegInterop</a>   //Interop 交互</p>
<h3 id="msys2"><a href="#msys2" class="headerlink" title="msys2"></a>msys2</h3><p>模拟linux环境的工具可替代msys，MinGW，Cygwin  下载地址<a href="https://www.msys2.org/" target="_blank" rel="noopener">https://www.msys2.org/</a></p>
<p>ps: 这玩意居然91.3MB WHAT IS THIS?</p>
<p><a href="https://trac.ffmpeg.org/wiki/CompilationGuide" target="_blank" rel="noopener">https://trac.ffmpeg.org/wiki/CompilationGuide</a><br><a href="https://www.ffmpeg.org/platform.html#Microsoft-Visual-C_002b_002b-or-Intel-C_002b_002b-Compiler-for-Windows" target="_blank" rel="noopener">https://www.ffmpeg.org/platform.html#Microsoft-Visual-C_002b_002b-or-Intel-C_002b_002b-Compiler-for-Windows</a></p>
<ol>
<li>在C:\msys64\msys2_shell.cmd 运行</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#过程较慢 更新很多组件</span></span><br><span class="line">pacman -Syu                 </span><br><span class="line">pacman -S make pkgconf diffutils yasm</span><br></pre></td></tr></table></figure>



<h3 id="编译问题"><a href="#编译问题" class="headerlink" title="编译问题"></a>编译问题</h3><ol>
<li>cl.exe 不识别 应该是没有 set MSYS2_PATH_TYPE=inherit</li>
<li>make: 未找到命令</li>
</ol>
]]></content>
  </entry>
  <entry>
    <title>processhacker源码分析</title>
    <url>/2020/11/27/processhacker%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/</url>
    <content><![CDATA[<h2 id="preview"><a href="#preview" class="headerlink" title="preview"></a>preview</h2><ol>
<li><p>PhInitializePhLibEx<br> PhInitializeWindowsVersion  RtlGetVersion<br> PhInitializeSystemInformation  NtQuerySystemInformation<br> PhHeapInitialization   RtlCreateHeap   RtlSetHeapInformation<br> PhQueuedLockInitialization  NtCreateKeyedEvent  PhQueuedLockSpinCount = 2000<br> PhRefInitialization         RtlInitializeSListHead   PhInitializeFreeList    TlsAlloc        KUSER_SHARED_DATA 内核共享区域<br> PhBaseInitialization  </p>
</li>
<li><p>NtCreateMutant</p>
</li>
<li><p>PhGuiSupportInitialization  PhCreateHashtable</p>
</li>
<li><p>PhSettingsInitialization PhAddDefaultSettings  PhUpdateCachedSettings</p>
</li>
<li><p>PeInitializeSettings      初始化参数 appdata中xml配置</p>
</li>
<li><p>PvPropInitialization</p>
</li>
<li><p>PhTreeNewInitialization</p>
</li>
<li><p>PhLoadMappedImageEx   PhMapViewOfEntireFile</p>
<p> #define IMAGE_DOS_SIGNATURE                 0x5A4D      // MZ<br> #define    IMAGE_ELF_SIGNATURE 0x457f // “\x7fELF”</p>
</li>
<li><p>PvPeProperties<br> PrivateExtractIconExW 获取图标user32.dll<br> PvpLoadDbgHelp  InitializeListHead   PhInitializeQueuedLock   PhInitializeAvlTree<br> PhLoadModuleSymbolProvider  PhfAcquireFastLockExclusive 锁定pdb<br> PvCreatePropContext</p>
</li>
</ol>
<h2 id="processhacker"><a href="#processhacker" class="headerlink" title="processhacker"></a>processhacker</h2><ol>
<li><p>PHP_BASE_THREAD_DBG   teb processid threadid  </p>
</li>
<li><p>PhInitializePhLibEx(同上)</p>
</li>
<li><p>PhInitializeDirectoryPolicy  GetApplicationDirectory SetCurrentDirectory</p>
</li>
<li><p>PhInitializeExceptionPolicy  WIN7以上 GetErrorMode  RtlSetUnhandledExceptionFilter</p>
</li>
<li><p>PhInitializeNamespacePolicy  mutex</p>
</li>
<li><p>PhInitializeMitigationPolicy //Mitigation：缓解 <a href="https://docs.microsoft.com/zh-cn/windows/security/threat-protection/overview-of-threat-mitigations-in-windows-10" target="_blank" rel="noopener">https://docs.microsoft.com/zh-cn/windows/security/threat-protection/overview-of-threat-mitigations-in-windows-10</a></p>
</li>
<li><p>PhInitializeRestartPolicy  //vista 因为更新等原因重启后 重新启动计算机应用程序  RegisterApplicationRestart EWX_RESTARTAPPS<br>一般方式： WM_QUERYENDSESSION   RegisterApplicationRestart 系统重启是用ExitWindowsEx+EWX_RESTARTAPPS 或者InitiateShutdown+SHUTDOWN_RESTARTAPPS</p>
</li>
<li><p>PhInitializeAppSystem<br> PhProcessProviderInitialization  </p>
<pre><code> PhProcessImageListInitialization</code></pre>
<p> PhServiceProviderInitialization<br> PhNetworkProviderInitialization</p>
</li>
</ol>
]]></content>
  </entry>
  <entry>
    <title>压缩算法总结</title>
    <url>/2020/12/14/%E5%8E%8B%E7%BC%A9%E7%AE%97%E6%B3%95%E6%80%BB%E7%BB%93/</url>
    <content><![CDATA[<h2 id="压缩算法总结"><a href="#压缩算法总结" class="headerlink" title="压缩算法总结"></a>压缩算法总结</h2><p>经常记不住性能特点，数据来源<a href="https://linuxreviews.org/Comparison_of_Compression_Algorithms" target="_blank" rel="noopener">https://linuxreviews.org/Comparison_of_Compression_Algorithms</a> </p>
<table>
<thead>
<tr>
<th>algorithm</th>
<th>time</th>
<th>size</th>
<th>binary</th>
<th>parameters</th>
<th>info</th>
</tr>
</thead>
<tbody><tr>
<td>algorithm</td>
<td>time</td>
<td>size</td>
<td>binary</td>
<td>parameters</td>
<td>info</td>
</tr>
<tr>
<td>none</td>
<td>0m0.934s</td>
<td>939M</td>
<td>just tar</td>
<td>cf</td>
<td>tar itself is an archiving tool, you do not need to compress the archives</td>
</tr>
<tr>
<td>gzip</td>
<td>0m23.502s</td>
<td>177M</td>
<td>gzip</td>
<td>cfz</td>
<td></td>
</tr>
<tr>
<td>gzip</td>
<td>0m3.132s</td>
<td>177M</td>
<td>pigz</td>
<td>c -Ipigz -f</td>
<td>pigz 2.4</td>
</tr>
<tr>
<td>bzip2</td>
<td>1m0.798s</td>
<td>134M</td>
<td>bzip2</td>
<td>cfj</td>
<td>Standard bzip2 will only use one core (at 100%)</td>
</tr>
<tr>
<td>bzip2</td>
<td>0m9.091s</td>
<td>135M</td>
<td>pbzip2</td>
<td>c -Ipbzip2 -f</td>
<td>Parallel bzip2. RAM usage topped out at about 900 MiB RAM.</td>
</tr>
<tr>
<td>lz4</td>
<td>0m3.914s</td>
<td>287M</td>
<td>lz4</td>
<td>c -I”lz4” -f</td>
<td>Really fast but the resulting archive is barely compressed. Worst compression king.</td>
</tr>
<tr>
<td>lz4</td>
<td>0m56.506s</td>
<td>207M</td>
<td>lz4</td>
<td>c -I”lz4 -12” -f</td>
<td>Supports levels -[1-12].Uses 1 core, does not appear to be any multi-threaded variant(?)</td>
</tr>
<tr>
<td>lzip</td>
<td>4m42.017s</td>
<td>116M</td>
<td>lzip</td>
<td>c –lzip -f</td>
<td>v1.21. Standard lzip will only use one core (at 100%). Very slow.</td>
</tr>
<tr>
<td>lzip</td>
<td>0m42.542s</td>
<td>118M</td>
<td>plzip</td>
<td>c -Iplzip -f</td>
<td>plzip 1.8 (Parallel lzip), default level -6</td>
</tr>
<tr>
<td>lzip</td>
<td>1m39.697s</td>
<td>110M</td>
<td>plzip</td>
<td>c -I”plzip -9” -f</td>
<td>Parallel lzip at best compression -9. plzip process used 5.1 GiB RAM at its maximum.</td>
</tr>
<tr>
<td>xz</td>
<td>5m2.952s</td>
<td>114M</td>
<td>xz</td>
<td>cfJ</td>
<td>Standard xz will only use one core (at 100%). Unbearably slow.</td>
</tr>
<tr>
<td>xz</td>
<td>0m53.569s</td>
<td>115M</td>
<td>pxz</td>
<td>c -Ipxz -f</td>
<td>Parallel PXZ 4.999.9beta. Process used 1.4 GiB RAM at its maximum.</td>
</tr>
<tr>
<td>xz</td>
<td>1m33.441s</td>
<td>110M</td>
<td>pxz</td>
<td>c -I”pxz -9” -f</td>
<td>Parallel PXZ 4.999.9beta using its best possible compression. pxz process topped out at 3.5 GiB resident.</td>
</tr>
<tr>
<td>zstd</td>
<td>0m3.034s</td>
<td>167M</td>
<td>zstd</td>
<td>c –zstd -f</td>
<td>zstd uses 1 core if it is no told otherwise with -T# where # is a thread number and 0 means all cores (not all threads)</td>
</tr>
<tr>
<td>zstd</td>
<td>1m18.238s</td>
<td>117M</td>
<td>zstd</td>
<td>c -I”zstd -19 -T0” -f</td>
<td>-19 gives the best possible compression, -T0 utilizes all cores.</td>
</tr>
</tbody></table>
<h3 id="PK"><a href="#PK" class="headerlink" title="PK"></a>PK</h3><p>压缩体积<br>压缩<br>解压缩</p>
]]></content>
  </entry>
  <entry>
    <title>日志系统</title>
    <url>/2020/11/26/%E6%97%A5%E5%BF%97%E7%B3%BB%E7%BB%9F/</url>
    <content><![CDATA[<h2 id="日志需求"><a href="#日志需求" class="headerlink" title="日志需求"></a>日志需求</h2><p>一个完整的集中式日志系统，需要包含以下几个主要特点：</p>
<ol>
<li>收集－能够采集多种来源的日志数据</li>
<li>传输－能够稳定的把日志数据传输到中央系统</li>
<li>存储－如何存储日志数据</li>
<li>分析－可以支持 UI 分析</li>
<li>警告－能够提供错误报告，监控机制</li>
</ol>
<p>ELK Elasticsearch + Logstash + Kibana</p>
<p>Elasticsearch 是个开源分布式搜索引擎，提供搜集、分析、存储数据三大功能。它的特点有：分布式，零配置，自动发现，索引自动分片，索引副本机制，restful风格接口，多数据源，自动搜索负载等。<br>Logstash 主要是用来日志的搜集、分析、过滤日志的工具，支持大量的数据获取方式。一般工作方式为c/s架构，client端安装在需要收集日志的主机上，server端负责将收到的各节点日志进行过滤、修改等操作在一并发往elasticsearch上去<br>Kibana 也是一个开源和免费的工具，Kibana可以为 Logstash 和 ElasticSearch 提供的日志分析友好的 Web 界面，可以帮助汇总、分析和搜索重要数据日志</p>
<p>Filebeat隶属于Beats。目前Beats包含四种工具：</p>
<p>Packetbeat(搜集网络流量数据)<br>Topbeat(搜集系统、进程和文件系统级别的 CPU 和内存使用情况等数据)<br>Filebeat(搜集文件数据)<br>Winlogbeat (搜集 Windows 事件日志数据)</p>
<p>elastic/beats <a href="https://github.com/elastic/beats" target="_blank" rel="noopener">https://github.com/elastic/beats</a></p>
]]></content>
  </entry>
  <entry>
    <title>陈硕的cpp工程实践总结</title>
    <url>/2020/10/20/%E9%99%88%E7%A1%95%E7%9A%84cpp%E5%B7%A5%E7%A8%8B%E5%AE%9E%E8%B7%B5%E6%80%BB%E7%BB%93/</url>
    <content><![CDATA[<ol>
<li>多行注释也用// 多人协作时方便 参数换行写</li>
<li>尽量不要使用STL中iostream</li>
<li>避免使用虚函数作为库接口</li>
<li>库开发多用impl保证接口不变</li>
</ol>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>c++</tag>
        <tag>工程实践</tag>
      </tags>
  </entry>
  <entry>
    <title>MD打包需要dll详解</title>
    <url>/2021/01/05/MD%E6%89%93%E5%8C%85%E9%9C%80%E8%A6%81dll%E8%AF%A6%E8%A7%A3/</url>
    <content><![CDATA[<h2 id="MD编译的程序需要带哪些dll呢？"><a href="#MD编译的程序需要带哪些dll呢？" class="headerlink" title="MD编译的程序需要带哪些dll呢？"></a>MD编译的程序需要带哪些dll呢？</h2><h3 id="个人理解总结"><a href="#个人理解总结" class="headerlink" title="个人理解总结"></a>个人理解总结</h3><p>我们以vs2015编译的程序为例</p>
<ol>
<li><p>msvcp140.dll  可进一步拆分为ucrtbase.dll + vcruntime.dll</p>
</li>
<li><p>msvcr140.dll 一般是指运行时库</p>
</li>
<li><p>ucrtbase.dll c和cpp函数集合</p>
</li>
<li><p>vcruntime.dll vc++的运行时</p>
</li>
<li><p>windows api set 系列的dll 如 api—ms-<em>，ext—</em>.dll 一般不需要直接打包到进去，每个系统的版本号可能不一致，且该系列dll不是直接干活的而是转发调用系统核心</p>
</li>
<li><p>当缺少以上任意dll时，用户不应该手动去第三方网站下载，程序员应该提供所需的dll打包到目录，用户可以去微软下载安装对应版本的vcredist2015_x86.exe vcredist2015_x64.exe</p>
</li>
</ol>
<h3 id="vcredist"><a href="#vcredist" class="headerlink" title="vcredist"></a>vcredist</h3><p>当安装成功vcredist 检测c盘 windows/system32目录下会多出以下文件</p>
<ul>
<li>msvcp140.dll</li>
<li>concrt140.dll</li>
<li>mfc140.dll 系列</li>
<li>msvcp140.dll</li>
<li>vcamp140.dll</li>
<li>vccorlib140.dll</li>
<li>vcomp140.dll</li>
<li>vcruntime140.dll</li>
</ul>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>c++</tag>
        <tag>音乐</tag>
      </tags>
  </entry>
</search>
