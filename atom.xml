<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>꧁༺自由天空༻꧂</title>
  
  <subtitle>笔耕</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://969975553.gitee.io/"/>
  <updated>2020-04-26T11:46:54.520Z</updated>
  <id>https://969975553.gitee.io/</id>
  
  <author>
    <name>一潭清泓</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>google构建</title>
    <link href="https://969975553.gitee.io/2020/04/26/GN%E6%9E%84%E5%BB%BA/"/>
    <id>https://969975553.gitee.io/2020/04/26/GN%E6%9E%84%E5%BB%BA/</id>
    <published>2020-04-26T08:39:26.000Z</published>
    <updated>2020-04-26T11:46:54.520Z</updated>
    
    <content type="html"><![CDATA[<h2 id="GN构建系统"><a href="#GN构建系统" class="headerlink" title="GN构建系统"></a>GN构建系统</h2><h2 id="下载depot-tools并设置环境变量"><a href="#下载depot-tools并设置环境变量" class="headerlink" title="下载depot_tools并设置环境变量"></a>下载depot_tools并设置环境变量</h2><ol><li><p>git clone <a href="https://chromium.googlesource.com/chromium/tools/depot_tools.git" target="_blank" rel="noopener">https://chromium.googlesource.com/chromium/tools/depot_tools.git</a> (需要翻墙)</p></li><li><p>设置环境变量 将depot_tools的路径添加到环境变量(建议放置第一条，在python环境变量之前)</p></li><li><p>禁止工具升级 ==设置环境变量== DEPOT_TOOLS_UPDATE=0 或者 ==删除.git目录==</p></li></ol><p>工具库包含</p><ul><li><input checked="" disabled="" type="checkbox"> gclient 支持svn和git</li><li><input checked="" disabled="" type="checkbox"> gcl 预提交脚本for svn python的<a href="https://github.com/rietveld-codereview/rietveld" target="_blank" rel="noopener">codeview</a></li><li><input checked="" disabled="" type="checkbox"> git-cl 预提交脚本for git python的<a href="https://github.com/rietveld-codereview/rietveld" target="_blank" rel="noopener">codeview</a></li><li><input checked="" disabled="" type="checkbox"> svn</li><li><input checked="" disabled="" type="checkbox"> drover 快速还原svn提交</li><li><input checked="" disabled="" type="checkbox"> cpplint.py 静态检查工具</li><li><input checked="" disabled="" type="checkbox"> pylint python静态检查工具</li><li><input checked="" disabled="" type="checkbox"> presubmit_support.py脚本</li><li><input checked="" disabled="" type="checkbox"> repo: The repo tool.</li><li><input checked="" disabled="" type="checkbox"> zsh-goodies 补全</li><li><input checked="" disabled="" type="checkbox"> wtf</li><li><input checked="" disabled="" type="checkbox"> weekly</li><li><input checked="" disabled="" type="checkbox"> git-gs</li></ul><h2 id="GN-exe的生成"><a href="#GN-exe的生成" class="headerlink" title="GN exe的生成"></a>GN exe的生成</h2><p>GN是一个元构建系统，可为Ninja生成构建文件。</p><ol><li><p>git clone <a href="https://gn.googlesource.com/gn" target="_blank" rel="noopener">https://gn.googlesource.com/gn</a></p></li><li><p>python build/gen.py</p></li><li><p>ninja -C out(环境要有ninja)</p></li></ol><h2 id="GN使用命令"><a href="#GN使用命令" class="headerlink" title="GN使用命令"></a>GN使用命令</h2><ol><li><p>生成构建目录 gn gen out/windows_x86_debug</p></li><li><p>添加构建参数 gn args out/windows_x86_debug</p></li></ol><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// gn args --list out/windows_x86_debug</span></span><br><span class="line">is_debug = <span class="literal">true</span></span><br><span class="line">is_official_build=<span class="literal">false</span></span><br><span class="line">is_component_build = <span class="literal">false</span></span><br><span class="line">target_cpu=<span class="string">"x64"</span></span><br><span class="line">symbol_level = <span class="number">0</span></span><br><span class="line">is_win_fastlink = <span class="literal">true</span>   <span class="comment">//不生成pdb</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 交叉编译 https://gn.googlesource.com/gn/+/master/docs/cross_compiles.md</span></span><br><span class="line">target_os = <span class="string">"chromeos"</span></span><br><span class="line">target_os = <span class="string">"android"</span></span><br><span class="line"></span><br><span class="line">target_cpu = <span class="string">"arm"</span></span><br><span class="line">target_cpu = <span class="string">"x86"</span></span><br><span class="line">target_cpu = <span class="string">"x64"</span></span><br></pre></td></tr></table></figure><h2 id="编写GN文件"><a href="#编写GN文件" class="headerlink" title="编写GN文件"></a>编写GN文件</h2><h3 id="1-根目录下创建-gn文件"><a href="#1-根目录下创建-gn文件" class="headerlink" title="1. 根目录下创建.gn文件"></a>1. 根目录下创建.gn文件</h3><p>一般build目录下都有一些默认的配置 tool_chain</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># The location of the build configuration file.</span></span><br><span class="line">buildconfig = <span class="string">"//build/BUILDCONFIG.gn"</span></span><br></pre></td></tr></table></figure><h3 id="2-创建BUILD-gn"><a href="#2-创建BUILD-gn" class="headerlink" title="2. 创建BUILD.gn"></a>2. 创建BUILD.gn</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 可执行程序</span></span><br><span class="line">executable(<span class="string">"hello"</span>) &#123;</span><br><span class="line">  sources = [ <span class="string">"hello.cc"</span> ]</span><br><span class="line"></span><br><span class="line">  deps = [</span><br><span class="line">    <span class="string">":hello_shared"</span>,</span><br><span class="line">    <span class="string">":hello_static"</span>,</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">## dll</span></span><br><span class="line">shared_library(<span class="string">"hello_shared"</span>) &#123;</span><br><span class="line">  sources = [</span><br><span class="line">    <span class="string">"hello_shared.cc"</span>,</span><br><span class="line">    <span class="string">"hello_shared.h"</span>,</span><br><span class="line">  ]</span><br><span class="line"></span><br><span class="line">  defines = [ <span class="string">"HELLO_SHARED_IMPLEMENTATION"</span> ]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">## lib</span></span><br><span class="line">static_library(<span class="string">"hello_static"</span>) &#123;</span><br><span class="line">  sources = [</span><br><span class="line">    <span class="string">"hello_static.cc"</span>,</span><br><span class="line">    <span class="string">"hello_static.h"</span>,</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="ninja"><a href="#ninja" class="headerlink" title="ninja"></a>ninja</h2><ol><li><p>git clone <a href="git://github.com/ninja-build/ninja.git" target="_blank" rel="noopener">git://github.com/ninja-build/ninja.git</a></p></li><li><p>cmake 编译或者<a href="https://github.com/ninja-build/ninja/releases" target="_blank" rel="noopener">https://github.com/ninja-build/ninja/releases</a>下载binary</p></li></ol><h2 id="编译问题"><a href="#编译问题" class="headerlink" title="编译问题"></a>编译问题</h2><p>warning: A compatible version of re2c (&gt;= 0.11.3) was not found; changes to src/*.in.cc will not affect your build.<br>wrote build.ninja.</p><p>安装re2c <a href="http://re2c.org/" target="_blank" rel="noopener">http://re2c.org/</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;GN构建系统&quot;&gt;&lt;a href=&quot;#GN构建系统&quot; class=&quot;headerlink&quot; title=&quot;GN构建系统&quot;&gt;&lt;/a&gt;GN构建系统&lt;/h2&gt;&lt;h2 id=&quot;下载depot-tools并设置环境变量&quot;&gt;&lt;a href=&quot;#下载depot-tools并设置环
      
    
    </summary>
    
    
      <category term="技术" scheme="https://969975553.gitee.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="编译" scheme="https://969975553.gitee.io/tags/%E7%BC%96%E8%AF%91/"/>
    
      <category term="构建" scheme="https://969975553.gitee.io/tags/%E6%9E%84%E5%BB%BA/"/>
    
      <category term="gn" scheme="https://969975553.gitee.io/tags/gn/"/>
    
      <category term="ninja" scheme="https://969975553.gitee.io/tags/ninja/"/>
    
      <category term="depot_tools" scheme="https://969975553.gitee.io/tags/depot-tools/"/>
    
  </entry>
  
  <entry>
    <title>字体</title>
    <link href="https://969975553.gitee.io/2020/04/20/%E5%AD%97%E4%BD%93/"/>
    <id>https://969975553.gitee.io/2020/04/20/%E5%AD%97%E4%BD%93/</id>
    <published>2020-04-20T03:20:13.000Z</published>
    <updated>2020-04-22T07:13:15.859Z</updated>
    
    <content type="html"><![CDATA[<h3 id="概念介绍"><a href="#概念介绍" class="headerlink" title="概念介绍"></a>概念介绍</h3><ol><li><p>SFNT: 文件字体格式(可缩放字体和样条字体)，最初是Macintosh TrueType字体开发的。 现有字体 <a href="https://en.wikipedia.org/wiki/TrueType" target="_blank" rel="noopener">TrueType</a>、<a href="https://en.wikipedia.org/wiki/OpenType" target="_blank" rel="noopener">OpenType</a>、<a href="https://en.wikipedia.org/wiki/Web_Open_Font_Format" target="_blank" rel="noopener">Web Open Font Format</a></p></li><li><p>字体专利之争 Adobe 霸主,  Apple 和 MS 合作，Type 1 被迫开放所有人使用.</p></li><li><p>微软创建字体 Times New Roman(与Times Roman兼容), Arial(与Helvetica兼容)和Courier New(与Courier兼容)</p></li><li><p>微软推出clearType(亚像素渲染技术)</p></li><li><p>OpenType  微软TrueType Open(和Adobe 合作) 印刷行为 10000 多种字体，Adobe占了三分之一 除Cambria Math外，还提供了三种免费字体：Asana-Math，Neo Euler和XITS 支持数学</p></li><li><p>WOFF 压缩网络字体Google主导 W3C标准</p></li></ol><h3 id="文件格式"><a href="#文件格式" class="headerlink" title="文件格式"></a>文件格式</h3><ol><li><p>TrueType Collection .ttcf格式</p></li><li><p>字体裁剪工具</p></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;概念介绍&quot;&gt;&lt;a href=&quot;#概念介绍&quot; class=&quot;headerlink&quot; title=&quot;概念介绍&quot;&gt;&lt;/a&gt;概念介绍&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;SFNT: 文件字体格式(可缩放字体和样条字体)，最初是Macintosh TrueType字体开发的。 
      
    
    </summary>
    
    
      <category term="技术" scheme="https://969975553.gitee.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="字体" scheme="https://969975553.gitee.io/tags/%E5%AD%97%E4%BD%93/"/>
    
      <category term="裁剪字体" scheme="https://969975553.gitee.io/tags/%E8%A3%81%E5%89%AA%E5%AD%97%E4%BD%93/"/>
    
      <category term="SFNTLY" scheme="https://969975553.gitee.io/tags/SFNTLY/"/>
    
  </entry>
  
  <entry>
    <title>windows_v7.1_samples</title>
    <link href="https://969975553.gitee.io/2020/04/14/windows-v7-1-samples/"/>
    <id>https://969975553.gitee.io/2020/04/14/windows-v7-1-samples/</id>
    <published>2020-04-14T03:28:17.000Z</published>
    <updated>2020-04-14T06:45:06.827Z</updated>
    
    <content type="html"><![CDATA[<h3 id="时间函数"><a href="#时间函数" class="headerlink" title="时间函数"></a>时间函数</h3><ol><li><p>GetTickCount()  精度1毫秒</p></li><li><p>QueryPerformanceCounter()</p></li><li><p>time()</p></li><li><p>GetSystemTimeAsFileTime()</p></li><li><p>ftime()</p></li><li><p>GetLocalTime()  = GetSystemTimeAsFileTime() +  FileTimeToSystemTime()<br>精度 0.1 us</p></li></ol><p>Release Win32 Intel Core i7-8700 CPU @3.20GHz</p><table><thead><tr><th>函数名称</th><th>1000000次执行时间(us)</th></tr></thead><tbody><tr><td>GetSystemTimeAsFileTime() + FileTimeToSystemTime()</td><td>723,836</td></tr><tr><td>time()</td><td>559,098</td></tr><tr><td>GetLocalTime()</td><td>783,646</td></tr><tr><td>ftime()</td><td>788,472</td></tr><tr><td>GetTickCount()</td><td>31,506</td></tr><tr><td>QueryPerformanceCounter()</td><td>243,223</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;时间函数&quot;&gt;&lt;a href=&quot;#时间函数&quot; class=&quot;headerlink&quot; title=&quot;时间函数&quot;&gt;&lt;/a&gt;时间函数&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;GetTickCount()  精度1毫秒&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;QueryPerforman
      
    
    </summary>
    
    
      <category term="技术" scheme="https://969975553.gitee.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="windows" scheme="https://969975553.gitee.io/tags/windows/"/>
    
      <category term="性能" scheme="https://969975553.gitee.io/tags/%E6%80%A7%E8%83%BD/"/>
    
  </entry>
  
  <entry>
    <title>C++ const mutable volatile</title>
    <link href="https://969975553.gitee.io/2020/04/08/C++%E5%85%B3%E9%94%AE%E8%AF%8D/"/>
    <id>https://969975553.gitee.io/2020/04/08/C++%E5%85%B3%E9%94%AE%E8%AF%8D/</id>
    <published>2020-04-08T06:59:24.000Z</published>
    <updated>2020-04-13T08:31:11.739Z</updated>
    
    <content type="html"><![CDATA[<h2 id="修饰关键词"><a href="#修饰关键词" class="headerlink" title="修饰关键词"></a>修饰关键词</h2><h3 id="const"><a href="#const" class="headerlink" title="const"></a>const</h3><p>4种修饰</p><h3 id="mutable"><a href="#mutable" class="headerlink" title="mutable"></a>mutable</h3><p>适用场景: 当一个成员函数被从const 修饰后，需要修改某个成员属性 mutable 修饰属性</p><h3 id="volatile"><a href="#volatile" class="headerlink" title="volatile"></a>volatile</h3><p>三大特性：</p><ul><li>易变性</li><li>不可优化性</li><li>顺序性 (volatile修饰的变量不会被编译器优化乱序，但是非volatile修饰的变量可能会跟volatile变量乱序，依赖于cpu指令,不可以作为线程顺序控制)</li></ul><p>Java的关键词增强较多不一样<br><a href="http://hedengcheng.com/?p=725" target="_blank" rel="noopener">http://hedengcheng.com/?p=725</a></p><h3 id="static"><a href="#static" class="headerlink" title="static"></a>static</h3><ul><li>C语言</li></ul><ol><li><p>静态局部变量(全局数据区) 用于函数体内部修饰变量，这种变量的生存期长于该函数</p></li><li><p>静态全局变量和静态全局函数 定义在函数体外，用于修饰全局变量，表示该变量只在本文件可见</p></li></ol><ul><li>C++</li></ul><ol><li><p>静态数据成员 类成员 每个class有一份</p></li><li><p>静态成员函数 (不可访问普通成员)</p></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;修饰关键词&quot;&gt;&lt;a href=&quot;#修饰关键词&quot; class=&quot;headerlink&quot; title=&quot;修饰关键词&quot;&gt;&lt;/a&gt;修饰关键词&lt;/h2&gt;&lt;h3 id=&quot;const&quot;&gt;&lt;a href=&quot;#const&quot; class=&quot;headerlink&quot; title=&quot;con
      
    
    </summary>
    
    
      <category term="技术" scheme="https://969975553.gitee.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="C++" scheme="https://969975553.gitee.io/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>windows下httpGet请求</title>
    <link href="https://969975553.gitee.io/2020/04/07/windows%E4%B8%8BhttpGet%E8%AF%B7%E6%B1%82/"/>
    <id>https://969975553.gitee.io/2020/04/07/windows%E4%B8%8BhttpGet%E8%AF%B7%E6%B1%82/</id>
    <published>2020-04-07T07:54:51.000Z</published>
    <updated>2020-04-07T08:47:47.735Z</updated>
    
    <content type="html"><![CDATA[<h2 id="示例代码"><a href="#示例代码" class="headerlink" title="示例代码"></a>示例代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;list&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;WinInet.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> comment(lib, <span class="meta-string">"wininet.lib"</span>)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">namespace</span> WinInet</span><br><span class="line">&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> region HttpGet</span></span><br><span class="line">    <span class="keyword">static</span>  __inline</span><br><span class="line">        <span class="function"><span class="keyword">bool</span> <span class="title">ParserUrl</span><span class="params">(<span class="built_in">string</span> Url, <span class="built_in">string</span>&amp; Host, <span class="built_in">string</span>&amp; Filename, WORD&amp; Port)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        Port = INTERNET_DEFAULT_HTTP_PORT;</span><br><span class="line">        <span class="keyword">if</span> (Url.substr(<span class="number">0U</span>, <span class="number">7</span>) != <span class="string">"http://"</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        Url = Url.substr(<span class="number">7</span>);</span><br><span class="line">        <span class="keyword">int</span>  HostLen = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; (<span class="keyword">int</span>)Url.<span class="built_in">size</span>(); i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (Url[i] == (<span class="string">':'</span>) || Url[i] == (<span class="string">'/'</span>))</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            HostLen++;</span><br><span class="line">        &#125;</span><br><span class="line">        Host = Url.substr(<span class="number">0</span>, HostLen);</span><br><span class="line">        Url = Url.substr(HostLen);</span><br><span class="line">        <span class="keyword">if</span> (Url[<span class="number">0</span>] == <span class="string">':'</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; (<span class="keyword">int</span>)Url.<span class="built_in">size</span>(); i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (Url[i] == (<span class="string">'/'</span>))</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">string</span> strPort = Url.substr(<span class="number">0</span>, i);</span><br><span class="line">                    Port = atoi(strPort.c_str());</span><br><span class="line">                    Url = Url.substr(i);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        Filename = Url;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> _inline</span><br><span class="line">        <span class="function"><span class="built_in">string</span>  <span class="title">HttpGet</span><span class="params">(<span class="built_in">string</span> Url, DWORD&amp; httpStatus)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">string</span>              ret;</span><br><span class="line">        DWORD               byteread = <span class="number">0</span>;</span><br><span class="line">        HINTERNET           m_hInternetSession = <span class="literal">NULL</span>;</span><br><span class="line">        HINTERNET           m_hHttpConnection = <span class="literal">NULL</span>;</span><br><span class="line">        HINTERNET           m_hHttpFile = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">char</span>                <span class="built_in">buffer</span>[<span class="number">1024</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line">        <span class="comment">//</span></span><br><span class="line">        LPCSTR              ppszAcceptTypes[<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line">        DWORD   dwContentLength = <span class="number">0</span>, dwIndex = <span class="number">0</span>, filesize = <span class="number">0xffffffff</span>, totalSize = <span class="number">0</span>;</span><br><span class="line">        DWORD   dwBuffLen = <span class="keyword">sizeof</span>(dwContentLength);</span><br><span class="line"></span><br><span class="line">        DWORD dwFlags = INTERNET_FLAG_RELOAD;</span><br><span class="line">        DWORD TimeOut = <span class="number">15000</span>;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">string</span>  m_sServer, m_sObject;</span><br><span class="line">        WORD m_nPort = INTERNET_DEFAULT_HTTP_PORT;</span><br><span class="line">        httpStatus = DWORD(<span class="number">-1</span>);</span><br><span class="line">        <span class="keyword">if</span> (!ParserUrl(Url, m_sServer, m_sObject, m_nPort))</span><br><span class="line">            <span class="keyword">return</span> <span class="string">""</span>;</span><br><span class="line">        LPCSTR      headers = (<span class="string">"\r\n\r\n"</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        m_hInternetSession = ::InternetOpenA((<span class="string">"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:14.0) Gecko/20100101 Firefox/14.0.1"</span>), INTERNET_OPEN_TYPE_PRECONFIG, <span class="literal">NULL</span>, <span class="literal">NULL</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        InternetSetOption(m_hInternetSession, INTERNET_OPTION_CONNECT_TIMEOUT, &amp;TimeOut, <span class="keyword">sizeof</span>(DWORD));</span><br><span class="line">        InternetSetOption(m_hInternetSession, INTERNET_OPTION_DATA_RECEIVE_TIMEOUT, &amp;TimeOut, <span class="keyword">sizeof</span>(DWORD));</span><br><span class="line">        InternetSetOption(m_hInternetSession, INTERNET_OPTION_DATA_SEND_TIMEOUT, &amp;TimeOut, <span class="keyword">sizeof</span>(DWORD));</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (m_hInternetSession == <span class="literal">NULL</span>)</span><br><span class="line">            <span class="keyword">goto</span> EXIT;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        m_hHttpConnection = ::InternetConnectA(m_hInternetSession, m_sServer.c_str(), m_nPort, <span class="literal">NULL</span>,</span><br><span class="line">            <span class="literal">NULL</span>, INTERNET_SERVICE_HTTP, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">if</span> (m_hHttpConnection == <span class="literal">NULL</span>)</span><br><span class="line">            <span class="keyword">goto</span> EXIT;</span><br><span class="line">        <span class="comment">//Issue the request to read the file</span></span><br><span class="line"></span><br><span class="line">        ppszAcceptTypes[<span class="number">0</span>] = (<span class="string">"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8"</span>);  <span class="comment">//We support accepting any mime file type since this is a simple download of a file</span></span><br><span class="line">        ppszAcceptTypes[<span class="number">1</span>] = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        m_hHttpFile = HttpOpenRequestA(m_hHttpConnection, <span class="string">"GET"</span>, m_sObject.c_str(), <span class="string">"HTTP/1.0"</span>, <span class="literal">NULL</span>, ppszAcceptTypes, dwFlags, <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">if</span> (m_hHttpFile == <span class="literal">NULL</span>)</span><br><span class="line">            <span class="keyword">goto</span> EXIT;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!::HttpSendRequestA(m_hHttpFile, headers, <span class="built_in">strlen</span>(headers), <span class="literal">NULL</span>, <span class="number">0</span>))</span><br><span class="line">            <span class="keyword">goto</span> EXIT;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        dwBuffLen = <span class="keyword">sizeof</span>(httpStatus);</span><br><span class="line">        <span class="keyword">if</span> ((!HttpQueryInfoA(m_hHttpFile, HTTP_QUERY_STATUS_CODE | HTTP_QUERY_FLAG_NUMBER, &amp;httpStatus, &amp;dwBuffLen,</span><br><span class="line">            &amp;dwIndex)) || (httpStatus != HTTP_STATUS_OK))</span><br><span class="line">            <span class="keyword">goto</span> EXIT;</span><br><span class="line">        dwBuffLen = <span class="keyword">sizeof</span>(dwContentLength);</span><br><span class="line">        <span class="keyword">if</span> ((HttpQueryInfoA(m_hHttpFile, HTTP_QUERY_CONTENT_LENGTH | HTTP_QUERY_FLAG_NUMBER, &amp;dwContentLength, &amp;dwBuffLen,</span><br><span class="line">            &amp;dwIndex)))</span><br><span class="line">        &#123;</span><br><span class="line">            filesize = dwContentLength;</span><br><span class="line">            ret.reserve(dwContentLength);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            DWORD byteread = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">if</span> (!InternetReadFile(m_hHttpFile, <span class="built_in">buffer</span>, <span class="keyword">sizeof</span>(<span class="built_in">buffer</span>), &amp;byteread) || (byteread == <span class="number">0</span>))</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            totalSize += byteread;</span><br><span class="line">            ULONG written = <span class="number">0</span>;</span><br><span class="line">            ret += <span class="built_in">string</span>(<span class="built_in">buffer</span>, byteread);</span><br><span class="line">            <span class="comment">//ret-&gt;Write(buffer, byteread, &amp;written);</span></span><br><span class="line">            <span class="keyword">if</span> (totalSize &gt;= filesize)</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    EXIT:</span><br><span class="line">        <span class="keyword">if</span> (m_hInternetSession)</span><br><span class="line">            InternetCloseHandle(m_hInternetSession);</span><br><span class="line">        <span class="keyword">if</span> (m_hHttpConnection)</span><br><span class="line">            InternetCloseHandle(m_hHttpConnection);</span><br><span class="line">        <span class="keyword">if</span> (m_hHttpFile)</span><br><span class="line">            InternetCloseHandle(m_hHttpFile);</span><br><span class="line">        <span class="keyword">return</span>  ret;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> endregion HttpGet</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">DWORD httpStatus;</span><br><span class="line">  <span class="built_in">std</span>::<span class="built_in">string</span> buff = WinInet::HttpGet(w2a(url.c_str()), httpStatus);</span><br><span class="line">  <span class="keyword">if</span> (httpStatus != <span class="number">200</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;示例代码&quot;&gt;&lt;a href=&quot;#示例代码&quot; class=&quot;headerlink&quot; title=&quot;示例代码&quot;&gt;&lt;/a&gt;示例代码&lt;/h2&gt;&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;
      
    
    </summary>
    
    
      <category term="技术" scheme="https://969975553.gitee.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="windows" scheme="https://969975553.gitee.io/tags/windows/"/>
    
      <category term="网络" scheme="https://969975553.gitee.io/tags/%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>知名博客集锦</title>
    <link href="https://969975553.gitee.io/2020/03/25/%E7%9F%A5%E5%90%8D%E5%8D%9A%E5%AE%A2%E9%9B%86%E9%94%A6/"/>
    <id>https://969975553.gitee.io/2020/03/25/%E7%9F%A5%E5%90%8D%E5%8D%9A%E5%AE%A2%E9%9B%86%E9%94%A6/</id>
    <published>2020-03-25T12:08:52.000Z</published>
    <updated>2020-04-24T11:39:15.593Z</updated>
    
    <content type="html"><![CDATA[<h3 id="🐂🍺"><a href="#🐂🍺" class="headerlink" title="🐂🍺"></a>🐂🍺</h3><ul><li>Fabrice Bellard <a href="https://bellard.org/" target="_blank" rel="noopener">https://bellard.org/</a></li></ul><h3 id="C-程序员博客列表"><a href="#C-程序员博客列表" class="headerlink" title="C++程序员博客列表"></a>C++程序员博客列表</h3><ul><li>VCZH <a href="http://www.cppblog.com/vczh" target="_blank" rel="noopener">http://www.cppblog.com/vczh</a></li><li>朝闻道 <a href="https://www.cnblogs.com/findumars/" target="_blank" rel="noopener">https://www.cnblogs.com/findumars/</a></li><li>chromium技术博客 <a href="https://gclxry.com/" target="_blank" rel="noopener">https://gclxry.com/</a></li><li>morewindow <a href="https://blog.csdn.net/morewindows" target="_blank" rel="noopener">https://blog.csdn.net/morewindows</a></li><li>c++ <a href="http://r12f.com/" target="_blank" rel="noopener">http://r12f.com/</a></li><li>vs调试器 <a href="http://r12f.com/" target="_blank" rel="noopener">http://r12f.com/</a></li><li>wxquare <a href="https://www.cnblogs.com/wxquare/" target="_blank" rel="noopener">https://www.cnblogs.com/wxquare/</a></li><li>c++服务端 <a href="https://www.cnblogs.com/moyangvip/" target="_blank" rel="noopener">https://www.cnblogs.com/moyangvip/</a></li><li>王垠 <a href="http://www.yinwang.org/" target="_blank" rel="noopener">http://www.yinwang.org/</a></li><li>陈皓 <a href="https://coolshell.cn/" target="_blank" rel="noopener">https://coolshell.cn/</a></li></ul><h3 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h3><ul><li>何登成AliSql <a href="http://hedengcheng.com/" target="_blank" rel="noopener">http://hedengcheng.com/</a></li></ul><h3 id="JAVA程序员博客列表"><a href="#JAVA程序员博客列表" class="headerlink" title="JAVA程序员博客列表"></a>JAVA程序员博客列表</h3><ul><li>ajian005 <a href="https://blog.csdn.net/ajian005/" target="_blank" rel="noopener">https://blog.csdn.net/ajian005/</a></li></ul><h3 id="算法博客"><a href="#算法博客" class="headerlink" title="算法博客"></a>算法博客</h3><ul><li>hnust_xiehonghao <a href="https://blog.csdn.net/hnust_xiehonghao" target="_blank" rel="noopener">https://blog.csdn.net/hnust_xiehonghao</a></li></ul><h3 id="知识图谱"><a href="#知识图谱" class="headerlink" title="知识图谱"></a>知识图谱</h3><ul><li><a href="https://github.com/TeamStuQ/skill-map" target="_blank" rel="noopener">https://github.com/TeamStuQ/skill-map</a></li></ul><h3 id="安全博客"><a href="#安全博客" class="headerlink" title="安全博客"></a>安全博客</h3><ul><li>seebug <a href="https://paper.seebug.org/" target="_blank" rel="noopener">https://paper.seebug.org/</a></li><li>predator-wang <a href="https://www.cnblogs.com/predator-wang/" target="_blank" rel="noopener">https://www.cnblogs.com/predator-wang/</a></li><li>killcoco <a href="https://blog.csdn.net/qq_36810340" target="_blank" rel="noopener">https://blog.csdn.net/qq_36810340</a></li></ul><blockquote><p>有趣的二进制</p></blockquote><h3 id="其他行业教学视频合集"><a href="#其他行业教学视频合集" class="headerlink" title="其他行业教学视频合集"></a>其他行业教学视频合集</h3><ul><li>知乎专栏 <a href="https://zhuanlan.zhihu.com/p/27664328" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/27664328</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;🐂🍺&quot;&gt;&lt;a href=&quot;#🐂🍺&quot; class=&quot;headerlink&quot; title=&quot;🐂🍺&quot;&gt;&lt;/a&gt;🐂🍺&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Fabrice Bellard &lt;a href=&quot;https://bellard.org/&quot; target=&quot;_
      
    
    </summary>
    
    
    
      <category term="博客" scheme="https://969975553.gitee.io/tags/%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>程序员修炼之道-读书笔记</title>
    <link href="https://969975553.gitee.io/2020/03/25/%E7%A8%8B%E5%BA%8F%E5%91%98%E4%BF%AE%E7%82%BC%E4%B9%8B%E9%81%93-%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    <id>https://969975553.gitee.io/2020/03/25/%E7%A8%8B%E5%BA%8F%E5%91%98%E4%BF%AE%E7%82%BC%E4%B9%8B%E9%81%93-%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/</id>
    <published>2020-03-25T12:00:18.000Z</published>
    <updated>2020-03-26T02:47:08.877Z</updated>
    
    <content type="html"><![CDATA[<ol><li>关心你的技艺  </li><li>思考你的工作  </li><li>提供选择不找蹩脚的借口  </li><li>不要容忍破窗户  </li><li>要做变化的催化剂（石头汤）  </li><li>注意大图景<br>欲求更好，常把好事变糟     -李尔王</li><li>使质量成为需求问题<br>知识上的投资，总能得到最好的回报     -富兰克林<br>如何投资自己的知识？<br>定期投资<br>多元化<br>管理风险<br>低买高卖<br>重新评估和平衡  </li><li>投资你的知识资产<br>每年学习一门新语言<br>每个月阅读一本技术书籍<br>上课<br>参与本地用户组织<br>实验不同环境<br>跟上潮流  </li><li>批判的思考你读到的和听到的  </li><li>你说什么和你怎么说一样重要  </li><li>不要重复你自己<br>为什么需要注释？都说需要注释，是因为糟糕的代码才需要注释，优秀的编码根本不需要！</li><li>让复用变得容易  </li><li>消除无关事物的影响<br>让你的代码保持解耦<br>避免使用全局数据<br>避免写相似函数  </li><li>不存在最终决策  </li><li>用曳光弹找到目标  </li><li>为了学习制作原型  </li><li>靠近问题领域编程  </li><li>估算，以避免意外  </li><li>通过代码对进度表进行迭代  </li><li>用纯文本保存知识  </li><li>熟练使用命令行shell  </li><li>用好编辑器  </li><li>总是使用源码控制  </li><li>修正问题bug，而不是指责  </li><li>“Selection”is broken  </li><li>不要恐慌  </li><li>不要假定要证明  </li><li>学习一种文本操纵语言<br>脚本语言的作用:<br>数据库的维护<br>java属性的访问<br>测试数据生成<br>写书<br>C与Object Pascal的接口<br>生成web文档  </li><li>编写能编写代码的代码  </li><li>你不可能写出完美的软件<br>没有什么东西比常识和坦率更让人感到惊讶了。<br>-爱默生  </li><li>通过合约进行设计  </li><li>早点崩溃  </li><li>如果不可能发生，请用断言确定它不会发生  </li><li>将异常用于异常的问题  </li><li>要有始有终  </li><li>使模块之间中耦合性降到最低  </li><li>要配置不要集成（多使用元数据metadata)  </li><li>将抽象放入代码，将细节放入元数据  </li><li>分析工作流，改善并发性  </li><li>用服务进行设计  </li><li>总是为并发性进行设计  </li><li>视图与模型分离  </li><li>使用黑板工作流方式  </li><li>不要靠巧合编程(先思考再编码)  </li><li>估算你算法的阶  </li><li>测试你的估算  </li><li>何时需要重构<br>重复<br>非正交性的设计<br>过时的知识<br>性能  </li><li>早重构，常重构(类似肿瘤)<br>重构的注意事项：<br>不要在重构中添加新功能<br>重构之前先确定有良好的测试<br>采用短小，深思熟虑的方式  </li><li>为测试而设计  </li><li>测试你的软件，否则你的用户就得测试</li><li>不要使用你不了解的向导代码（自己应该有自己代码生成器）</li><li>不要收集需求而是挖掘他们!  </li><li>抽象比细节活得更长久  </li><li>使用项目词汇表  </li><li>不要再盒子外面思考—找到盒子  </li><li>倾听反复出现的疑虑，请准备好  </li><li>对于有些事情，做甚于描述  </li><li>不要做形式方法的奴隶  </li><li>昂贵的工具不一定能做出合适的设计  </li><li>围绕功能而不是每个人职务分组  </li><li>不要使用手工流程  </li><li>早测试、常测试、自动测试  </li><li>要通过所有的测试，代码才算完成  </li><li>要通过蓄意破坏测试你的测试  </li><li>测试代码覆盖，而不是覆盖代码  </li><li>一个bug只抓一次  </li><li>把英语当成一种编程语言  </li><li>把文档建在里面，而不是拴在外面  </li><li>温和地超过用户期望  </li><li>在你的作品上签名  </li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ol&gt;
&lt;li&gt;关心你的技艺  &lt;/li&gt;
&lt;li&gt;思考你的工作  &lt;/li&gt;
&lt;li&gt;提供选择不找蹩脚的借口  &lt;/li&gt;
&lt;li&gt;不要容忍破窗户  &lt;/li&gt;
&lt;li&gt;要做变化的催化剂（石头汤）  &lt;/li&gt;
&lt;li&gt;注意大图景&lt;br&gt;欲求更好，常把好事变糟     -李尔
      
    
    </summary>
    
    
    
      <category term="读书笔记" scheme="https://969975553.gitee.io/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>C++链接问题总结</title>
    <link href="https://969975553.gitee.io/2020/03/25/C++%E9%93%BE%E6%8E%A5%E9%97%AE%E9%A2%98%E6%80%BB%E7%BB%93/"/>
    <id>https://969975553.gitee.io/2020/03/25/C++%E9%93%BE%E6%8E%A5%E9%97%AE%E9%A2%98%E6%80%BB%E7%BB%93/</id>
    <published>2020-03-25T11:53:37.000Z</published>
    <updated>2020-04-22T07:28:37.506Z</updated>
    
    <content type="html"><![CDATA[<h3 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h3><ol><li>QT5: LNK1123: 转换到 COFF 期间失败: 文件无效或损坏<br> 解答： vs的某个exe和系统的exe不匹配<br> cvtres.exe<br> <a href="http://www.cnblogs.com/newpanderking/articles/3372969.html" target="_blank" rel="noopener">http://www.cnblogs.com/newpanderking/articles/3372969.html</a><br> 实在不行就安装vs的sp1补丁包</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;列表&quot;&gt;&lt;a href=&quot;#列表&quot; class=&quot;headerlink&quot; title=&quot;列表&quot;&gt;&lt;/a&gt;列表&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;QT5: LNK1123: 转换到 COFF 期间失败: 文件无效或损坏&lt;br&gt; 解答： vs的某个exe和系统的exe不匹配&lt;
      
    
    </summary>
    
    
      <category term="技术" scheme="https://969975553.gitee.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="链接问题" scheme="https://969975553.gitee.io/tags/%E9%93%BE%E6%8E%A5%E9%97%AE%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>C++编译问题总结</title>
    <link href="https://969975553.gitee.io/2020/03/25/C++%E7%BC%96%E8%AF%91%E9%97%AE%E9%A2%98%E6%80%BB%E7%BB%93/"/>
    <id>https://969975553.gitee.io/2020/03/25/C++%E7%BC%96%E8%AF%91%E9%97%AE%E9%A2%98%E6%80%BB%E7%BB%93/</id>
    <published>2020-03-25T11:46:34.000Z</published>
    <updated>2020-03-26T02:47:08.257Z</updated>
    
    <content type="html"><![CDATA[<h3 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h3><ol><li>C4819 快速解决方案<br> 使用正则表达式搜索 [^\x00-\x7F]替换为空<br> 主要原因： 源码中含有非当前编码集识别的字符</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;列表&quot;&gt;&lt;a href=&quot;#列表&quot; class=&quot;headerlink&quot; title=&quot;列表&quot;&gt;&lt;/a&gt;列表&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;C4819 快速解决方案&lt;br&gt; 使用正则表达式搜索 [^\x00-\x7F]替换为空&lt;br&gt; 主要原因： 源码中含有非当前编码
      
    
    </summary>
    
    
      <category term="技术" scheme="https://969975553.gitee.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="编译问题" scheme="https://969975553.gitee.io/tags/%E7%BC%96%E8%AF%91%E9%97%AE%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>C++ tuple输出</title>
    <link href="https://969975553.gitee.io/2020/03/25/C++tuple/"/>
    <id>https://969975553.gitee.io/2020/03/25/C++tuple/</id>
    <published>2020-03-25T11:38:53.000Z</published>
    <updated>2020-04-07T06:26:56.151Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// c++11</span></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> Tuple, <span class="keyword">size_t</span> N&gt;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">tuple_print</span> &#123;</span></span><br><span class="line">   <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">(<span class="keyword">const</span> Tuple&amp; t, <span class="built_in">std</span>::ostream&amp; os)</span> </span>&#123;</span><br><span class="line">       tuple_print&lt;Tuple, N - <span class="number">1</span>&gt;::<span class="built_in">print</span>(t, os);</span><br><span class="line">       os &lt;&lt; <span class="string">", "</span> &lt;&lt; <span class="built_in">std</span>::<span class="built_in">get</span>&lt;N - <span class="number">1</span>&gt;(t);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">// 类模板的特化版本</span></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> Tuple&gt;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">tuple_print</span>&lt;Tuple, 1&gt; &#123;</span></span><br><span class="line">   <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">(<span class="keyword">const</span> Tuple&amp; t, <span class="built_in">std</span>::ostream&amp; os)</span> </span>&#123;</span><br><span class="line">       os &lt;&lt; <span class="string">"("</span> &lt;&lt; <span class="built_in">std</span>::<span class="built_in">get</span>&lt;<span class="number">0</span>&gt;(t);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// operator&lt;&lt;</span></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span>... Args&gt;</span><br><span class="line"><span class="built_in">std</span>::ostream&amp; <span class="keyword">operator</span> &lt;&lt;(<span class="built_in">std</span>::ostream&amp; os, <span class="keyword">const</span> <span class="built_in">std</span>::tuple&lt;Args...&gt;&amp; t) &#123;</span><br><span class="line">   tuple_print&lt;<span class="keyword">decltype</span>(t), <span class="keyword">sizeof</span>...(Args)&gt;::<span class="built_in">print</span>(t, os);</span><br><span class="line">   <span class="keyword">return</span> os &lt;&lt; <span class="string">")"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//C++14</span></span><br><span class="line"><span class="comment">// 数组转换为 tuple</span></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> Array, <span class="built_in">std</span>::<span class="keyword">size_t</span>... I&gt;</span><br><span class="line"><span class="function"><span class="keyword">auto</span> <span class="title">a2t_impl</span><span class="params">(<span class="keyword">const</span> Array&amp; a, <span class="built_in">std</span>::index_sequence&lt;I...&gt;)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">std</span>::make_tuple(a[I]...);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T, <span class="built_in">std</span>::<span class="keyword">size_t</span> N, <span class="keyword">typename</span> Indices = <span class="built_in">std</span>::make_index_sequence&lt;N&gt;&gt;</span><br><span class="line"><span class="keyword">auto</span> a2t(<span class="keyword">const</span> <span class="built_in">std</span>::<span class="built_in">array</span>&lt;T, N&gt;&amp; a) &#123;</span><br><span class="line">    <span class="keyword">return</span> a2t_impl(a, Indices&#123;&#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 漂亮地打印 tuple</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="class"><span class="keyword">class</span> <span class="title">Ch</span>, <span class="title">class</span> <span class="title">Tr</span>, <span class="title">class</span> <span class="title">Tuple</span>, <span class="title">std</span>:</span>:<span class="keyword">size_t</span>... Is&gt;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print_tuple_impl</span><span class="params">(<span class="built_in">std</span>::basic_ostream&lt;Ch, Tr&gt;&amp; os,</span></span></span><br><span class="line"><span class="function"><span class="params">    <span class="keyword">const</span> Tuple&amp; t,</span></span></span><br><span class="line"><span class="function"><span class="params">    <span class="built_in">std</span>::index_sequence&lt;Is...&gt;)</span> </span>&#123;</span><br><span class="line">    ((os &lt;&lt; (Is == <span class="number">0</span> ? <span class="string">""</span> : <span class="string">", "</span>) &lt;&lt; <span class="built_in">std</span>::<span class="built_in">get</span>&lt;Is&gt;(t)), ...);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="class"><span class="keyword">class</span> <span class="title">Ch</span>, <span class="title">class</span> <span class="title">Tr</span>, <span class="title">class</span>... <span class="title">Args</span>&gt;</span></span><br><span class="line"><span class="class"><span class="title">auto</span>&amp; <span class="title">operator</span>&lt;&lt;(std::basic_ostream&lt;Ch, Tr&gt;&amp; os, const std::tuple&lt;Args...&gt;&amp; t) &#123;</span></span><br><span class="line"><span class="class">    os &lt;&lt; "(";</span></span><br><span class="line"><span class="class">    print_tuple_impl(os, t, std::index_sequence_for&lt;Args...&gt;&#123;&#125;);</span></span><br><span class="line"><span class="class">    return os &lt;&lt; ")";</span></span><br><span class="line"><span class="class">&#125;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;
      
    
    </summary>
    
    
      <category term="技术" scheme="https://969975553.gitee.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="C++" scheme="https://969975553.gitee.io/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>Microsoft Defender ATP</title>
    <link href="https://969975553.gitee.io/2020/03/25/Microsoft%20Defender%20ATP/"/>
    <id>https://969975553.gitee.io/2020/03/25/Microsoft%20Defender%20ATP/</id>
    <published>2020-03-25T11:38:53.000Z</published>
    <updated>2020-04-09T11:14:05.848Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Microsoft-Defender-ATP"><a href="#Microsoft-Defender-ATP" class="headerlink" title="Microsoft Defender ATP"></a>Microsoft Defender ATP</h3><p> <img src="MicrosoftDefenderATP.svg" alt="xmind"></p><h3 id="Exploit-Protection"><a href="#Exploit-Protection" class="headerlink" title="Exploit Protection"></a>Exploit Protection</h3><ol><li><p>任意代码保护(ACG) Arbitrary Code Guard<br><a href="https://www.anquanke.com/post/id/145884" target="_blank" rel="noopener">https://www.anquanke.com/post/id/145884</a></p></li><li><p>阻止远程图像(Block remote images) 通过发送待远程图片的邮件，根据服务器图片的访问情况，确认邮件查阅</p></li><li><p>阻止不受信任的字体(Block untrusted fonts)</p></li><li><p>数据执行保护(DEP) DEP 的主要优点是可以帮助防止数据页执行代码</p></li><li><p>导出地址筛选(EAF)</p></li><li><p>强制ASLR</p></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Microsoft-Defender-ATP&quot;&gt;&lt;a href=&quot;#Microsoft-Defender-ATP&quot; class=&quot;headerlink&quot; title=&quot;Microsoft Defender ATP&quot;&gt;&lt;/a&gt;Microsoft Defender A
      
    
    </summary>
    
    
      <category term="技术" scheme="https://969975553.gitee.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="C++" scheme="https://969975553.gitee.io/tags/C/"/>
    
      <category term="Windows安全" scheme="https://969975553.gitee.io/tags/Windows%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>c++序列化</title>
    <link href="https://969975553.gitee.io/2020/03/25/c++%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    <id>https://969975553.gitee.io/2020/03/25/c++%E5%BA%8F%E5%88%97%E5%8C%96/</id>
    <published>2020-03-25T11:38:53.000Z</published>
    <updated>2020-03-26T02:47:08.179Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
      <category term="技术" scheme="https://969975553.gitee.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="C++" scheme="https://969975553.gitee.io/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>高低权限进程消息通信</title>
    <link href="https://969975553.gitee.io/2020/03/25/%E9%AB%98%E4%BD%8E%E6%9D%83%E9%99%90%E6%B6%88%E6%81%AF/"/>
    <id>https://969975553.gitee.io/2020/03/25/%E9%AB%98%E4%BD%8E%E6%9D%83%E9%99%90%E6%B6%88%E6%81%AF/</id>
    <published>2020-03-25T11:17:35.000Z</published>
    <updated>2020-03-26T02:47:09.112Z</updated>
    
    <content type="html"><![CDATA[<p><img src="result.png" alt="测试结果"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ChangeFilter</span><span class="params">(m_hWnd, WM_NOTEPAPER_SHOWTIP, MSGFLT_ALLOW)</span></span>;</span><br><span class="line"></span><br><span class="line">DWORD CMainWindow::ChangeFilter(HWND hwnd, UINT uMsg, DWORD dwMsgFlt)</span><br><span class="line">&#123;</span><br><span class="line">    BOOL                fSuccess = FALSE;</span><br><span class="line">    DWORD            dwMsgFltInfo = MSGFLTINFO_NONE;</span><br><span class="line">    CHANGEFILTERSTRUCT  ChangeFilterStruct;</span><br><span class="line"></span><br><span class="line">    ChangeFilterStruct.cbSize = <span class="keyword">sizeof</span>(CHANGEFILTERSTRUCT);</span><br><span class="line">    fSuccess = ChangeWindowMessageFilterEx(hwnd, uMsg, dwMsgFlt, &amp;ChangeFilterStruct);</span><br><span class="line">    dwMsgFltInfo = ChangeFilterStruct.ExtStatus;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!fSuccess) &#123;</span><br><span class="line">        wprintf(<span class="string">L"\nChangeWindowMessageFilterEx failed with %lu"</span>, GetLastError());</span><br><span class="line">        dwMsgFltInfo = <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> dwMsgFltInfo;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;result.png&quot; alt=&quot;测试结果&quot;&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;sp
      
    
    </summary>
    
    
      <category term="技术" scheme="https://969975553.gitee.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="windows安全" scheme="https://969975553.gitee.io/tags/windows%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>window安全概念</title>
    <link href="https://969975553.gitee.io/2020/03/25/window%E5%AE%89%E5%85%A8%E6%A6%82%E5%BF%B5/"/>
    <id>https://969975553.gitee.io/2020/03/25/window%E5%AE%89%E5%85%A8%E6%A6%82%E5%BF%B5/</id>
    <published>2020-03-25T11:14:42.000Z</published>
    <updated>2020-04-22T07:20:45.304Z</updated>
    
    <content type="html"><![CDATA[<p>整理于 <a href="http://www.cppblog.com/weiym/archive/2013/08/25/202751.html?opt=admin" target="_blank" rel="noopener">http://www.cppblog.com/weiym/archive/2013/08/25/202751.html?opt=admin</a></p><p> <img src="https://note.youdao.com/yws/public/resource/0a79a67d0cd6f714303f83f564ba0dac/xmlnote/0A94AF3BCA574FCA9324E04A33A843E7/12904" alt="xmind"></p><h2 id="判断是否管理员权限"><a href="#判断是否管理员权限" class="headerlink" title="判断是否管理员权限"></a>判断是否管理员权限</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Windows API IsUserAnAdmin()</span></span><br><span class="line"><span class="function">BOOL <span class="title">Am_I_In_Admin_Group</span><span class="params">(BOOL bCheckAdminMode <span class="comment">/*= FALSE*/</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    BOOL   fAdmin;</span><br><span class="line">    HANDLE  hThread;</span><br><span class="line">    TOKEN_GROUPS *ptg = <span class="literal">NULL</span>;</span><br><span class="line">    DWORD  cbTokenGroups;</span><br><span class="line">    DWORD  dwGroup;</span><br><span class="line">    PSID   psidAdmin;</span><br><span class="line">    SID_IDENTIFIER_AUTHORITY SystemSidAuthority= SECURITY_NT_AUTHORITY;</span><br><span class="line">    <span class="keyword">if</span> ( !OpenThreadToken ( GetCurrentThread(), TOKEN_QUERY, FALSE, &amp;hThread))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> ( GetLastError() == ERROR_NO_TOKEN)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (! OpenProcessToken ( GetCurrentProcess(), TOKEN_QUERY, </span><br><span class="line">                &amp;hThread))</span><br><span class="line">                <span class="keyword">return</span> ( FALSE);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">            <span class="keyword">return</span> ( FALSE);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( GetTokenInformation ( hThread, TokenGroups, <span class="literal">NULL</span>, <span class="number">0</span>, &amp;cbTokenGroups))</span><br><span class="line">        <span class="keyword">return</span> ( FALSE);</span><br><span class="line">    <span class="keyword">if</span> ( GetLastError() != ERROR_INSUFFICIENT_BUFFER)</span><br><span class="line">        <span class="keyword">return</span> ( FALSE);</span><br><span class="line">    <span class="keyword">if</span> ( ! ( ptg= (TOKEN_GROUPS*)_alloca ( cbTokenGroups))) </span><br><span class="line">        <span class="keyword">return</span> ( FALSE);</span><br><span class="line">    <span class="keyword">if</span> ( !GetTokenInformation ( hThread, TokenGroups, ptg, cbTokenGroups,</span><br><span class="line">        &amp;cbTokenGroups) )</span><br><span class="line">        <span class="keyword">return</span> ( FALSE);</span><br><span class="line">    <span class="keyword">if</span> ( ! AllocateAndInitializeSid ( &amp;SystemSidAuthority, <span class="number">2</span>, </span><br><span class="line">        SECURITY_BUILTIN_DOMAIN_RID, </span><br><span class="line">        DOMAIN_ALIAS_RID_ADMINS,</span><br><span class="line">        <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, &amp;psidAdmin) )</span><br><span class="line">        <span class="keyword">return</span> ( FALSE);</span><br><span class="line">    fAdmin= FALSE;</span><br><span class="line">    <span class="keyword">for</span> ( dwGroup= <span class="number">0</span>; dwGroup &lt; ptg-&gt;GroupCount; dwGroup++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> ( EqualSid ( ptg-&gt;Groups[dwGroup].Sid, psidAdmin))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(bCheckAdminMode)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>((ptg-&gt;Groups[dwGroup].Attributes) &amp; SE_GROUP_ENABLED)</span><br><span class="line">                &#123;</span><br><span class="line">                    fAdmin = TRUE;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                fAdmin = TRUE;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    FreeSid ( psidAdmin);</span><br><span class="line">    <span class="keyword">return</span> ( fAdmin);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//注意只有原来是Disable的权限才可以提成Enable， 如果原来就没有这个权限， 是提不上去的。</span></span><br><span class="line"></span><br><span class="line"><span class="function">BOOL <span class="title">EnablePrivilege</span><span class="params">(HANDLE hToken, LPCTSTR lpszPrivilegeName)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    TOKEN_PRIVILEGES tkp = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">    BOOL bRet = LookupPrivilegeValue( <span class="literal">NULL</span>, lpszPrivilegeName, &amp;tkp.Privileges[<span class="number">0</span>].Luid );</span><br><span class="line">    <span class="keyword">if</span>(!bRet) <span class="keyword">return</span> FALSE;</span><br><span class="line"></span><br><span class="line">    tkp.PrivilegeCount = <span class="number">1</span>;</span><br><span class="line">    tkp.Privileges[<span class="number">0</span>].Attributes = SE_PRIVILEGE_ENABLED;</span><br><span class="line">    bRet = AdjustTokenPrivileges( hToken, FALSE, &amp;tkp, <span class="keyword">sizeof</span>(tkp), <span class="literal">NULL</span>, <span class="literal">NULL</span> );</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> bRet;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="如何判断用户的进程完整性级别"><a href="#如何判断用户的进程完整性级别" class="headerlink" title="如何判断用户的进程完整性级别"></a>如何判断用户的进程完整性级别</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> CIntegrityLevel::Print(<span class="built_in">std</span>::wostream&amp; os) <span class="keyword">const</span></span><br><span class="line">&#123;</span><br><span class="line">    SID* pSid = (SID*)m_pIntegrity-&gt;Label.Sid;</span><br><span class="line">    DWORD rid = pSid-&gt;SubAuthority[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">    LPCTSTR lpszIntegrity = <span class="string">L"Unknown"</span>;</span><br><span class="line">    <span class="keyword">switch</span> (rid)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">case</span> SECURITY_MANDATORY_UNTRUSTED_RID:</span><br><span class="line">        &#123;</span><br><span class="line">            lpszIntegrity = <span class="string">L"Untrusted"</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">case</span> SECURITY_MANDATORY_LOW_RID:</span><br><span class="line">        &#123;</span><br><span class="line">            lpszIntegrity = <span class="string">L"Low"</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">case</span> SECURITY_MANDATORY_MEDIUM_RID:</span><br><span class="line">        &#123;</span><br><span class="line">            lpszIntegrity = <span class="string">L"Medium"</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">case</span> SECURITY_MANDATORY_MEDIUM_PLUS_RID:</span><br><span class="line">        &#123;</span><br><span class="line">            lpszIntegrity = <span class="string">L"Medium +"</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">case</span> SECURITY_MANDATORY_HIGH_RID:</span><br><span class="line">        &#123;</span><br><span class="line">            lpszIntegrity = <span class="string">L"High"</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">case</span> SECURITY_MANDATORY_SYSTEM_RID:</span><br><span class="line">        &#123;</span><br><span class="line">            lpszIntegrity = <span class="string">L"System"</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">        &#123;</span><br><span class="line">            lpszIntegrity = <span class="string">L"XXXXX"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    os &lt;&lt; <span class="string">L"Integrity: "</span> &lt;&lt; lpszIntegrity &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="如何指定程序默认启动运行的级别"><a href="#如何指定程序默认启动运行的级别" class="headerlink" title="如何指定程序默认启动运行的级别?"></a>如何指定程序默认启动运行的级别?</h2><p>在VC里配置Manifest文件.</p><ul><li><p>asInvoker：默认选项，新的进程将简单地继承其父进程的访问令牌</p></li><li><p>highestAvailable：应用程序会选择该用户允许范围内尽可能高的权限。对于标准用户来说，该选项与asInvoker一样，而对于管理员来说，这就意味着请求Admin令牌。</p></li><li><p>requireAdministrator：应用程序需要Admin令牌。运行该程序时，标准用户将要输入管理员的用户名和密码，而管理员则要在弹出的确认对话框中进行确认。</p></li><li><p><img src="https://note.youdao.com/yws/public/resource/df3ab20df5c03ba0ad1faef9f79e2f72/xmlnote/DD710385513C4681AA35C58A73D66AA4/12900" alt="AAA"></p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;整理于 &lt;a href=&quot;http://www.cppblog.com/weiym/archive/2013/08/25/202751.html?opt=admin&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://www.cppblog.com
      
    
    </summary>
    
    
      <category term="技术" scheme="https://969975553.gitee.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="windows安全" scheme="https://969975553.gitee.io/tags/windows%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>程序员口头禅</title>
    <link href="https://969975553.gitee.io/2020/03/25/%E7%A8%8B%E5%BA%8F%E5%91%98%E5%8F%A3%E5%A4%B4%E7%A6%85/"/>
    <id>https://969975553.gitee.io/2020/03/25/%E7%A8%8B%E5%BA%8F%E5%91%98%E5%8F%A3%E5%A4%B4%E7%A6%85/</id>
    <published>2020-03-25T09:26:26.000Z</published>
    <updated>2020-04-22T07:28:51.912Z</updated>
    
    <content type="html"><![CDATA[<ul><li>这个不是我做的</li><li>这个做不了</li><li>在我的电脑上是好的</li><li>换个浏览器试试</li><li>之前代码我没动过</li><li>这个可以做，就是要很多时间</li><li>这个操作用户不会这样干</li><li>这坨代码太臭了</li><li>下个版本做</li><li>需求没有说清楚</li><li>这个不支持</li><li>原本是好的吗？</li><li>你会不会操作(测)？</li><li>啥都没改，自动好了</li></ul><h3 id="欢迎补充"><a href="#欢迎补充" class="headerlink" title="欢迎补充~"></a>欢迎补充~</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;这个不是我做的&lt;/li&gt;
&lt;li&gt;这个做不了&lt;/li&gt;
&lt;li&gt;在我的电脑上是好的&lt;/li&gt;
&lt;li&gt;换个浏览器试试&lt;/li&gt;
&lt;li&gt;之前代码我没动过&lt;/li&gt;
&lt;li&gt;这个可以做，就是要很多时间&lt;/li&gt;
&lt;li&gt;这个操作用户不会这样干&lt;/li&gt;
&lt;li&gt;这
      
    
    </summary>
    
    
    
      <category term="生活" scheme="https://969975553.gitee.io/tags/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title>生活</title>
    <link href="https://969975553.gitee.io/2020/03/25/%E7%94%9F%E6%B4%BB/"/>
    <id>https://969975553.gitee.io/2020/03/25/%E7%94%9F%E6%B4%BB/</id>
    <published>2020-03-25T09:26:05.000Z</published>
    <updated>2020-03-26T02:47:08.708Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>windows安全</title>
    <link href="https://969975553.gitee.io/2020/03/24/windows%E5%AE%89%E5%85%A8/"/>
    <id>https://969975553.gitee.io/2020/03/24/windows%E5%AE%89%E5%85%A8/</id>
    <published>2020-03-24T11:13:20.000Z</published>
    <updated>2020-04-22T07:23:36.649Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-用户权限"><a href="#1-用户权限" class="headerlink" title="1.用户权限"></a>1.用户权限</h3><p>管理员Administrator账户        Administrators组<br>权限：</p><p>标准用户（受限用户）              user组</p><p>来宾用户                                   guest组</p><p>密码存在sam数据库</p><h3 id="2-sid"><a href="#2-sid" class="headerlink" title="2.sid"></a>2.sid</h3><p>查看Sid<br>whoami  /user</p><p>SID                      组                      用途<br>s-1-1-0               everyone<br>s-1-2-0               local<br>s-1-3-0               Creator owner<br>s-1-3-1               Creator Group</p><h3 id="3-ACL-访问控制列表"><a href="#3-ACL-访问控制列表" class="headerlink" title="3.ACL  访问控制列表"></a>3.ACL  访问控制列表</h3><p>登录给一个安全访问令牌（SAT） TOKEN 包含sid信息、</p><p>每个对象都有Acl    ACL包含了sid的信息</p><h3 id="4-没有UAC文件系统和注册表虚拟化技术"><a href="#4-没有UAC文件系统和注册表虚拟化技术" class="headerlink" title="4.没有UAC文件系统和注册表虚拟化技术"></a>4.没有UAC文件系统和注册表虚拟化技术</h3><h3 id="5-应用程序清单文件"><a href="#5-应用程序清单文件" class="headerlink" title="5.应用程序清单文件"></a>5.应用程序清单文件</h3><p>1、RunAsInvoker<br>2、RunAsHighest<br>3、RunAsAdmin</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;1-用户权限&quot;&gt;&lt;a href=&quot;#1-用户权限&quot; class=&quot;headerlink&quot; title=&quot;1.用户权限&quot;&gt;&lt;/a&gt;1.用户权限&lt;/h3&gt;&lt;p&gt;管理员Administrator账户        Administrators组&lt;br&gt;权限：&lt;/p&gt;
&lt;
      
    
    </summary>
    
    
      <category term="技术" scheme="https://969975553.gitee.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="windows安全" scheme="https://969975553.gitee.io/tags/windows%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>botan 编译</title>
    <link href="https://969975553.gitee.io/2020/03/24/botan%20%E7%BC%96%E8%AF%91/"/>
    <id>https://969975553.gitee.io/2020/03/24/botan%20%E7%BC%96%E8%AF%91/</id>
    <published>2020-03-24T06:44:37.000Z</published>
    <updated>2020-04-07T07:44:41.521Z</updated>
    
    <content type="html"><![CDATA[<p><img src="%E5%AF%86%E7%A0%81%E5%AD%A6.png" alt="密码学"></p><p>“C:\Program Files (x86)\Microsoft Visual Studio 14.0\Common7\Tools\VsDevCmd.bat”</p><p>python configure.py –cc=msvc –msvc-runtime=MT –disable-shared-library –cpu=x86_32 –cc-bin=”‘C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\bin\cl.exe’”</p><p>–list-modules</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;%E5%AF%86%E7%A0%81%E5%AD%A6.png&quot; alt=&quot;密码学&quot;&gt;&lt;/p&gt;
&lt;p&gt;“C:\Program Files (x86)\Microsoft Visual Studio 14.0\Common7\Tools\VsDevCmd.
      
    
    </summary>
    
    
      <category term="技术" scheme="https://969975553.gitee.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="编译" scheme="https://969975553.gitee.io/tags/%E7%BC%96%E8%AF%91/"/>
    
      <category term="windows" scheme="https://969975553.gitee.io/tags/windows/"/>
    
      <category term="第三方库" scheme="https://969975553.gitee.io/tags/%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>利用标准c++流读文件</title>
    <link href="https://969975553.gitee.io/2020/03/24/%E8%AF%BB%E6%96%87%E4%BB%B6/"/>
    <id>https://969975553.gitee.io/2020/03/24/%E8%AF%BB%E6%96%87%E4%BB%B6/</id>
    <published>2020-03-24T06:44:37.000Z</published>
    <updated>2020-03-26T02:47:09.036Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">do</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">string</span> tmppath = <span class="string">"aa.zip"</span>;</span><br><span class="line">    <span class="built_in">std</span>::<span class="function">ifstream <span class="title">is</span><span class="params">(tmppath.c_str(), <span class="built_in">std</span>::ios_base::binary, _SH_DENYRW)</span></span>;</span><br><span class="line">  </span><br><span class="line">    <span class="built_in">std</span>::streampos current_pos1 = is.tellg();<span class="comment">//记录下当前位置 </span></span><br><span class="line">    is.seekg(<span class="number">0</span>, <span class="built_in">std</span>::ios::<span class="built_in">end</span>);<span class="comment">//移动到文件尾</span></span><br><span class="line">    <span class="built_in">std</span>::streampos nSize = is.tellg();</span><br><span class="line">    is.seekg(current_pos1);</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; nSize &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    is.<span class="built_in">clear</span>();</span><br><span class="line">    is.seekg(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">string</span> fileContent;</span><br><span class="line">    <span class="built_in">std</span>::copy(<span class="built_in">std</span>::istream_iterator&lt;<span class="keyword">unsigned</span> <span class="keyword">char</span>&gt;(is), <span class="built_in">std</span>::istream_iterator&lt;<span class="keyword">unsigned</span> <span class="keyword">char</span>&gt;(), <span class="built_in">std</span>::back_inserter(fileContent));</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; fileContent.<span class="built_in">size</span>() &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    is.<span class="built_in">clear</span>();</span><br><span class="line">    is.seekg(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">string</span> fileContent2;</span><br><span class="line">    <span class="built_in">std</span>::copy(<span class="built_in">std</span>::istreambuf_iterator&lt;<span class="keyword">char</span>&gt;(is), <span class="built_in">std</span>::istreambuf_iterator&lt;<span class="keyword">char</span>&gt;(), <span class="built_in">std</span>::back_inserter(fileContent2));</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; fileContent2.<span class="built_in">size</span>() &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    is.<span class="built_in">clear</span>();</span><br><span class="line">    is.seekg(<span class="number">0</span>);</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="keyword">char</span>&gt; vecCHAR;</span><br><span class="line">    <span class="built_in">std</span>::copy(<span class="built_in">std</span>::istream_iterator&lt;<span class="keyword">char</span>&gt;(is), <span class="built_in">std</span>::istream_iterator&lt;<span class="keyword">char</span>&gt;(), <span class="built_in">std</span>::back_inserter(vecCHAR));</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; vecCHAR.<span class="built_in">size</span>() &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;
      
    
    </summary>
    
    
      <category term="技术" scheme="https://969975553.gitee.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="c++" scheme="https://969975553.gitee.io/tags/c/"/>
    
      <category term="标准库" scheme="https://969975553.gitee.io/tags/%E6%A0%87%E5%87%86%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>Console 工程设置</title>
    <link href="https://969975553.gitee.io/2020/03/24/Console%20%E5%B7%A5%E7%A8%8B%E8%AE%BE%E7%BD%AE/"/>
    <id>https://969975553.gitee.io/2020/03/24/Console%20%E5%B7%A5%E7%A8%8B%E8%AE%BE%E7%BD%AE/</id>
    <published>2020-03-24T06:44:37.000Z</published>
    <updated>2020-04-22T07:27:16.044Z</updated>
    
    <content type="html"><![CDATA[<p>c++  控制台</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">SetConsoleOutputCP (<span class="number">65001</span>);</span><br><span class="line">CONSOLE_FONT_INFOEX info = &#123; <span class="number">0</span> &#125;; <span class="comment">// 以下设置字体来支持中文显示。</span></span><br><span class="line">info.cbSize = <span class="keyword">sizeof</span>(info);</span><br><span class="line">info.dwFontSize.Y = <span class="number">16</span>; <span class="comment">// leave X as zero</span></span><br><span class="line">info.FontWeight = FW_NORMAL;</span><br><span class="line">wcscpy(info.FaceName, <span class="string">L"Consolas"</span>);</span><br><span class="line">SetCurrentConsoleFontEx(GetStdHandle(STD_OUTPUT_HANDLE), <span class="literal">NULL</span>, &amp;info);</span><br></pre></td></tr></table></figure><p>copy from vlpp</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> UI</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">namespace</span> <span class="built_in">Console</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="class"><span class="keyword">class</span> <span class="title">Console</span></span></span><br><span class="line"><span class="class">        &#123;</span></span><br><span class="line">        <span class="keyword">public</span>:</span><br><span class="line">            <span class="comment">/// &lt;summary&gt;Write to the command line window.&lt;/summary&gt;</span></span><br><span class="line">            <span class="comment">/// &lt;param name="string"&gt;Content to write.&lt;/param&gt;</span></span><br><span class="line">            <span class="comment">/// &lt;param name="length"&gt;Size of the content in wchar_t. The zero terminator is not</span></span><br><span class="line">            <span class="comment">/// included.&lt;/param&gt;</span></span><br><span class="line">            <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Write</span><span class="params">(<span class="keyword">const</span> <span class="keyword">wchar_t</span>* <span class="built_in">string</span>, <span class="keyword">int</span> length)</span></span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">/// &lt;summary&gt;Write to the command line window.&lt;/summary&gt;</span></span><br><span class="line">            <span class="comment">/// &lt;param name="string"&gt;Content to write.&lt;/param&gt;</span></span><br><span class="line">            <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Write</span><span class="params">(<span class="keyword">const</span> <span class="keyword">wchar_t</span>* <span class="built_in">string</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">/// &lt;summary&gt;Write to the command line window.&lt;/summary&gt;</span></span><br><span class="line">            <span class="comment">/// &lt;param name="string"&gt;Content to write.&lt;/param&gt;</span></span><br><span class="line">            <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Write</span><span class="params">(<span class="keyword">const</span> <span class="built_in">std</span>::<span class="built_in">wstring</span>&amp; <span class="built_in">string</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">/// &lt;summary&gt;Write to the command line window with a CRLF.&lt;/summary&gt;</span></span><br><span class="line">            <span class="comment">/// &lt;param name="string"&gt;Content to write.&lt;/param&gt;</span></span><br><span class="line">            <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">WriteLine</span><span class="params">(<span class="keyword">const</span> <span class="built_in">std</span>::<span class="built_in">wstring</span>&amp; <span class="built_in">string</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">/// &lt;summary&gt;Read from the command line window.&lt;/summary&gt;</span></span><br><span class="line">            <span class="comment">/// &lt;returns&gt;The whole line read from the command line window.&lt;/returns&gt;</span></span><br><span class="line">            <span class="keyword">static</span> <span class="built_in">std</span>::<span class="function"><span class="built_in">wstring</span> <span class="title">Read</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">            <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">SetColor</span><span class="params">(<span class="keyword">bool</span> red, <span class="keyword">bool</span> green, <span class="keyword">bool</span> blue, <span class="keyword">bool</span> light)</span></span>;</span><br><span class="line">            <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">SetTitle</span><span class="params">(<span class="keyword">const</span> <span class="built_in">std</span>::<span class="built_in">wstring</span>&amp; <span class="built_in">string</span>)</span></span>;</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125; <span class="comment">// namespace console</span></span><br><span class="line">&#125; <span class="comment">// namespace UI</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;c++  控制台&lt;/p&gt;
&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;
      
    
    </summary>
    
    
      <category term="技术" scheme="https://969975553.gitee.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="c++" scheme="https://969975553.gitee.io/tags/c/"/>
    
      <category term="标准库" scheme="https://969975553.gitee.io/tags/%E6%A0%87%E5%87%86%E5%BA%93/"/>
    
  </entry>
  
</feed>
